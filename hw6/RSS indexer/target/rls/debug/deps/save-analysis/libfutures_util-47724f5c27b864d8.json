{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4","program":"/home/vpatil/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=47724f5c27b864d8","-C","extra-filename=-47724f5c27b864d8","--out-dir","/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps","-L","dependency=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps","--extern","futures_core=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libfutures_core-ab40af1b13ecf0cc.rmeta","--extern","futures_io=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libfutures_io-f7750d58e8a71e83.rmeta","--extern","futures_task=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libfutures_task-083e2780d542220f.rmeta","--extern","memchr=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libmemchr-c14d9e0084f4f5c1.rmeta","--extern","pin_utils=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libpin_utils-7d8766fdb539b9d5.rmeta","--extern","slab=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libslab-9c1f11f900eb1368.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/vpatil/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libfutures_util-47724f5c27b864d8.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[11964834245967443693,4467247362660448039]},"crate_root":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src","external_crates":[{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15682290646506683676,14718567046286836371]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[13518982493124233533,12391336102434922224]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7248215118149796407,5784829660206374225]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17708477222956396348,13233362623726710952]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8402686647371542786,4893528090212846480]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12429915295247123903,16936150619785298801]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3561444793845825560,808161116134598189]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15626283292208498598,10979253865745053481]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9878202165149462890,17449959146959421140]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[749461474745232681,11698756817203002328]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3051499033766592682,13434072314992821142]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5967091660134880975,16425511823645009085]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10102111148853945701,5773407069226950463]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7496764460755907832,13683447438519276603]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":15,"id":{"name":"futures_core","disambiguator":[4621264163170888256,3348305257838930911]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":16,"id":{"name":"pin_utils","disambiguator":[8387619956116884623,7116796865736624713]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","num":17,"id":{"name":"futures_task","disambiguator":[3967695034027916529,1446714099241761075]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","num":18,"id":{"name":"slab","disambiguator":[4089959928925939311,368198836259449931]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","num":19,"id":{"name":"futures_io","disambiguator":[9581135531412850667,2848304591059276143]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_until.rs","num":20,"id":{"name":"memchr","disambiguator":[10424658742243726858,12785040814111731563]}}],"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":0,"byte_end":3844,"line_start":1,"line_end":122,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":131},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":1745,"byte_end":1750,"line_start":38,"line_end":38,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":7},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":1771,"byte_end":1778,"line_start":39,"line_end":39,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":168},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":2015,"byte_end":2028,"line_start":52,"line_end":52,"column_start":23,"column_end":36},"alias_span":null,"name":"core_reexport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":11},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4105,"byte_end":4114,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":15,"index":14},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4116,"byte_end":4130,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":15,"index":17},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4164,"byte_end":4175,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":2,"index":8075},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4177,"byte_end":4183,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":15,"index":32},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4185,"byte_end":4194,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":17,"index":111},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4220,"byte_end":4229,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":17,"index":77},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4231,"byte_end":4245,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":17,"index":132},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4247,"byte_end":4262,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4701},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8285,"byte_end":8296,"line_start":60,"line_end":60,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8710,"byte_end":8716,"line_start":74,"line_end":74,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4378,"byte_end":4385,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4387,"byte_end":4400,"line_start":17,"line_end":17,"column_start":14,"column_end":27},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4624},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4402,"byte_end":4406,"line_start":17,"line_end":17,"column_start":29,"column_end":33},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4408,"byte_end":4417,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4669},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4419,"byte_end":4426,"line_start":17,"line_end":17,"column_start":46,"column_end":53},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4633},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4428,"byte_end":4438,"line_start":17,"line_end":17,"column_start":55,"column_end":65},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4642},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4440,"byte_end":4443,"line_start":17,"line_end":17,"column_start":67,"column_end":70},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4692},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4445,"byte_end":4455,"line_start":17,"line_end":17,"column_start":72,"column_end":82},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4656},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4457,"byte_end":4461,"line_start":17,"line_end":17,"column_start":84,"column_end":88},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4683},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4463,"byte_end":4472,"line_start":17,"line_end":17,"column_start":90,"column_end":99},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4701},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4524,"byte_end":4535,"line_start":21,"line_end":21,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4683,"byte_end":4689,"line_start":28,"line_end":28,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4728},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4740,"byte_end":4747,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4741},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4749,"byte_end":4756,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4767},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4758,"byte_end":4768,"line_start":32,"line_end":32,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4753},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4770,"byte_end":4779,"line_start":32,"line_end":32,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4781},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4781,"byte_end":4791,"line_start":32,"line_end":32,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4790},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4793,"byte_end":4799,"line_start":32,"line_end":32,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4804},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4801,"byte_end":4806,"line_start":32,"line_end":32,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4837},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4808,"byte_end":4814,"line_start":32,"line_end":32,"column_start":73,"column_end":79},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":745},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4816,"byte_end":4832,"line_start":32,"line_end":32,"column_start":81,"column_end":97},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4838,"byte_end":4850,"line_start":33,"line_end":33,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4853},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4852,"byte_end":4864,"line_start":33,"line_end":33,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":912},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4988,"byte_end":4992,"line_start":42,"line_end":42,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4903},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4994,"byte_end":4998,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":939},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5039,"byte_end":5046,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4909},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5048,"byte_end":5055,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":964},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5102,"byte_end":5112,"line_start":48,"line_end":48,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4915},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5114,"byte_end":5123,"line_start":48,"line_end":48,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4928},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5161,"byte_end":5173,"line_start":51,"line_end":51,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5213,"byte_end":5220,"line_start":54,"line_end":54,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5222,"byte_end":5228,"line_start":54,"line_end":54,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1053},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5265,"byte_end":5268,"line_start":57,"line_end":57,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1050},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5270,"byte_end":5272,"line_start":57,"line_end":57,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5274,"byte_end":5279,"line_start":57,"line_end":57,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4940},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5281,"byte_end":5286,"line_start":57,"line_end":57,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5321,"byte_end":5325,"line_start":60,"line_end":60,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1079},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5327,"byte_end":5332,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5334,"byte_end":5339,"line_start":60,"line_end":60,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5341,"byte_end":5346,"line_start":60,"line_end":60,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4950},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5348,"byte_end":5352,"line_start":60,"line_end":60,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":4972},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5354,"byte_end":5359,"line_start":60,"line_end":60,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5000},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5361,"byte_end":5366,"line_start":60,"line_end":60,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5034},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5368,"byte_end":5373,"line_start":60,"line_end":60,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5468,"byte_end":5476,"line_start":65,"line_end":65,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1124},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5478,"byte_end":5485,"line_start":65,"line_end":65,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1158},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5524,"byte_end":5530,"line_start":68,"line_end":68,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5127},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5532,"byte_end":5538,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1185},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5637,"byte_end":5647,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5135},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5649,"byte_end":5658,"line_start":73,"line_end":73,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1215},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5706,"byte_end":5714,"line_start":77,"line_end":77,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1218},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5716,"byte_end":5725,"line_start":77,"line_end":77,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1222},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5727,"byte_end":5736,"line_start":77,"line_end":77,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5738,"byte_end":5747,"line_start":77,"line_end":77,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5141},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5749,"byte_end":5756,"line_start":77,"line_end":77,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5159},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5758,"byte_end":5766,"line_start":77,"line_end":77,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5182},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5768,"byte_end":5776,"line_start":77,"line_end":77,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5210},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5778,"byte_end":5786,"line_start":77,"line_end":77,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1279},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5891,"byte_end":5903,"line_start":83,"line_end":83,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5905,"byte_end":5915,"line_start":83,"line_end":83,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1307},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5962,"byte_end":5972,"line_start":86,"line_end":86,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5296},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5974,"byte_end":5983,"line_start":86,"line_end":86,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":6080,"byte_end":6089,"line_start":91,"line_end":91,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5304},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":6091,"byte_end":6099,"line_start":91,"line_end":91,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5310},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":6137,"byte_end":6143,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5347},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":6280,"byte_end":6289,"line_start":100,"line_end":100,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5364},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":6291,"byte_end":6300,"line_start":100,"line_end":100,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5378},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":6302,"byte_end":6313,"line_start":100,"line_end":100,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5374},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":6315,"byte_end":6332,"line_start":100,"line_end":100,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":5389},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":6334,"byte_end":6341,"line_start":100,"line_end":100,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3273,"byte_end":3282,"line_start":95,"line_end":95,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3284,"byte_end":3296,"line_start":95,"line_end":95,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":62},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146696,"byte_end":146705,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":15,"index":65},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146707,"byte_end":146721,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":15,"index":82},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146755,"byte_end":146766,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":15,"index":68},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146768,"byte_end":146774,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":15,"index":97},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146776,"byte_end":146785,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5640},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":152762,"byte_end":152768,"line_start":121,"line_end":121,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1439}},{"kind":"Use","ref_id":{"krate":0,"index":5794},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154005,"byte_end":154016,"line_start":159,"line_end":159,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1439}},{"kind":"Use","ref_id":{"krate":0,"index":5402},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146901,"byte_end":146906,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5417},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146908,"byte_end":146915,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5431},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146917,"byte_end":146923,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5443},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146925,"byte_end":146934,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1580},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146936,"byte_end":146942,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1632},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146944,"byte_end":146953,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5473},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146955,"byte_end":146962,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1713},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146964,"byte_end":146968,"line_start":16,"line_end":16,"column_start":68,"column_end":72},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1768},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146970,"byte_end":146977,"line_start":16,"line_end":16,"column_start":74,"column_end":81},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5504},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146979,"byte_end":146983,"line_start":16,"line_end":16,"column_start":83,"column_end":87},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1871},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146985,"byte_end":146992,"line_start":16,"line_end":16,"column_start":89,"column_end":96},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1920},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146998,"byte_end":147001,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5535},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147003,"byte_end":147007,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2043},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147009,"byte_end":147013,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5551},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147015,"byte_end":147023,"line_start":17,"line_end":17,"column_start":22,"column_end":30},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2375},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147025,"byte_end":147029,"line_start":17,"line_end":17,"column_start":32,"column_end":36},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5543},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147031,"byte_end":147045,"line_start":17,"line_end":17,"column_start":38,"column_end":52},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5563},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147047,"byte_end":147051,"line_start":17,"line_end":17,"column_start":54,"column_end":58},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2105},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147053,"byte_end":147062,"line_start":17,"line_end":17,"column_start":60,"column_end":69},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2461},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147064,"byte_end":147073,"line_start":17,"line_end":17,"column_start":71,"column_end":80},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5516},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147075,"byte_end":147087,"line_start":17,"line_end":17,"column_start":82,"column_end":94},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5587},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147089,"byte_end":147093,"line_start":17,"line_end":17,"column_start":96,"column_end":100},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2188},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147099,"byte_end":147108,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2245},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147110,"byte_end":147114,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5619},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147116,"byte_end":147119,"line_start":18,"line_end":18,"column_start":22,"column_end":25},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5794},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147171,"byte_end":147182,"line_start":22,"line_end":22,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5640},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147233,"byte_end":147239,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5678},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147427,"byte_end":147442,"line_start":32,"line_end":32,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5719},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147444,"byte_end":147452,"line_start":32,"line_end":32,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5759},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147454,"byte_end":147471,"line_start":32,"line_end":32,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6060},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276109,"byte_end":276122,"line_start":107,"line_end":107,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":2561}},{"kind":"Use","ref_id":{"krate":0,"index":3266},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147716,"byte_end":147726,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2585},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147728,"byte_end":147735,"line_start":41,"line_end":41,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5814},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147737,"byte_end":147744,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2727},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147746,"byte_end":147756,"line_start":41,"line_end":41,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2676},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147758,"byte_end":147767,"line_start":41,"line_end":41,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5836},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147769,"byte_end":147779,"line_start":41,"line_end":41,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2852},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147781,"byte_end":147787,"line_start":41,"line_end":41,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2803},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147789,"byte_end":147794,"line_start":41,"line_end":41,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2902},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147796,"byte_end":147802,"line_start":41,"line_end":41,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5910},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147808,"byte_end":147818,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5924},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147820,"byte_end":147829,"line_start":42,"line_end":42,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3025},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147831,"byte_end":147840,"line_start":42,"line_end":42,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3079},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147842,"byte_end":147854,"line_start":42,"line_end":42,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5897},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147856,"byte_end":147866,"line_start":42,"line_end":42,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3215},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147868,"byte_end":147875,"line_start":42,"line_end":42,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2983},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147877,"byte_end":147887,"line_start":42,"line_end":42,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":5863},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147889,"byte_end":147896,"line_start":42,"line_end":42,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3315},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147902,"byte_end":147914,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3394},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147916,"byte_end":147928,"line_start":43,"line_end":43,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3271},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":147930,"byte_end":147939,"line_start":43,"line_end":43,"column_start":33,"column_end":42},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6060},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148018,"byte_end":148031,"line_start":48,"line_end":48,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6052},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148166,"byte_end":148184,"line_start":52,"line_end":52,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6017},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148186,"byte_end":148206,"line_start":52,"line_end":52,"column_start":48,"column_end":68},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3476},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148263,"byte_end":148267,"line_start":57,"line_end":57,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6079},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148269,"byte_end":148273,"line_start":57,"line_end":57,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3494},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148312,"byte_end":148318,"line_start":60,"line_end":60,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6085},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148320,"byte_end":148326,"line_start":60,"line_end":60,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3518},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148363,"byte_end":148368,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6091},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148370,"byte_end":148375,"line_start":63,"line_end":63,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3543},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148410,"byte_end":148414,"line_start":66,"line_end":66,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6097},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148416,"byte_end":148420,"line_start":66,"line_end":66,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3569},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148461,"byte_end":148468,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6106},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148470,"byte_end":148477,"line_start":69,"line_end":69,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3599},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148518,"byte_end":148525,"line_start":72,"line_end":72,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3591},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148527,"byte_end":148533,"line_start":72,"line_end":72,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3624},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148572,"byte_end":148578,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6112},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148580,"byte_end":148586,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3662},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148625,"byte_end":148631,"line_start":78,"line_end":78,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":3667},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148633,"byte_end":148639,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6166},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148788,"byte_end":148802,"line_start":84,"line_end":84,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6504},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8311818,"byte_end":8311822,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6197}},{"kind":"Use","ref_id":{"krate":0,"index":6484},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8311824,"byte_end":8311831,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6197}},{"kind":"Use","ref_id":{"krate":0,"index":6474},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8311833,"byte_end":8311843,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":6197}},{"kind":"Use","ref_id":{"krate":0,"index":6493},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8311845,"byte_end":8311855,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":6197}},{"kind":"Use","ref_id":{"krate":0,"index":6364},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148952,"byte_end":148968,"line_start":90,"line_end":90,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6465},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":149082,"byte_end":149092,"line_start":95,"line_end":95,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":6443},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":149094,"byte_end":149103,"line_start":95,"line_end":95,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":2461},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3355,"byte_end":3364,"line_start":98,"line_end":98,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3394},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3366,"byte_end":3378,"line_start":98,"line_end":98,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":260},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379514,"byte_end":379521,"line_start":5,"line_end":5,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":274},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379580,"byte_end":379585,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":305},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379645,"byte_end":379654,"line_start":11,"line_end":11,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":310},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379656,"byte_end":379664,"line_start":11,"line_end":11,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":15,"index":142},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379712,"byte_end":379723,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":0,"index":3721},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379761,"byte_end":379769,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":0,"index":3724},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379771,"byte_end":379784,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":2,"index":8146},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379817,"byte_end":379824,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":2,"index":31865},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379826,"byte_end":379830,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":2,"index":8156},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379832,"byte_end":379837,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":2,"index":31905},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379839,"byte_end":379847,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":2,"index":31914},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379849,"byte_end":379863,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":10},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379895,"byte_end":379900,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":13},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379902,"byte_end":379912,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":16},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379914,"byte_end":379924,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":111},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379930,"byte_end":379939,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":77},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379941,"byte_end":379955,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":132},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379957,"byte_end":379972,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":237},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":380000,"byte_end":380010,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":17,"index":238},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":380058,"byte_end":380072,"line_start":28,"line_end":28,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":3706}},{"kind":"Use","ref_id":{"krate":19,"index":17},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387034,"byte_end":387043,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":19,"index":20},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387045,"byte_end":387055,"line_start":17,"line_end":17,"column_start":16,"column_end":26},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":19,"index":25},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387057,"byte_end":387066,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":19,"index":27},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387068,"byte_end":387080,"line_start":17,"line_end":17,"column_start":39,"column_end":51},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":1,"index":2481},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387082,"byte_end":387087,"line_start":17,"line_end":17,"column_start":53,"column_end":58},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":1,"index":6536},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387089,"byte_end":387098,"line_start":17,"line_end":17,"column_start":60,"column_end":69},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":1,"index":2894},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387104,"byte_end":387111,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":1,"index":2875},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387113,"byte_end":387123,"line_start":18,"line_end":18,"column_start":14,"column_end":24},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":1,"index":2479},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387125,"byte_end":387131,"line_start":18,"line_end":18,"column_start":26,"column_end":32},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":1,"index":6604},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387133,"byte_end":387141,"line_start":18,"line_end":18,"column_start":34,"column_end":42},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6519},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387811,"byte_end":387821,"line_start":42,"line_end":42,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":3850},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387866,"byte_end":387875,"line_start":45,"line_end":45,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":3911},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387920,"byte_end":387929,"line_start":48,"line_end":48,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":3964},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":387964,"byte_end":387969,"line_start":51,"line_end":51,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6576},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388004,"byte_end":388009,"line_start":54,"line_end":54,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":4031},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388043,"byte_end":388047,"line_start":57,"line_end":57,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6584},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388049,"byte_end":388053,"line_start":57,"line_end":57,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":4060},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388096,"byte_end":388104,"line_start":60,"line_end":60,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6597},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388106,"byte_end":388113,"line_start":60,"line_end":60,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6609},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388151,"byte_end":388157,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":4129},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388193,"byte_end":388198,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":4127},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388200,"byte_end":388205,"line_start":66,"line_end":66,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6637},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388241,"byte_end":388246,"line_start":69,"line_end":69,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6645},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388382,"byte_end":388387,"line_start":77,"line_end":77,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6654},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388420,"byte_end":388424,"line_start":80,"line_end":80,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6663},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388475,"byte_end":388487,"line_start":83,"line_end":83,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6672},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388532,"byte_end":388541,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6681},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388584,"byte_end":388592,"line_start":89,"line_end":89,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6692},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388639,"byte_end":388648,"line_start":92,"line_end":92,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6702},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388701,"byte_end":388713,"line_start":95,"line_end":95,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6713},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388758,"byte_end":388767,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":4353},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388805,"byte_end":388811,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":4351},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388813,"byte_end":388819,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6724},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388853,"byte_end":388857,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":4395},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388891,"byte_end":388895,"line_start":107,"line_end":107,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":4393},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388897,"byte_end":388901,"line_start":107,"line_end":107,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6733},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388938,"byte_end":388946,"line_start":110,"line_end":110,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6739},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388948,"byte_end":388957,"line_start":110,"line_end":110,"column_start":33,"column_end":42},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6745},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":388991,"byte_end":388995,"line_start":113,"line_end":113,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6757},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389032,"byte_end":389038,"line_start":116,"line_end":116,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6764},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389073,"byte_end":389078,"line_start":119,"line_end":119,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6773},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389131,"byte_end":389144,"line_start":122,"line_end":122,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":6782},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389187,"byte_end":389195,"line_start":125,"line_end":125,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":3747}},{"kind":"Use","ref_id":{"krate":0,"index":4560},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3708,"byte_end":3720,"line_start":117,"line_end":117,"column_start":36,"column_end":48},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4577},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3722,"byte_end":3735,"line_start":117,"line_end":117,"column_start":50,"column_end":63},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4588},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3737,"byte_end":3749,"line_start":117,"line_end":117,"column_start":65,"column_end":77},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4592},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3751,"byte_end":3766,"line_start":117,"line_end":117,"column_start":79,"column_end":94},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6892},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mod.rs","byte_start":8353092,"byte_end":8353108,"line_start":9,"line_end":9,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":6791}},{"kind":"Use","ref_id":{"krate":0,"index":6813},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mod.rs","byte_start":8353110,"byte_end":8353115,"line_start":9,"line_end":9,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":6791}},{"kind":"Use","ref_id":{"krate":0,"index":6850},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mod.rs","byte_start":8353117,"byte_end":8353132,"line_start":9,"line_end":9,"column_start":48,"column_end":63},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":6791}},{"kind":"Use","ref_id":{"krate":0,"index":6869},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mod.rs","byte_start":8353134,"byte_end":8353144,"line_start":9,"line_end":9,"column_start":65,"column_end":75},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":6791}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":0,"byte_end":3844,"line_start":1,"line_end":122,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":3703},{"krate":0,"index":3706},{"krate":0,"index":3745},{"krate":0,"index":3747},{"krate":0,"index":4600},{"krate":0,"index":6791}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":322,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":578,"byte_end":599,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":832,"byte_end":875,"line_start":16,"line_end":16,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":21},{"krate":0,"index":441},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":890},{"krate":0,"index":902},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1056},{"krate":0,"index":1061},{"krate":0,"index":1094},{"krate":0,"index":1103},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1233},{"krate":0,"index":1242},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1424},{"krate":0,"index":5327},{"krate":0,"index":5358},{"krate":0,"index":1425}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":3846,"byte_end":3857,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":3858,"byte_end":3861,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":3862,"byte_end":3936,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":3937,"byte_end":4015,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Future` types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4016,"byte_end":4046,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24785,"byte_end":24792,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":49}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flatten`](super::FutureExt::flatten) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24640,"byte_end":24705,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24706,"byte_end":24773,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":76},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26182,"byte_end":26195,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"FlattenStream","qualname":"::future::future::flatten_stream::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](super::FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`flatten_stream`](super::FutureExt::flatten_stream) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26042,"byte_end":26121,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26122,"byte_end":26170,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4624},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":28975,"byte_end":28979,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4626}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fuse`](super::FutureExt::fuse) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":28819,"byte_end":28878,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":28896,"byte_end":28963,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30819,"byte_end":30829,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn () -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29197,"byte_end":29265,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29270,"byte_end":29273,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29278,"byte_end":29346,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29351,"byte_end":29396,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29401,"byte_end":29404,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29409,"byte_end":29423,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29428,"byte_end":29431,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29436,"byte_end":29443,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29448,"byte_end":29489,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29494,"byte_end":29525,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29530,"byte_end":29586,"line_start":32,"line_end":32,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29591,"byte_end":29615,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29620,"byte_end":29655,"line_start":34,"line_end":34,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29660,"byte_end":29685,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29690,"byte_end":29693,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29698,"byte_end":29747,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29752,"byte_end":29755,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29760,"byte_end":29802,"line_start":39,"line_end":39,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29807,"byte_end":29846,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29851,"byte_end":29890,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29895,"byte_end":29912,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29917,"byte_end":29920,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::termianted()` to create an already-terminated future","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29925,"byte_end":29995,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30000,"byte_end":30039,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30044,"byte_end":30085,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30090,"byte_end":30116,"line_start":47,"line_end":47,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30121,"byte_end":30124,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30129,"byte_end":30139,"line_start":49,"line_end":49,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30144,"byte_end":30161,"line_start":50,"line_end":50,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30166,"byte_end":30200,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30205,"byte_end":30252,"line_start":52,"line_end":52,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30257,"byte_end":30306,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30311,"byte_end":30373,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30378,"byte_end":30402,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30407,"byte_end":30450,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30455,"byte_end":30512,"line_start":57,"line_end":57,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30517,"byte_end":30592,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30597,"byte_end":30627,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30632,"byte_end":30649,"line_start":60,"line_end":60,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30654,"byte_end":30668,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30673,"byte_end":30757,"line_start":62,"line_end":62,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30762,"byte_end":30771,"line_start":63,"line_end":63,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30776,"byte_end":30781,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30786,"byte_end":30795,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30800,"byte_end":30807,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4633},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31759,"byte_end":31769,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::future::future::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4635}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`into_stream`](super::FutureExt::into_stream) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31608,"byte_end":31681,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31682,"byte_end":31730,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4642},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32790,"byte_end":32793,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Map","qualname":"::future::future::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4645},{"krate":0,"index":4646}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map`](super::FutureExt::map) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32636,"byte_end":32693,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32711,"byte_end":32778,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4656},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34066,"byte_end":34070,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Then","qualname":"::future::future::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4660}],"decl_id":null,"docs":" Future for the [`then`](super::FutureExt::then) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`then`](super::FutureExt::then) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":33910,"byte_end":33969,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":33987,"byte_end":34054,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4669},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35310,"byte_end":35317,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::future::future::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4672},{"krate":0,"index":4673}],"decl_id":null,"docs":" Future for the [`inspect`](super::FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect`](super::FutureExt::inspect) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35148,"byte_end":35213,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35231,"byte_end":35298,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4683},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36590,"byte_end":36599,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"UnitError","qualname":"::future::future::unit_error::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":4685}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"/ Future for the [`unit_error`](super::FutureExt::unit_error) combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36418,"byte_end":36493,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36511,"byte_end":36578,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4692},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37530,"byte_end":37540,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"NeverError","qualname":"::future::future::never_error::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":4694}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"/ Future for the [`never_error`](super::FutureExt::never_error) combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37356,"byte_end":37433,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37451,"byte_end":37518,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4701},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/catch_unwind.rs","byte_start":38526,"byte_end":38537,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":4703}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/catch_unwind.rs","byte_start":38354,"byte_end":38429,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/catch_unwind.rs","byte_start":38447,"byte_end":38514,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":39519,"byte_end":39525,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":39376,"byte_end":39439,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":39440,"byte_end":39507,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":41660,"byte_end":41664,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"fn (&self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":41391,"byte_end":41465,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":41470,"byte_end":41543,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":41548,"byte_end":41616,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":41621,"byte_end":41648,"line_start":98,"line_end":98,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":414},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8944,"byte_end":8953,"line_start":85,"line_end":85,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8845,"byte_end":8919,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8920,"byte_end":8933,"line_start":84,"line_end":84,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9785,"byte_end":9788,"line_start":108,"line_end":108,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn <U, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8968,"byte_end":9043,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9048,"byte_end":9071,"line_start":87,"line_end":87,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9076,"byte_end":9079,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9084,"byte_end":9158,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9163,"byte_end":9234,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9239,"byte_end":9301,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9306,"byte_end":9309,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9314,"byte_end":9385,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9390,"byte_end":9461,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9466,"byte_end":9487,"line_start":95,"line_end":95,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9492,"byte_end":9495,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9500,"byte_end":9514,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9519,"byte_end":9522,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9527,"byte_end":9534,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9539,"byte_end":9580,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9585,"byte_end":9620,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9625,"byte_end":9628,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9633,"byte_end":9662,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9667,"byte_end":9710,"line_start":104,"line_end":104,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9715,"byte_end":9751,"line_start":105,"line_end":105,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9756,"byte_end":9765,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9770,"byte_end":9777,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10811,"byte_end":10815,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9958,"byte_end":10034,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10039,"byte_end":10082,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10087,"byte_end":10090,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10095,"byte_end":10166,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10171,"byte_end":10245,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10250,"byte_end":10266,"line_start":121,"line_end":121,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10271,"byte_end":10274,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10279,"byte_end":10354,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10359,"byte_end":10370,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10375,"byte_end":10378,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10383,"byte_end":10454,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10459,"byte_end":10485,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10490,"byte_end":10493,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10498,"byte_end":10512,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10517,"byte_end":10520,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10525,"byte_end":10532,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10537,"byte_end":10578,"line_start":132,"line_end":132,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10583,"byte_end":10618,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10623,"byte_end":10626,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10631,"byte_end":10665,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10670,"byte_end":10735,"line_start":136,"line_end":136,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10740,"byte_end":10777,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10782,"byte_end":10791,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10796,"byte_end":10803,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11685,"byte_end":11696,"line_start":171,"line_end":171,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11027,"byte_end":11102,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11107,"byte_end":11128,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11133,"byte_end":11136,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11141,"byte_end":11221,"line_start":152,"line_end":152,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11226,"byte_end":11298,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11303,"byte_end":11306,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11311,"byte_end":11325,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11330,"byte_end":11333,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11338,"byte_end":11345,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11350,"byte_end":11391,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11396,"byte_end":11431,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11436,"byte_end":11439,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11444,"byte_end":11458,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11463,"byte_end":11491,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11496,"byte_end":11532,"line_start":163,"line_end":163,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11537,"byte_end":11549,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11554,"byte_end":11592,"line_start":165,"line_end":165,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11597,"byte_end":11603,"line_start":166,"line_end":166,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11608,"byte_end":11611,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11616,"byte_end":11651,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11656,"byte_end":11665,"line_start":169,"line_end":169,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11670,"byte_end":11677,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12501,"byte_end":12513,"line_start":201,"line_end":201,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn <A> (self) -> Either<A, Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11842,"byte_end":11918,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11923,"byte_end":11944,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11949,"byte_end":11952,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11957,"byte_end":12036,"line_start":182,"line_end":182,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12041,"byte_end":12113,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12118,"byte_end":12121,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12126,"byte_end":12140,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12145,"byte_end":12148,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12153,"byte_end":12160,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12165,"byte_end":12206,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12211,"byte_end":12246,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12251,"byte_end":12254,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12259,"byte_end":12273,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12278,"byte_end":12306,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12311,"byte_end":12347,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12352,"byte_end":12364,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12369,"byte_end":12407,"line_start":195,"line_end":195,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12412,"byte_end":12418,"line_start":196,"line_end":196,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12423,"byte_end":12426,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12431,"byte_end":12467,"line_start":198,"line_end":198,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12472,"byte_end":12481,"line_start":199,"line_end":199,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12486,"byte_end":12493,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13258,"byte_end":13269,"line_start":227,"line_end":227,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12660,"byte_end":12713,"line_start":209,"line_end":209,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12718,"byte_end":12721,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12726,"byte_end":12800,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12805,"byte_end":12868,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12873,"byte_end":12876,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12881,"byte_end":12895,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12900,"byte_end":12903,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12908,"byte_end":12915,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12920,"byte_end":12961,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12966,"byte_end":13001,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13006,"byte_end":13041,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13046,"byte_end":13049,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13054,"byte_end":13084,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13089,"byte_end":13127,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13132,"byte_end":13183,"line_start":223,"line_end":223,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13188,"byte_end":13224,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13229,"byte_end":13238,"line_start":225,"line_end":225,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13243,"byte_end":13250,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14100,"byte_end":14107,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13374,"byte_end":13438,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13443,"byte_end":13479,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13484,"byte_end":13487,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13492,"byte_end":13561,"line_start":237,"line_end":237,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13566,"byte_end":13603,"line_start":238,"line_end":238,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13608,"byte_end":13611,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13616,"byte_end":13676,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13681,"byte_end":13684,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13689,"byte_end":13760,"line_start":242,"line_end":242,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13765,"byte_end":13791,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13796,"byte_end":13799,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13804,"byte_end":13818,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13823,"byte_end":13826,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13831,"byte_end":13838,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13843,"byte_end":13884,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13889,"byte_end":13924,"line_start":249,"line_end":249,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13929,"byte_end":13932,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13937,"byte_end":13983,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13988,"byte_end":14029,"line_start":252,"line_end":252,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14034,"byte_end":14066,"line_start":253,"line_end":253,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14071,"byte_end":14080,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14085,"byte_end":14092,"line_start":255,"line_end":255,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15212,"byte_end":15226,"line_start":290,"line_end":290,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn (self) -> FlattenStream<Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14321,"byte_end":14396,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14401,"byte_end":14424,"line_start":266,"line_end":266,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14429,"byte_end":14432,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14437,"byte_end":14509,"line_start":268,"line_end":268,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14514,"byte_end":14587,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14592,"byte_end":14606,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14611,"byte_end":14614,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14619,"byte_end":14689,"line_start":272,"line_end":272,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14694,"byte_end":14712,"line_start":273,"line_end":273,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14717,"byte_end":14720,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14725,"byte_end":14739,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14744,"byte_end":14747,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14752,"byte_end":14759,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14764,"byte_end":14805,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14810,"byte_end":14845,"line_start":279,"line_end":279,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14850,"byte_end":14893,"line_start":280,"line_end":280,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14898,"byte_end":14901,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14906,"byte_end":14946,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14951,"byte_end":15017,"line_start":283,"line_end":283,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15022,"byte_end":15025,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15030,"byte_end":15083,"line_start":285,"line_end":285,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15088,"byte_end":15134,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15139,"byte_end":15178,"line_start":287,"line_end":287,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15183,"byte_end":15192,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15197,"byte_end":15204,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16262,"byte_end":16266,"line_start":314,"line_end":314,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15367,"byte_end":15440,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15445,"byte_end":15511,"line_start":299,"line_end":299,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15516,"byte_end":15534,"line_start":300,"line_end":300,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15539,"byte_end":15542,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15547,"byte_end":15614,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15619,"byte_end":15684,"line_start":303,"line_end":303,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15689,"byte_end":15761,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15766,"byte_end":15840,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15845,"byte_end":15871,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15876,"byte_end":15879,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15884,"byte_end":15955,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15960,"byte_end":16035,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16040,"byte_end":16094,"line_start":310,"line_end":310,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16099,"byte_end":16102,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16107,"byte_end":16181,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16186,"byte_end":16254,"line_start":313,"line_end":313,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17106,"byte_end":17113,"line_start":340,"line_end":340,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16412,"byte_end":16478,"line_start":322,"line_end":322,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16483,"byte_end":16486,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16491,"byte_end":16566,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16571,"byte_end":16644,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16649,"byte_end":16718,"line_start":326,"line_end":326,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16723,"byte_end":16773,"line_start":327,"line_end":327,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16778,"byte_end":16781,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16786,"byte_end":16800,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16805,"byte_end":16808,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16813,"byte_end":16820,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16825,"byte_end":16866,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16871,"byte_end":16906,"line_start":333,"line_end":333,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16911,"byte_end":16914,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16919,"byte_end":16948,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16953,"byte_end":17031,"line_start":336,"line_end":336,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17036,"byte_end":17072,"line_start":337,"line_end":337,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17077,"byte_end":17086,"line_start":338,"line_end":338,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17091,"byte_end":17098,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18651,"byte_end":18663,"line_start":380,"line_end":380,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17295,"byte_end":17349,"line_start":348,"line_end":348,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17354,"byte_end":17357,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17362,"byte_end":17437,"line_start":350,"line_end":350,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17442,"byte_end":17516,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17521,"byte_end":17595,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17600,"byte_end":17651,"line_start":353,"line_end":353,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17656,"byte_end":17659,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17664,"byte_end":17739,"line_start":355,"line_end":355,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17744,"byte_end":17814,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17819,"byte_end":17886,"line_start":357,"line_end":357,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17891,"byte_end":17966,"line_start":358,"line_end":358,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17971,"byte_end":18043,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18048,"byte_end":18051,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18056,"byte_end":18120,"line_start":361,"line_end":361,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18125,"byte_end":18182,"line_start":362,"line_end":362,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18187,"byte_end":18190,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18195,"byte_end":18209,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18214,"byte_end":18217,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18222,"byte_end":18229,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18234,"byte_end":18275,"line_start":367,"line_end":367,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18280,"byte_end":18330,"line_start":368,"line_end":368,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18335,"byte_end":18338,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18343,"byte_end":18377,"line_start":370,"line_end":370,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18382,"byte_end":18431,"line_start":371,"line_end":371,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18436,"byte_end":18439,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18444,"byte_end":18493,"line_start":373,"line_end":373,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18498,"byte_end":18522,"line_start":374,"line_end":374,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18527,"byte_end":18534,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18539,"byte_end":18589,"line_start":376,"line_end":376,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18594,"byte_end":18603,"line_start":377,"line_end":377,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18608,"byte_end":18615,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18620,"byte_end":18643,"line_start":379,"line_end":379,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20319,"byte_end":20325,"line_start":433,"line_end":433,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"fn (self) -> Shared<Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18797,"byte_end":18872,"line_start":387,"line_end":387,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18877,"byte_end":18900,"line_start":388,"line_end":388,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18905,"byte_end":18908,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18913,"byte_end":18987,"line_start":390,"line_end":390,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":18992,"byte_end":19065,"line_start":391,"line_end":391,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19070,"byte_end":19082,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19087,"byte_end":19090,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19095,"byte_end":19159,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19164,"byte_end":19221,"line_start":395,"line_end":395,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19226,"byte_end":19229,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19234,"byte_end":19248,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19253,"byte_end":19256,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19261,"byte_end":19268,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19273,"byte_end":19314,"line_start":400,"line_end":400,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19319,"byte_end":19354,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19359,"byte_end":19362,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19367,"byte_end":19396,"line_start":403,"line_end":403,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19401,"byte_end":19435,"line_start":404,"line_end":404,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19440,"byte_end":19474,"line_start":405,"line_end":405,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19479,"byte_end":19482,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19487,"byte_end":19520,"line_start":407,"line_end":407,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19525,"byte_end":19558,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19563,"byte_end":19572,"line_start":409,"line_end":409,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19577,"byte_end":19584,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19589,"byte_end":19592,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19597,"byte_end":19604,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19609,"byte_end":19678,"line_start":413,"line_end":413,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19683,"byte_end":19758,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19763,"byte_end":19794,"line_start":415,"line_end":415,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19799,"byte_end":19802,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19807,"byte_end":19848,"line_start":417,"line_end":417,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19853,"byte_end":19888,"line_start":418,"line_end":418,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19893,"byte_end":19929,"line_start":419,"line_end":419,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19934,"byte_end":19954,"line_start":420,"line_end":420,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19959,"byte_end":19962,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":19967,"byte_end":19996,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20001,"byte_end":20035,"line_start":423,"line_end":423,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20040,"byte_end":20074,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20079,"byte_end":20124,"line_start":425,"line_end":425,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20129,"byte_end":20170,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20175,"byte_end":20182,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20187,"byte_end":20220,"line_start":428,"line_end":428,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20225,"byte_end":20257,"line_start":429,"line_end":429,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20262,"byte_end":20271,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20276,"byte_end":20283,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":20288,"byte_end":20311,"line_start":432,"line_end":432,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21323,"byte_end":21328,"line_start":463,"line_end":463,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"fn <'a> (self) -> BoxFuture<'a, Self::Output>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21094,"byte_end":21135,"line_start":458,"line_end":458,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21140,"byte_end":21143,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21148,"byte_end":21223,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21228,"byte_end":21285,"line_start":461,"line_end":461,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21290,"byte_end":21315,"line_start":462,"line_end":462,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21754,"byte_end":21765,"line_start":477,"line_end":477,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"fn <'a> (self) -> LocalBoxFuture<'a, Self::Output>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21453,"byte_end":21494,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21499,"byte_end":21502,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21507,"byte_end":21566,"line_start":472,"line_end":472,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21571,"byte_end":21574,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21579,"byte_end":21654,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21659,"byte_end":21716,"line_start":475,"line_end":475,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21721,"byte_end":21746,"line_start":476,"line_end":476,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22021,"byte_end":22031,"line_start":486,"line_end":486,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn (self) -> UnitError<Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21888,"byte_end":21937,"line_start":484,"line_end":484,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21942,"byte_end":22013,"line_start":485,"line_end":485,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22270,"byte_end":22281,"line_start":495,"line_end":495,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn (self) -> NeverError<Self>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22134,"byte_end":22183,"line_start":493,"line_end":493,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22188,"byte_end":22262,"line_start":494,"line_end":494,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22463,"byte_end":22473,"line_start":503,"line_end":503,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Self::Output>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22386,"byte_end":22455,"line_start":502,"line_end":502,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23869,"byte_end":23881,"line_start":541,"line_end":541,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn (mut self) -> Option<Self::Output>","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22609,"byte_end":22681,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22686,"byte_end":22749,"line_start":511,"line_end":511,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22754,"byte_end":22757,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22762,"byte_end":22828,"line_start":513,"line_end":513,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22833,"byte_end":22836,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22841,"byte_end":22914,"line_start":515,"line_end":515,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22919,"byte_end":22988,"line_start":516,"line_end":516,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22993,"byte_end":23063,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23068,"byte_end":23071,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23076,"byte_end":23090,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23095,"byte_end":23098,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23103,"byte_end":23110,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23115,"byte_end":23145,"line_start":522,"line_end":522,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23150,"byte_end":23200,"line_start":523,"line_end":523,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23205,"byte_end":23244,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23249,"byte_end":23300,"line_start":525,"line_end":525,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23305,"byte_end":23308,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23313,"byte_end":23373,"line_start":527,"line_end":527,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23378,"byte_end":23430,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23435,"byte_end":23442,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23447,"byte_end":23450,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23455,"byte_end":23524,"line_start":531,"line_end":531,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23529,"byte_end":23602,"line_start":532,"line_end":532,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23607,"byte_end":23639,"line_start":533,"line_end":533,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23644,"byte_end":23647,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23652,"byte_end":23659,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23664,"byte_end":23711,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23716,"byte_end":23755,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23760,"byte_end":23763,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23768,"byte_end":23849,"line_start":539,"line_end":539,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23854,"byte_end":23861,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4728},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":68748,"byte_end":68755,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::future::try_future::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":4732}],"decl_id":null,"docs":" Future for the [`and_then`](super::TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`and_then`](super::TryFutureExt::and_then) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":68581,"byte_end":68651,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":68669,"byte_end":68736,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4741},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70311,"byte_end":70318,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ErrInto","qualname":"::future::try_future::err_into::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":4744},{"krate":0,"index":4745}],"decl_id":null,"docs":" Future for the [`err_into`](super::TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`err_into`](super::TryFutureExt::err_into) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70144,"byte_end":70214,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70232,"byte_end":70299,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4753},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":71504,"byte_end":71513,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"InspectOk","qualname":"::future::try_future::inspect_ok::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":4756},{"krate":0,"index":4757}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":71333,"byte_end":71407,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":71425,"byte_end":71492,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4767},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":72842,"byte_end":72852,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::future::try_future::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":4770},{"krate":0,"index":4771}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":72669,"byte_end":72745,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":72763,"byte_end":72830,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4781},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":74177,"byte_end":74187,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":4783}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::TryFutureExt::into_future) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":74004,"byte_end":74080,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":74098,"byte_end":74165,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4790},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":75121,"byte_end":75127,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::future::try_future::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":4793},{"krate":0,"index":4794}],"decl_id":null,"docs":" Future for the [`map_err`](super::TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map_err`](super::TryFutureExt::map_err) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":74956,"byte_end":75024,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":75042,"byte_end":75109,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4804},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":76519,"byte_end":76524,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"MapOk","qualname":"::future::try_future::map_ok::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":4807},{"krate":0,"index":4808}],"decl_id":null,"docs":" Future for the [`map_ok`](super::TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map_ok`](super::TryFutureExt::map_ok) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":76356,"byte_end":76422,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":76440,"byte_end":76507,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4818},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":77931,"byte_end":77942,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"MapOkOrElse","qualname":"::future::try_future::map_ok_or_else::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4822},{"krate":0,"index":4823},{"krate":0,"index":4824}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](super::TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map_ok_or_else`](super::TryFutureExt::map_ok_or_else) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":77752,"byte_end":77834,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":77852,"byte_end":77919,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4837},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":79696,"byte_end":79702,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::future::try_future::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":4841}],"decl_id":null,"docs":" Future for the [`or_else`](super::TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`or_else`](super::TryFutureExt::or_else) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":79531,"byte_end":79599,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":79617,"byte_end":79684,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":81353,"byte_end":81369,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"TryFlattenStream","qualname":"::future::try_future::try_flatten_stream::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":747}],"decl_id":null,"docs":" Stream for the [`try_flatten_stream`](super::TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_flatten_stream`](super::TryFutureExt::try_flatten_stream) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":81202,"byte_end":81292,"line_start":11,"line_end":11,"column_start":1,"column_end":91}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":81293,"byte_end":81341,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4853},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":83675,"byte_end":83687,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"UnwrapOrElse","qualname":"::future::try_future::unwrap_or_else::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4856},{"krate":0,"index":4857}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](super::TryFutureExt::unwrap_or_else)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`unwrap_or_else`](super::TryFutureExt::unwrap_or_else)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":83492,"byte_end":83566,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":83567,"byte_end":83578,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":83596,"byte_end":83663,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":862},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52848,"byte_end":52860,"line_start":80,"line_end":80,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":889}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52784,"byte_end":52837,"line_start":79,"line_end":79,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55518,"byte_end":55524,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54146,"byte_end":54204,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54209,"byte_end":54212,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54217,"byte_end":54292,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54297,"byte_end":54367,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54372,"byte_end":54445,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54450,"byte_end":54479,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54484,"byte_end":54487,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54492,"byte_end":54567,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54572,"byte_end":54647,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54652,"byte_end":54699,"line_start":130,"line_end":130,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54704,"byte_end":54707,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54712,"byte_end":54787,"line_start":132,"line_end":132,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54792,"byte_end":54818,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54823,"byte_end":54826,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54831,"byte_end":54845,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54850,"byte_end":54853,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54858,"byte_end":54865,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54870,"byte_end":54908,"line_start":138,"line_end":138,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54913,"byte_end":54916,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54921,"byte_end":54962,"line_start":140,"line_end":140,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54967,"byte_end":55012,"line_start":141,"line_end":141,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55017,"byte_end":55059,"line_start":142,"line_end":142,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55064,"byte_end":55100,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55105,"byte_end":55114,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55119,"byte_end":55126,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55131,"byte_end":55134,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55139,"byte_end":55211,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55216,"byte_end":55227,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55232,"byte_end":55235,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55240,"byte_end":55247,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55252,"byte_end":55290,"line_start":151,"line_end":151,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55295,"byte_end":55298,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55303,"byte_end":55344,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55349,"byte_end":55395,"line_start":154,"line_end":154,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55400,"byte_end":55442,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55447,"byte_end":55484,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55489,"byte_end":55498,"line_start":157,"line_end":157,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55503,"byte_end":55510,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57042,"byte_end":57056,"line_start":199,"line_end":199,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn <T, E, F> (self, e: E, f: F) -> MapOkOrElse<Self, F, E>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55671,"byte_end":55788,"line_start":167,"line_end":167,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55793,"byte_end":55796,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55801,"byte_end":55923,"line_start":169,"line_end":169,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55928,"byte_end":55978,"line_start":170,"line_end":170,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55983,"byte_end":55986,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55991,"byte_end":56066,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56071,"byte_end":56146,"line_start":173,"line_end":173,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56151,"byte_end":56198,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/ ","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56203,"byte_end":56207,"line_start":175,"line_end":175,"column_start":5,"column_end":9}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56212,"byte_end":56287,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56292,"byte_end":56367,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56372,"byte_end":56419,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56424,"byte_end":56427,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56432,"byte_end":56507,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56512,"byte_end":56538,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56543,"byte_end":56546,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56551,"byte_end":56565,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56570,"byte_end":56573,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56578,"byte_end":56585,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56590,"byte_end":56628,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56633,"byte_end":56636,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56641,"byte_end":56682,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56687,"byte_end":56732,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56737,"byte_end":56798,"line_start":190,"line_end":190,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56803,"byte_end":56835,"line_start":191,"line_end":191,"column_start":5,"column_end":37}},{"value":"/ ","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56840,"byte_end":56844,"line_start":192,"line_end":192,"column_start":5,"column_end":9}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56849,"byte_end":56895,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56900,"byte_end":56961,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56966,"byte_end":56999,"line_start":195,"line_end":195,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57004,"byte_end":57013,"line_start":196,"line_end":196,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57018,"byte_end":57025,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ ","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57030,"byte_end":57034,"line_start":198,"line_end":198,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58716,"byte_end":58723,"line_start":247,"line_end":247,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57267,"byte_end":57323,"line_start":208,"line_end":208,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57328,"byte_end":57331,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57336,"byte_end":57410,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57415,"byte_end":57476,"line_start":211,"line_end":211,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57481,"byte_end":57551,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57556,"byte_end":57631,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57636,"byte_end":57671,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57676,"byte_end":57679,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57684,"byte_end":57759,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57764,"byte_end":57839,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57844,"byte_end":57891,"line_start":218,"line_end":218,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57896,"byte_end":57899,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57904,"byte_end":57979,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57984,"byte_end":58010,"line_start":221,"line_end":221,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58015,"byte_end":58018,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58023,"byte_end":58037,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58042,"byte_end":58045,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58050,"byte_end":58057,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58062,"byte_end":58100,"line_start":226,"line_end":226,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58105,"byte_end":58108,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58113,"byte_end":58154,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58159,"byte_end":58205,"line_start":229,"line_end":229,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58210,"byte_end":58253,"line_start":230,"line_end":230,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58258,"byte_end":58295,"line_start":231,"line_end":231,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58300,"byte_end":58309,"line_start":232,"line_end":232,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58314,"byte_end":58321,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58326,"byte_end":58329,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58334,"byte_end":58407,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58412,"byte_end":58426,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58431,"byte_end":58434,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58439,"byte_end":58446,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58451,"byte_end":58489,"line_start":239,"line_end":239,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58494,"byte_end":58497,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58502,"byte_end":58543,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58548,"byte_end":58593,"line_start":242,"line_end":242,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58598,"byte_end":58641,"line_start":243,"line_end":243,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58646,"byte_end":58682,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58687,"byte_end":58696,"line_start":245,"line_end":245,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58701,"byte_end":58708,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59772,"byte_end":59780,"line_start":277,"line_end":277,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58875,"byte_end":58945,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":58950,"byte_end":58999,"line_start":256,"line_end":256,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59004,"byte_end":59007,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59012,"byte_end":59075,"line_start":258,"line_end":258,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59080,"byte_end":59148,"line_start":259,"line_end":259,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59153,"byte_end":59226,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59231,"byte_end":59307,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59312,"byte_end":59357,"line_start":262,"line_end":262,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59362,"byte_end":59365,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59370,"byte_end":59445,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59450,"byte_end":59476,"line_start":265,"line_end":265,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59481,"byte_end":59484,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59489,"byte_end":59503,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59508,"byte_end":59511,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59516,"byte_end":59523,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59528,"byte_end":59566,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59571,"byte_end":59574,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59579,"byte_end":59620,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59625,"byte_end":59676,"line_start":273,"line_end":273,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59681,"byte_end":59738,"line_start":274,"line_end":274,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59743,"byte_end":59752,"line_start":275,"line_end":275,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59757,"byte_end":59764,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61296,"byte_end":61304,"line_start":321,"line_end":321,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59915,"byte_end":59984,"line_start":285,"line_end":285,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":59989,"byte_end":60063,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60068,"byte_end":60071,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60076,"byte_end":60151,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60156,"byte_end":60226,"line_start":289,"line_end":289,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60231,"byte_end":60296,"line_start":290,"line_end":290,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60301,"byte_end":60367,"line_start":291,"line_end":291,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60372,"byte_end":60406,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60411,"byte_end":60414,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60419,"byte_end":60494,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60499,"byte_end":60525,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60530,"byte_end":60533,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60538,"byte_end":60552,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60557,"byte_end":60560,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60565,"byte_end":60572,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60577,"byte_end":60615,"line_start":300,"line_end":300,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60620,"byte_end":60623,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60628,"byte_end":60669,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60674,"byte_end":60719,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60724,"byte_end":60799,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60804,"byte_end":60840,"line_start":305,"line_end":305,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60845,"byte_end":60854,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60859,"byte_end":60866,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60871,"byte_end":60874,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60879,"byte_end":60955,"line_start":309,"line_end":309,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60960,"byte_end":60971,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60976,"byte_end":60979,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60984,"byte_end":60991,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":60996,"byte_end":61034,"line_start":313,"line_end":313,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61039,"byte_end":61042,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61047,"byte_end":61088,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61093,"byte_end":61139,"line_start":316,"line_end":316,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61144,"byte_end":61220,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61225,"byte_end":61262,"line_start":318,"line_end":318,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61267,"byte_end":61276,"line_start":319,"line_end":319,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61281,"byte_end":61288,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62876,"byte_end":62883,"line_start":366,"line_end":366,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61509,"byte_end":61574,"line_start":330,"line_end":330,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61579,"byte_end":61651,"line_start":331,"line_end":331,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61656,"byte_end":61659,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61664,"byte_end":61739,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61744,"byte_end":61814,"line_start":334,"line_end":334,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61819,"byte_end":61884,"line_start":335,"line_end":335,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61889,"byte_end":61965,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61970,"byte_end":61988,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":61993,"byte_end":61996,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62001,"byte_end":62076,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62081,"byte_end":62107,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62112,"byte_end":62115,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62120,"byte_end":62134,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62139,"byte_end":62142,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62147,"byte_end":62154,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62159,"byte_end":62197,"line_start":345,"line_end":345,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62202,"byte_end":62205,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62210,"byte_end":62251,"line_start":347,"line_end":347,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62256,"byte_end":62302,"line_start":348,"line_end":348,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62307,"byte_end":62382,"line_start":349,"line_end":349,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62387,"byte_end":62424,"line_start":350,"line_end":350,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62429,"byte_end":62438,"line_start":351,"line_end":351,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62443,"byte_end":62450,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62455,"byte_end":62458,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62463,"byte_end":62536,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62541,"byte_end":62555,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62560,"byte_end":62563,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62568,"byte_end":62575,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62580,"byte_end":62618,"line_start":358,"line_end":358,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62623,"byte_end":62626,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62631,"byte_end":62672,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62677,"byte_end":62722,"line_start":361,"line_end":361,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62727,"byte_end":62801,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62806,"byte_end":62842,"line_start":363,"line_end":363,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62847,"byte_end":62856,"line_start":364,"line_end":364,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":62861,"byte_end":62868,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63810,"byte_end":63820,"line_start":393,"line_end":393,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63083,"byte_end":63156,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63161,"byte_end":63164,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63169,"byte_end":63244,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63249,"byte_end":63322,"line_start":378,"line_end":378,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63327,"byte_end":63396,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63401,"byte_end":63454,"line_start":380,"line_end":380,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63459,"byte_end":63462,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63467,"byte_end":63481,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63486,"byte_end":63489,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63494,"byte_end":63501,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63506,"byte_end":63547,"line_start":385,"line_end":385,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63552,"byte_end":63590,"line_start":386,"line_end":386,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63595,"byte_end":63598,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63603,"byte_end":63645,"line_start":388,"line_end":388,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63650,"byte_end":63731,"line_start":389,"line_end":389,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63736,"byte_end":63776,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63781,"byte_end":63790,"line_start":391,"line_end":391,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63795,"byte_end":63802,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64695,"byte_end":64706,"line_start":419,"line_end":419,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":63968,"byte_end":64039,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64044,"byte_end":64047,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64052,"byte_end":64127,"line_start":403,"line_end":403,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64132,"byte_end":64205,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64210,"byte_end":64279,"line_start":405,"line_end":405,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64284,"byte_end":64338,"line_start":406,"line_end":406,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64343,"byte_end":64346,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64351,"byte_end":64365,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64370,"byte_end":64373,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64378,"byte_end":64385,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64390,"byte_end":64431,"line_start":411,"line_end":411,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64436,"byte_end":64474,"line_start":412,"line_end":412,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64479,"byte_end":64482,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64487,"byte_end":64530,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64535,"byte_end":64615,"line_start":415,"line_end":415,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64620,"byte_end":64661,"line_start":416,"line_end":416,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64666,"byte_end":64675,"line_start":417,"line_end":417,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64680,"byte_end":64687,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65803,"byte_end":65821,"line_start":452,"line_end":452,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn (self) -> TryFlattenStream<Self>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64859,"byte_end":64934,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64939,"byte_end":64962,"line_start":428,"line_end":428,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64967,"byte_end":64970,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":64975,"byte_end":65047,"line_start":430,"line_end":430,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65052,"byte_end":65125,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65130,"byte_end":65144,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65149,"byte_end":65152,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65157,"byte_end":65227,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65232,"byte_end":65250,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65255,"byte_end":65258,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65263,"byte_end":65277,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65282,"byte_end":65285,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65290,"byte_end":65297,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65302,"byte_end":65343,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65348,"byte_end":65386,"line_start":441,"line_end":441,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65391,"byte_end":65437,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65442,"byte_end":65445,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65450,"byte_end":65510,"line_start":444,"line_end":444,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65515,"byte_end":65594,"line_start":445,"line_end":445,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65599,"byte_end":65602,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65607,"byte_end":65664,"line_start":447,"line_end":447,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65669,"byte_end":65721,"line_start":448,"line_end":448,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65726,"byte_end":65769,"line_start":449,"line_end":449,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65774,"byte_end":65783,"line_start":450,"line_end":450,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65788,"byte_end":65795,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66818,"byte_end":66832,"line_start":482,"line_end":482,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn <F> (self, f: F) -> UnwrapOrElse<Self, F>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":65988,"byte_end":66058,"line_start":460,"line_end":460,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66063,"byte_end":66100,"line_start":461,"line_end":461,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66105,"byte_end":66154,"line_start":462,"line_end":462,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66159,"byte_end":66162,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66167,"byte_end":66236,"line_start":464,"line_end":464,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66241,"byte_end":66314,"line_start":465,"line_end":465,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66319,"byte_end":66389,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66394,"byte_end":66412,"line_start":467,"line_end":467,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66417,"byte_end":66420,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66425,"byte_end":66493,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66498,"byte_end":66501,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66506,"byte_end":66520,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66525,"byte_end":66528,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66533,"byte_end":66540,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66545,"byte_end":66583,"line_start":474,"line_end":474,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66588,"byte_end":66591,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66596,"byte_end":66637,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66642,"byte_end":66694,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66699,"byte_end":66746,"line_start":478,"line_end":478,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66751,"byte_end":66784,"line_start":479,"line_end":479,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66789,"byte_end":66798,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":66803,"byte_end":66810,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":68002,"byte_end":68013,"line_start":521,"line_end":521,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn (self) -> IntoFuture<Self>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67301,"byte_end":67354,"line_start":500,"line_end":500,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67359,"byte_end":67395,"line_start":501,"line_end":501,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67400,"byte_end":67403,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67408,"byte_end":67457,"line_start":503,"line_end":503,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67462,"byte_end":67529,"line_start":504,"line_end":504,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67534,"byte_end":67547,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67552,"byte_end":67555,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67560,"byte_end":67574,"line_start":507,"line_end":507,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67579,"byte_end":67582,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67587,"byte_end":67594,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67599,"byte_end":67658,"line_start":510,"line_end":510,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67663,"byte_end":67666,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67671,"byte_end":67690,"line_start":512,"line_end":512,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67695,"byte_end":67713,"line_start":513,"line_end":513,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67718,"byte_end":67790,"line_start":514,"line_end":514,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67795,"byte_end":67827,"line_start":515,"line_end":515,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67832,"byte_end":67839,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67844,"byte_end":67920,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67925,"byte_end":67928,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67933,"byte_end":67982,"line_start":519,"line_end":519,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":67987,"byte_end":67994,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":68221,"byte_end":68235,"line_start":530,"line_end":530,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":68118,"byte_end":68191,"line_start":528,"line_end":528,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":68196,"byte_end":68213,"line_start":529,"line_end":529,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4903},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":93783,"byte_end":93787,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4905}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":93649,"byte_end":93686,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":93704,"byte_end":93771,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":912},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94328,"byte_end":94332,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn <F, R> (f: F) -> Lazy<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":93891,"byte_end":93959,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":93960,"byte_end":93963,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":93964,"byte_end":94027,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94028,"byte_end":94031,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94032,"byte_end":94046,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94047,"byte_end":94050,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94051,"byte_end":94058,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94059,"byte_end":94100,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94101,"byte_end":94125,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94126,"byte_end":94129,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94130,"byte_end":94162,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94163,"byte_end":94190,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94191,"byte_end":94194,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94195,"byte_end":94232,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94233,"byte_end":94257,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94258,"byte_end":94265,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94266,"byte_end":94302,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94303,"byte_end":94312,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94313,"byte_end":94320,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4909},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95068,"byte_end":95075,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4911}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":94929,"byte_end":94971,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":94989,"byte_end":95056,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":939},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95594,"byte_end":95601,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95216,"byte_end":95296,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95297,"byte_end":95310,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95311,"byte_end":95314,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95315,"byte_end":95377,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95378,"byte_end":95381,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95382,"byte_end":95396,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95397,"byte_end":95400,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95401,"byte_end":95414,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95415,"byte_end":95456,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95457,"byte_end":95481,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95482,"byte_end":95485,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95486,"byte_end":95521,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95522,"byte_end":95548,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95549,"byte_end":95568,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95569,"byte_end":95578,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95579,"byte_end":95586,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4917},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96313,"byte_end":96319,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":4915},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96278,"byte_end":96308,"line_start":13,"line_end":13,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4920},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96373,"byte_end":96377,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":4915},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96330,"byte_end":96368,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4923},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96539,"byte_end":96543,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":4915},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96396,"byte_end":96462,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96467,"byte_end":96534,"line_start":18,"line_end":18,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":4915},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96249,"byte_end":96258,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":4917},{"krate":0,"index":4920},{"krate":0,"index":4923}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96127,"byte_end":96164,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96165,"byte_end":96168,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96169,"byte_end":96222,"line_start":10,"line_end":10,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":964},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97122,"byte_end":97132,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96661,"byte_end":96698,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96699,"byte_end":96702,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96703,"byte_end":96717,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96718,"byte_end":96721,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96722,"byte_end":96729,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96730,"byte_end":96771,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96772,"byte_end":96796,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96797,"byte_end":96822,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96823,"byte_end":96826,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96827,"byte_end":96876,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96877,"byte_end":96898,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96899,"byte_end":96951,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96952,"byte_end":96987,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96988,"byte_end":97043,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97044,"byte_end":97096,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97097,"byte_end":97106,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97107,"byte_end":97114,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97549,"byte_end":97559,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97251,"byte_end":97336,"line_start":47,"line_end":47,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97341,"byte_end":97412,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97417,"byte_end":97490,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97495,"byte_end":97523,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97528,"byte_end":97537,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97936,"byte_end":97947,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97816,"byte_end":97882,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97887,"byte_end":97910,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97915,"byte_end":97924,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4928},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99937,"byte_end":99949,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":4930}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"/ A future representing a value which may or may not be present.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99396,"byte_end":99462,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99463,"byte_end":99466,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Created by the [`From`] implementation for [`Option`](std::option::Option).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99467,"byte_end":99546,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99547,"byte_end":99550,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99551,"byte_end":99565,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99566,"byte_end":99569,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99570,"byte_end":99577,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99578,"byte_end":99619,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ use futures::future::OptionFuture;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99620,"byte_end":99658,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99659,"byte_end":99662,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let mut a: OptionFuture<_> = Some(async { 123 }).into();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99663,"byte_end":99723,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(a.await, Some(123));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99724,"byte_end":99759,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99760,"byte_end":99763,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ a = None.into();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99764,"byte_end":99784,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(a.await, None);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99785,"byte_end":99815,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99816,"byte_end":99825,"line_start":23,"line_end":23,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99826,"byte_end":99833,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99858,"byte_end":99925,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101000,"byte_end":101006,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1011}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":100880,"byte_end":100920,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":100921,"byte_end":100988,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1014},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101593,"byte_end":101600,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101057,"byte_end":101128,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101129,"byte_end":101132,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101133,"byte_end":101199,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101200,"byte_end":101203,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101204,"byte_end":101218,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101219,"byte_end":101222,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101223,"byte_end":101230,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101231,"byte_end":101272,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101273,"byte_end":101306,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101307,"byte_end":101346,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101347,"byte_end":101350,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101351,"byte_end":101408,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101409,"byte_end":101452,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101453,"byte_end":101458,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101459,"byte_end":101462,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101463,"byte_end":101504,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101505,"byte_end":101567,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101568,"byte_end":101577,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101578,"byte_end":101585,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4940},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102320,"byte_end":102325,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102169,"byte_end":102216,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102241,"byte_end":102308,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102448,"byte_end":102458,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn (mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102365,"byte_end":102422,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102427,"byte_end":102436,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1048},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103093,"byte_end":103098,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn <T> (t: T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102847,"byte_end":102907,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102908,"byte_end":102911,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102912,"byte_end":102926,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102927,"byte_end":102930,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102931,"byte_end":102938,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102939,"byte_end":102980,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102981,"byte_end":103005,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103006,"byte_end":103009,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103010,"byte_end":103039,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103040,"byte_end":103067,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103068,"byte_end":103077,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103078,"byte_end":103085,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1050},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103410,"byte_end":103412,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn <T, E> (t: T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103144,"byte_end":103211,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103212,"byte_end":103215,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103216,"byte_end":103230,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103231,"byte_end":103234,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103235,"byte_end":103242,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103243,"byte_end":103284,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103285,"byte_end":103309,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103310,"byte_end":103313,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103314,"byte_end":103352,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103353,"byte_end":103384,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103385,"byte_end":103394,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103395,"byte_end":103402,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1053},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103743,"byte_end":103746,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn <T, E> (err: E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103476,"byte_end":103542,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103543,"byte_end":103546,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103547,"byte_end":103561,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103562,"byte_end":103565,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103566,"byte_end":103573,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103574,"byte_end":103615,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103616,"byte_end":103640,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103641,"byte_end":103644,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103645,"byte_end":103684,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103685,"byte_end":103717,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103718,"byte_end":103727,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":103728,"byte_end":103735,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4950},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106026,"byte_end":106030,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":4953},{"krate":0,"index":4954}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":104210,"byte_end":104277,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4972},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106096,"byte_end":106101,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4978}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":104210,"byte_end":104277,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5000},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106173,"byte_end":106178,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5007},{"krate":0,"index":5008}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":104210,"byte_end":104277,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5034},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106256,"byte_end":106261,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5042},{"krate":0,"index":5043},{"krate":0,"index":5044}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":104210,"byte_end":104277,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1076},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106876,"byte_end":106880,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> Join<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106299,"byte_end":106370,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106371,"byte_end":106374,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106375,"byte_end":106446,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106447,"byte_end":106522,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106523,"byte_end":106526,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106527,"byte_end":106596,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106597,"byte_end":106623,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106624,"byte_end":106627,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106628,"byte_end":106642,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106643,"byte_end":106646,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106647,"byte_end":106654,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106655,"byte_end":106696,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106697,"byte_end":106721,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106722,"byte_end":106725,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106726,"byte_end":106750,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106751,"byte_end":106775,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106776,"byte_end":106810,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106811,"byte_end":106814,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106815,"byte_end":106850,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106851,"byte_end":106860,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":106861,"byte_end":106868,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1079},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107426,"byte_end":107431,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> Join3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107087,"byte_end":107139,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107140,"byte_end":107143,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107144,"byte_end":107158,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107159,"byte_end":107162,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107163,"byte_end":107170,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107171,"byte_end":107212,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107213,"byte_end":107237,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107238,"byte_end":107241,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107242,"byte_end":107266,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107267,"byte_end":107291,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107292,"byte_end":107316,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107317,"byte_end":107356,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107357,"byte_end":107360,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107361,"byte_end":107400,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107401,"byte_end":107410,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107411,"byte_end":107418,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1083},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108014,"byte_end":108019,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> Join4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107644,"byte_end":107696,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107697,"byte_end":107700,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107701,"byte_end":107715,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107716,"byte_end":107719,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107720,"byte_end":107727,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107728,"byte_end":107769,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107770,"byte_end":107794,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107795,"byte_end":107798,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107799,"byte_end":107823,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107824,"byte_end":107848,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107849,"byte_end":107873,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107874,"byte_end":107898,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107899,"byte_end":107941,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107942,"byte_end":107945,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107946,"byte_end":107988,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107989,"byte_end":107998,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":107999,"byte_end":108006,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1088},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108691,"byte_end":108696,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> Join5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108290,"byte_end":108342,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108343,"byte_end":108346,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108347,"byte_end":108361,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108362,"byte_end":108365,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108366,"byte_end":108373,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108374,"byte_end":108415,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108416,"byte_end":108440,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108441,"byte_end":108444,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108445,"byte_end":108469,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108470,"byte_end":108494,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108495,"byte_end":108519,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108520,"byte_end":108544,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108545,"byte_end":108569,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108570,"byte_end":108615,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108616,"byte_end":108619,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108620,"byte_end":108665,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108666,"byte_end":108675,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":108676,"byte_end":108683,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1124},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":110721,"byte_end":110728,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1126}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":110600,"byte_end":110641,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":110642,"byte_end":110709,"line_start":60,"line_end":60,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1130},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112270,"byte_end":112278,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"fn <I> (i: I) -> JoinAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111061,"byte_end":111141,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111142,"byte_end":111152,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111153,"byte_end":111156,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111157,"byte_end":111236,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111237,"byte_end":111317,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111318,"byte_end":111336,"line_start":85,"line_end":85,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111337,"byte_end":111340,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111341,"byte_end":111418,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111419,"byte_end":111476,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111477,"byte_end":111480,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111481,"byte_end":111495,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111496,"byte_end":111499,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111500,"byte_end":111575,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111576,"byte_end":111624,"line_start":93,"line_end":93,"column_start":1,"column_end":49}},{"value":"/ [`FuturesUnordered`][crate::stream::FuturesUnordered] APIs, some","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111625,"byte_end":111693,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/ examples of additional functionality that provides:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111694,"byte_end":111749,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111750,"byte_end":111753,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111754,"byte_end":111822,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111823,"byte_end":111826,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111827,"byte_end":111904,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111905,"byte_end":111986,"line_start":100,"line_end":100,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111987,"byte_end":111990,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":111991,"byte_end":112005,"line_start":102,"line_end":102,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112006,"byte_end":112009,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112010,"byte_end":112017,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112018,"byte_end":112059,"line_start":105,"line_end":105,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112060,"byte_end":112094,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112095,"byte_end":112098,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112099,"byte_end":112136,"line_start":108,"line_end":108,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112137,"byte_end":112140,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112141,"byte_end":112188,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112189,"byte_end":112192,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112193,"byte_end":112244,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112245,"byte_end":112254,"line_start":113,"line_end":113,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112255,"byte_end":112262,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5127},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":113791,"byte_end":113797,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":5130}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":113653,"byte_end":113694,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":113695,"byte_end":113762,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1158},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":115066,"byte_end":115072,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn <A, B> (future1: A, future2: B) -> Select<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":113888,"byte_end":113958,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":113959,"byte_end":113962,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":113963,"byte_end":114041,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114042,"byte_end":114118,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114119,"byte_end":114191,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114192,"byte_end":114195,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114196,"byte_end":114268,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114269,"byte_end":114297,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114298,"byte_end":114301,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114302,"byte_end":114369,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114370,"byte_end":114434,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114435,"byte_end":114485,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114486,"byte_end":114489,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114490,"byte_end":114504,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114505,"byte_end":114508,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114509,"byte_end":114516,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114517,"byte_end":114576,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114577,"byte_end":114580,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114581,"byte_end":114634,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114635,"byte_end":114638,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B, E>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114639,"byte_end":114717,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114718,"byte_end":114750,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114751,"byte_end":114783,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114784,"byte_end":114789,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114790,"byte_end":114834,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114835,"byte_end":114861,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114862,"byte_end":114939,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":114940,"byte_end":115019,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":115020,"byte_end":115033,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":115034,"byte_end":115044,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":115045,"byte_end":115050,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":115051,"byte_end":115058,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5135},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116424,"byte_end":116433,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":5137}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116284,"byte_end":116327,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116345,"byte_end":116412,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1185},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":117213,"byte_end":117223,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"fn <I> (iter: I) -> SelectAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116511,"byte_end":116577,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116578,"byte_end":116581,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116582,"byte_end":116662,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116663,"byte_end":116741,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116742,"byte_end":116810,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116811,"byte_end":116814,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116815,"byte_end":116895,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116896,"byte_end":116970,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116971,"byte_end":116974,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116975,"byte_end":117052,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":117053,"byte_end":117110,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":117111,"byte_end":117114,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":117115,"byte_end":117127,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":117128,"byte_end":117131,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":117132,"byte_end":117205,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5141},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":121898,"byte_end":121905,"line_start":106,"line_end":106,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":5144},{"krate":0,"index":5145}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":118711,"byte_end":118778,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5159},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":121975,"byte_end":121983,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":5163},{"krate":0,"index":5164},{"krate":0,"index":5165}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":118711,"byte_end":118778,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5182},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122059,"byte_end":122067,"line_start":112,"line_end":112,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5189},{"krate":0,"index":5190}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":118711,"byte_end":118778,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5210},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122149,"byte_end":122157,"line_start":115,"line_end":115,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":118711,"byte_end":118778,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1215},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123429,"byte_end":123437,"line_start":160,"line_end":160,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> TryJoin<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122195,"byte_end":122268,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122269,"byte_end":122301,"line_start":119,"line_end":119,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122302,"byte_end":122305,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122306,"byte_end":122377,"line_start":121,"line_end":121,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122378,"byte_end":122454,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122455,"byte_end":122526,"line_start":123,"line_end":123,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122527,"byte_end":122543,"line_start":124,"line_end":124,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122544,"byte_end":122547,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122548,"byte_end":122617,"line_start":126,"line_end":126,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122618,"byte_end":122644,"line_start":127,"line_end":127,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122645,"byte_end":122648,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122649,"byte_end":122663,"line_start":129,"line_end":129,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122664,"byte_end":122667,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122668,"byte_end":122744,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122745,"byte_end":122781,"line_start":132,"line_end":132,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122782,"byte_end":122785,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122786,"byte_end":122793,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122794,"byte_end":122835,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122836,"byte_end":122860,"line_start":136,"line_end":136,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122861,"byte_end":122864,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122865,"byte_end":122910,"line_start":138,"line_end":138,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122911,"byte_end":122956,"line_start":139,"line_end":139,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122957,"byte_end":122995,"line_start":140,"line_end":140,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":122996,"byte_end":122999,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123000,"byte_end":123039,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123040,"byte_end":123049,"line_start":143,"line_end":143,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123050,"byte_end":123057,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123058,"byte_end":123061,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123062,"byte_end":123132,"line_start":146,"line_end":146,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123133,"byte_end":123148,"line_start":147,"line_end":147,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123149,"byte_end":123152,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123153,"byte_end":123160,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123161,"byte_end":123202,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123203,"byte_end":123227,"line_start":151,"line_end":151,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123228,"byte_end":123231,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123232,"byte_end":123277,"line_start":153,"line_end":153,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123278,"byte_end":123324,"line_start":154,"line_end":154,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123325,"byte_end":123363,"line_start":155,"line_end":155,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123364,"byte_end":123367,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123368,"byte_end":123403,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123404,"byte_end":123413,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123414,"byte_end":123421,"line_start":159,"line_end":159,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1218},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124030,"byte_end":124039,"line_start":184,"line_end":184,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> TryJoin3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123612,"byte_end":123672,"line_start":168,"line_end":168,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123673,"byte_end":123676,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123677,"byte_end":123691,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123692,"byte_end":123695,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123696,"byte_end":123703,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123704,"byte_end":123745,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123746,"byte_end":123770,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123771,"byte_end":123774,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123775,"byte_end":123820,"line_start":176,"line_end":176,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123821,"byte_end":123866,"line_start":177,"line_end":177,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123867,"byte_end":123912,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123913,"byte_end":123956,"line_start":179,"line_end":179,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123957,"byte_end":123960,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":123961,"byte_end":124004,"line_start":181,"line_end":181,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124005,"byte_end":124014,"line_start":182,"line_end":182,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124015,"byte_end":124022,"line_start":183,"line_end":183,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1222},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124779,"byte_end":124788,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> TryJoin4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124309,"byte_end":124369,"line_start":197,"line_end":197,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124370,"byte_end":124373,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124374,"byte_end":124388,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124389,"byte_end":124392,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124393,"byte_end":124400,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124401,"byte_end":124442,"line_start":202,"line_end":202,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124443,"byte_end":124467,"line_start":203,"line_end":203,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124468,"byte_end":124471,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124472,"byte_end":124517,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124518,"byte_end":124563,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124564,"byte_end":124609,"line_start":207,"line_end":207,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124610,"byte_end":124655,"line_start":208,"line_end":208,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124656,"byte_end":124702,"line_start":209,"line_end":209,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124703,"byte_end":124706,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124707,"byte_end":124753,"line_start":211,"line_end":211,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124754,"byte_end":124763,"line_start":212,"line_end":212,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":124764,"byte_end":124771,"line_start":213,"line_end":213,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1227},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125662,"byte_end":125671,"line_start":247,"line_end":247,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125140,"byte_end":125200,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125201,"byte_end":125204,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125205,"byte_end":125219,"line_start":231,"line_end":231,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125220,"byte_end":125223,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125224,"byte_end":125231,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125232,"byte_end":125273,"line_start":234,"line_end":234,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125274,"byte_end":125298,"line_start":235,"line_end":235,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125299,"byte_end":125302,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125303,"byte_end":125348,"line_start":237,"line_end":237,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125349,"byte_end":125394,"line_start":238,"line_end":238,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125395,"byte_end":125440,"line_start":239,"line_end":239,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125441,"byte_end":125486,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125487,"byte_end":125532,"line_start":241,"line_end":241,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125533,"byte_end":125582,"line_start":242,"line_end":242,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125583,"byte_end":125586,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125587,"byte_end":125636,"line_start":244,"line_end":244,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125637,"byte_end":125646,"line_start":245,"line_end":245,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":125647,"byte_end":125654,"line_start":246,"line_end":246,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":127923,"byte_end":127933,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1275}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":127798,"byte_end":127843,"line_start":63,"line_end":63,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":127844,"byte_end":127911,"line_start":64,"line_end":64,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1279},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129549,"byte_end":129561,"line_start":123,"line_end":123,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"fn <I> (i: I) -> TryJoinAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128300,"byte_end":128379,"line_start":85,"line_end":85,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128380,"byte_end":128410,"line_start":86,"line_end":86,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128411,"byte_end":128414,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128415,"byte_end":128494,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128495,"byte_end":128575,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128576,"byte_end":128594,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128595,"byte_end":128598,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128599,"byte_end":128677,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128678,"byte_end":128758,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128759,"byte_end":128833,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128834,"byte_end":128857,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128858,"byte_end":128861,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128862,"byte_end":128939,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128940,"byte_end":128997,"line_start":98,"line_end":98,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128998,"byte_end":129001,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129002,"byte_end":129016,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129017,"byte_end":129020,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129021,"byte_end":129028,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129029,"byte_end":129070,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129071,"byte_end":129117,"line_start":104,"line_end":104,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129118,"byte_end":129121,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129122,"byte_end":129145,"line_start":106,"line_end":106,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129146,"byte_end":129180,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129181,"byte_end":129215,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129216,"byte_end":129250,"line_start":109,"line_end":109,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129251,"byte_end":129257,"line_start":110,"line_end":110,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129258,"byte_end":129261,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129262,"byte_end":129325,"line_start":112,"line_end":112,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129326,"byte_end":129329,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129330,"byte_end":129353,"line_start":114,"line_end":114,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129354,"byte_end":129388,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129389,"byte_end":129424,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129425,"byte_end":129459,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129460,"byte_end":129466,"line_start":118,"line_end":118,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129467,"byte_end":129470,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129471,"byte_end":129523,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129524,"byte_end":129533,"line_start":121,"line_end":121,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129534,"byte_end":129541,"line_start":122,"line_end":122,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5296},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":131619,"byte_end":131628,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":5299}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":131477,"byte_end":131522,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":131523,"byte_end":131590,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1307},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":133213,"byte_end":133223,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn <A, B> (future1: A, future2: B) -> TrySelect<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":131722,"byte_end":131792,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":131793,"byte_end":131796,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":131797,"byte_end":131875,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":131876,"byte_end":131952,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":131953,"byte_end":132025,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132026,"byte_end":132029,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132030,"byte_end":132102,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132103,"byte_end":132131,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132132,"byte_end":132135,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132136,"byte_end":132203,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132204,"byte_end":132275,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132276,"byte_end":132326,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132327,"byte_end":132330,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132331,"byte_end":132345,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132346,"byte_end":132349,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132350,"byte_end":132357,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132358,"byte_end":132442,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132443,"byte_end":132446,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132447,"byte_end":132504,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132505,"byte_end":132508,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132509,"byte_end":132591,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132592,"byte_end":132649,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132650,"byte_end":132707,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132708,"byte_end":132734,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132735,"byte_end":132740,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132741,"byte_end":132836,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132837,"byte_end":132860,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132861,"byte_end":132941,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":132942,"byte_end":133023,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":133024,"byte_end":133094,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":133095,"byte_end":133166,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":133167,"byte_end":133180,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":133181,"byte_end":133191,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":133192,"byte_end":133197,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":133198,"byte_end":133205,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5304},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":134712,"byte_end":134720,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":5306}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":134573,"byte_end":134615,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":134633,"byte_end":134700,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1332},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135442,"byte_end":135451,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"fn <I> (iter: I) -> SelectOk<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":134797,"byte_end":134891,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":134892,"byte_end":134895,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":134896,"byte_end":134985,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":134986,"byte_end":135070,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135071,"byte_end":135152,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135153,"byte_end":135198,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135199,"byte_end":135202,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135203,"byte_end":135281,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135282,"byte_end":135339,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135340,"byte_end":135343,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135344,"byte_end":135356,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135357,"byte_end":135360,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135361,"byte_end":135434,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5313},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137720,"byte_end":137724,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":5310},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137687,"byte_end":137715,"line_start":12,"line_end":12,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5316},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137767,"byte_end":137772,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":5310},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137733,"byte_end":137762,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5310},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137668,"byte_end":137674,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"Either::{Left, Right}","parent":null,"children":[{"krate":0,"index":5313},{"krate":0,"index":5316}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137524,"byte_end":137624,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ type.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137625,"byte_end":137634,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137971,"byte_end":137983,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn (self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137823,"byte_end":137881,"line_start":19,"line_end":19,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137886,"byte_end":137889,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137894,"byte_end":137959,"line_start":21,"line_end":21,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138363,"byte_end":138376,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn (self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138214,"byte_end":138272,"line_start":31,"line_end":31,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138277,"byte_end":138280,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138285,"byte_end":138351,"line_start":33,"line_end":33,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138664,"byte_end":138674,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138591,"byte_end":138652,"line_start":43,"line_end":43,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5364},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8276965,"byte_end":8276974,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":5366},{"krate":0,"index":5367}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"/ A future which can be remotely short-circuited using an `AbortHandle`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8276787,"byte_end":8276861,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8276886,"byte_end":8276953,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5344},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277926,"byte_end":8277929,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"fn (future: Fut, reg: AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277159,"byte_end":8277234,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277239,"byte_end":8277307,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277312,"byte_end":8277315,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277320,"byte_end":8277392,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277397,"byte_end":8277473,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277478,"byte_end":8277503,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277508,"byte_end":8277511,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277516,"byte_end":8277528,"line_start":30,"line_end":30,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277533,"byte_end":8277536,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277541,"byte_end":8277548,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277553,"byte_end":8277594,"line_start":33,"line_end":33,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277599,"byte_end":8277658,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277663,"byte_end":8277666,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277671,"byte_end":8277740,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277745,"byte_end":8277810,"line_start":37,"line_end":37,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277815,"byte_end":8277840,"line_start":38,"line_end":38,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277845,"byte_end":8277888,"line_start":39,"line_end":39,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277893,"byte_end":8277902,"line_start":40,"line_end":40,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277907,"byte_end":8277914,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5374},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278257,"byte_end":8278274,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":5375}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278066,"byte_end":8278117,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278118,"byte_end":8278194,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278195,"byte_end":8278228,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5378},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278381,"byte_end":8278392,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":5379}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278308,"byte_end":8278345,"line_start":58,"line_end":58,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5346},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279062,"byte_end":8279070,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"fn () -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278449,"byte_end":8278523,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278528,"byte_end":8278558,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278563,"byte_end":8278566,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278571,"byte_end":8278639,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278644,"byte_end":8278647,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278652,"byte_end":8278664,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278669,"byte_end":8278672,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278677,"byte_end":8278684,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278689,"byte_end":8278730,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278735,"byte_end":8278794,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278799,"byte_end":8278802,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278807,"byte_end":8278876,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278881,"byte_end":8278946,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278951,"byte_end":8278976,"line_start":78,"line_end":78,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278981,"byte_end":8279024,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279029,"byte_end":8279038,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279043,"byte_end":8279050,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5347},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279973,"byte_end":8279982,"line_start":114,"line_end":114,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"fn <Fut> (future: Fut) -> (Abortable<Fut>, AbortHandle)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279604,"byte_end":8279690,"line_start":107,"line_end":107,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279691,"byte_end":8279694,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279695,"byte_end":8279771,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279772,"byte_end":8279825,"line_start":110,"line_end":110,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279826,"byte_end":8279829,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279830,"byte_end":8279907,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8279908,"byte_end":8279965,"line_start":113,"line_end":113,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5389},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8280286,"byte_end":8280293,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8280175,"byte_end":8280229,"line_start":124,"line_end":124,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5357},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8281898,"byte_end":8281903,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8281534,"byte_end":8281595,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8281600,"byte_end":8281603,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8281608,"byte_end":8281677,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8281682,"byte_end":8281752,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8281757,"byte_end":8281831,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8281836,"byte_end":8281886,"line_start":172,"line_end":172,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1431},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1439},{"krate":0,"index":2529},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2561},{"krate":0,"index":3443},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3468},{"krate":0,"index":3483},{"krate":0,"index":3486},{"krate":0,"index":3506},{"krate":0,"index":3509},{"krate":0,"index":3530},{"krate":0,"index":3533},{"krate":0,"index":3557},{"krate":0,"index":3560},{"krate":0,"index":3581},{"krate":0,"index":3584},{"krate":0,"index":3607},{"krate":0,"index":3610},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3700},{"krate":0,"index":6129},{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6426},{"krate":0,"index":6427},{"krate":0,"index":6471}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146438,"byte_end":146449,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146450,"byte_end":146453,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146454,"byte_end":146528,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146529,"byte_end":146607,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Stream` types","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":146608,"byte_end":146637,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":5402},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":190844,"byte_end":190849,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5405},{"krate":0,"index":5406}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`chain`](super::StreamExt::chain) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":190705,"byte_end":190766,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":190784,"byte_end":190832,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5417},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":193007,"byte_end":193014,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":5420},{"krate":0,"index":5421}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`collect`](super::StreamExt::collect) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":192845,"byte_end":192910,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":192928,"byte_end":192995,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5431},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":194503,"byte_end":194509,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":5433},{"krate":0,"index":5434}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`concat`](super::StreamExt::concat) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":194343,"byte_end":194406,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":194424,"byte_end":194491,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5443},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196393,"byte_end":196402,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5445},{"krate":0,"index":5446}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`enumerate`](super::StreamExt::enumerate) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196246,"byte_end":196315,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196333,"byte_end":196381,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196835,"byte_end":196842,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Enumerate<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196728,"byte_end":196801,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196806,"byte_end":196823,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197152,"byte_end":197159,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Enumerate<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196891,"byte_end":196958,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196963,"byte_end":196994,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196999,"byte_end":197002,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197007,"byte_end":197080,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197085,"byte_end":197140,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197488,"byte_end":197499,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Enumerate<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197220,"byte_end":197294,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197299,"byte_end":197330,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197335,"byte_end":197338,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197343,"byte_end":197416,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197421,"byte_end":197476,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197808,"byte_end":197818,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Enumerate<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197573,"byte_end":197635,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197640,"byte_end":197643,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197648,"byte_end":197720,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197725,"byte_end":197796,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1580},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":199196,"byte_end":199202,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`filter`](super::StreamExt::filter) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":199072,"byte_end":199135,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":199136,"byte_end":199184,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200435,"byte_end":200442,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Filter<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200328,"byte_end":200401,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200406,"byte_end":200423,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200752,"byte_end":200759,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Filter<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200491,"byte_end":200558,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200563,"byte_end":200594,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200599,"byte_end":200602,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200607,"byte_end":200680,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200685,"byte_end":200740,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201088,"byte_end":201099,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Filter<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200820,"byte_end":200894,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200899,"byte_end":200930,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200935,"byte_end":200938,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":200943,"byte_end":201016,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201021,"byte_end":201076,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201408,"byte_end":201418,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Filter<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201173,"byte_end":201235,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201240,"byte_end":201243,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201248,"byte_end":201320,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201325,"byte_end":201396,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1632},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":203868,"byte_end":203877,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`filter_map`](super::StreamExt::filter_map) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":203736,"byte_end":203807,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":203808,"byte_end":203856,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204816,"byte_end":204823,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FilterMap<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204709,"byte_end":204782,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204787,"byte_end":204804,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205133,"byte_end":205140,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FilterMap<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204872,"byte_end":204939,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204944,"byte_end":204975,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204980,"byte_end":204983,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204988,"byte_end":205061,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205066,"byte_end":205121,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205469,"byte_end":205480,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FilterMap<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205201,"byte_end":205275,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205280,"byte_end":205311,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205316,"byte_end":205319,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205324,"byte_end":205397,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205402,"byte_end":205457,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205789,"byte_end":205799,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FilterMap<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205554,"byte_end":205616,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205621,"byte_end":205624,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205629,"byte_end":205701,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205706,"byte_end":205777,"line_start":77,"line_end":77,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5473},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208021,"byte_end":208028,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5475},{"krate":0,"index":5476}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`flatten`](super::StreamExt::flatten) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":207878,"byte_end":207943,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":207961,"byte_end":208009,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208580,"byte_end":208587,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Flatten<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208473,"byte_end":208546,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208551,"byte_end":208568,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208897,"byte_end":208904,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Flatten<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208636,"byte_end":208703,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208708,"byte_end":208739,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208744,"byte_end":208747,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208752,"byte_end":208825,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208830,"byte_end":208885,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209233,"byte_end":209244,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Flatten<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208965,"byte_end":209039,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209044,"byte_end":209075,"line_start":59,"line_end":59,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209080,"byte_end":209083,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209088,"byte_end":209161,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209166,"byte_end":209221,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209553,"byte_end":209563,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Flatten<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209318,"byte_end":209380,"line_start":67,"line_end":67,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209385,"byte_end":209388,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209393,"byte_end":209465,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209470,"byte_end":209541,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1713},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":211110,"byte_end":211114,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fold`](super::StreamExt::fold) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":210971,"byte_end":211030,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":211031,"byte_end":211098,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1768},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":213759,"byte_end":213766,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`for_each`](super::StreamExt::for_each) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":213612,"byte_end":213679,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":213680,"byte_end":213747,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5504},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216017,"byte_end":216021,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5506},{"krate":0,"index":5507}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`fuse`](super::StreamExt::fuse) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":215880,"byte_end":215939,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":215957,"byte_end":216005,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216554,"byte_end":216561,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216285,"byte_end":216347,"line_start":26,"line_end":26,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216352,"byte_end":216355,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216360,"byte_end":216428,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216433,"byte_end":216499,"line_start":29,"line_end":29,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216504,"byte_end":216542,"line_start":30,"line_end":30,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216715,"byte_end":216722,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fuse<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216608,"byte_end":216681,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216686,"byte_end":216703,"line_start":36,"line_end":36,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217032,"byte_end":217039,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fuse<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216771,"byte_end":216838,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216843,"byte_end":216874,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216879,"byte_end":216882,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216887,"byte_end":216960,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216965,"byte_end":217020,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217368,"byte_end":217379,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fuse<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217100,"byte_end":217174,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217179,"byte_end":217210,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217215,"byte_end":217218,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217223,"byte_end":217296,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217301,"byte_end":217356,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217688,"byte_end":217698,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fuse<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217453,"byte_end":217515,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217520,"byte_end":217523,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217528,"byte_end":217600,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217605,"byte_end":217676,"line_start":62,"line_end":62,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5516},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219028,"byte_end":219040,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":5518}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":218858,"byte_end":218931,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":218949,"byte_end":219016,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219711,"byte_end":219718,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn (&self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219319,"byte_end":219392,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219397,"byte_end":219414,"line_start":25,"line_end":25,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219419,"byte_end":219422,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219427,"byte_end":219508,"line_start":27,"line_end":27,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219513,"byte_end":219595,"line_start":28,"line_end":28,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219600,"byte_end":219679,"line_start":29,"line_end":29,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219684,"byte_end":219699,"line_start":30,"line_end":30,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220329,"byte_end":220336,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn (&mut self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219783,"byte_end":219850,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219855,"byte_end":219886,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219891,"byte_end":219894,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219899,"byte_end":219972,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219977,"byte_end":220032,"line_start":39,"line_end":39,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220037,"byte_end":220040,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220045,"byte_end":220126,"line_start":41,"line_end":41,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220131,"byte_end":220213,"line_start":42,"line_end":42,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220218,"byte_end":220297,"line_start":43,"line_end":43,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220302,"byte_end":220317,"line_start":44,"line_end":44,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220962,"byte_end":220973,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220409,"byte_end":220483,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220488,"byte_end":220519,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220524,"byte_end":220527,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220532,"byte_end":220605,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220610,"byte_end":220665,"line_start":53,"line_end":53,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220670,"byte_end":220673,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220678,"byte_end":220759,"line_start":55,"line_end":55,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220764,"byte_end":220846,"line_start":56,"line_end":56,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220851,"byte_end":220930,"line_start":57,"line_end":57,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":220935,"byte_end":220950,"line_start":58,"line_end":58,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221588,"byte_end":221598,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn (self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221068,"byte_end":221130,"line_start":63,"line_end":63,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221135,"byte_end":221138,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221143,"byte_end":221215,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221220,"byte_end":221291,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221296,"byte_end":221299,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221304,"byte_end":221385,"line_start":68,"line_end":68,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221390,"byte_end":221472,"line_start":69,"line_end":69,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221477,"byte_end":221556,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221561,"byte_end":221576,"line_start":71,"line_end":71,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1871},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":222590,"byte_end":222597,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875}],"decl_id":null,"docs":" Stream for the [`inspect`](super::StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect`](super::StreamExt::inspect) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":222464,"byte_end":222529,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":222530,"byte_end":222578,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223276,"byte_end":223283,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Inspect<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223169,"byte_end":223242,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223247,"byte_end":223264,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223593,"byte_end":223600,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Inspect<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223332,"byte_end":223399,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223404,"byte_end":223435,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223440,"byte_end":223443,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223448,"byte_end":223521,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223526,"byte_end":223581,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223929,"byte_end":223940,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Inspect<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223661,"byte_end":223735,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223740,"byte_end":223771,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223776,"byte_end":223779,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223784,"byte_end":223857,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":223862,"byte_end":223917,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":224249,"byte_end":224259,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Inspect<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":224014,"byte_end":224076,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":224081,"byte_end":224084,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":224089,"byte_end":224161,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":224166,"byte_end":224237,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1920},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":225706,"byte_end":225709,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1923},{"krate":0,"index":1924}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map`](super::StreamExt::map) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":225588,"byte_end":225645,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":225646,"byte_end":225694,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226371,"byte_end":226378,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Map<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226264,"byte_end":226337,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226342,"byte_end":226359,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226688,"byte_end":226695,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226427,"byte_end":226494,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226499,"byte_end":226530,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226535,"byte_end":226538,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226543,"byte_end":226616,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226621,"byte_end":226676,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":227024,"byte_end":227035,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Map<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226756,"byte_end":226830,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226835,"byte_end":226866,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226871,"byte_end":226874,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226879,"byte_end":226952,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226957,"byte_end":227012,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":227344,"byte_end":227354,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Map<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":227109,"byte_end":227171,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":227176,"byte_end":227179,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":227184,"byte_end":227256,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":227261,"byte_end":227332,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5535},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":228646,"byte_end":228650,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":5538}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":228490,"byte_end":228549,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":228567,"byte_end":228634,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5543},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":229656,"byte_end":229670,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":5546}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":229472,"byte_end":229547,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":229548,"byte_end":229559,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":229577,"byte_end":229644,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5551},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231184,"byte_end":231192,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":5553},{"krate":0,"index":5554}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"/ A `Stream` that implements a `peek` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":230892,"byte_end":230939,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":230940,"byte_end":230943,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The `peek` method can be used to retrieve a reference","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":230944,"byte_end":231001,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ to the next `Stream::Item` if available. A subsequent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231002,"byte_end":231059,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ call to `poll` will return the owned item.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231060,"byte_end":231106,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231124,"byte_end":231172,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231693,"byte_end":231700,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Peekable<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231586,"byte_end":231659,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231664,"byte_end":231681,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232019,"byte_end":232026,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Peekable<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231758,"byte_end":231825,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231830,"byte_end":231861,"line_start":44,"line_end":44,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231866,"byte_end":231869,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231874,"byte_end":231947,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231952,"byte_end":232007,"line_start":47,"line_end":47,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232360,"byte_end":232371,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Peekable<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232092,"byte_end":232166,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232171,"byte_end":232202,"line_start":53,"line_end":53,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232207,"byte_end":232210,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232215,"byte_end":232288,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232293,"byte_end":232348,"line_start":56,"line_end":56,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232694,"byte_end":232704,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Peekable<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232459,"byte_end":232521,"line_start":61,"line_end":61,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232526,"byte_end":232529,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232534,"byte_end":232606,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232611,"byte_end":232682,"line_start":64,"line_end":64,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232918,"byte_end":232922,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn (self: Pin<&mut Self>) -> Peek<'_, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232763,"byte_end":232836,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":232841,"byte_end":232906,"line_start":70,"line_end":70,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":234264,"byte_end":234273,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":234026,"byte_end":234088,"line_start":99,"line_end":99,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":234093,"byte_end":234096,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":234101,"byte_end":234174,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":234179,"byte_end":234252,"line_start":102,"line_end":102,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2043},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":235756,"byte_end":235760,"line_start":155,"line_end":155,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":2046}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"/ Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":235607,"byte_end":235695,"line_start":153,"line_end":153,"column_start":1,"column_end":89}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":235696,"byte_end":235744,"line_start":154,"line_end":154,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5563},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237195,"byte_end":237199,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":5565},{"krate":0,"index":5566}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`skip`](super::StreamExt::skip) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237058,"byte_end":237117,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237135,"byte_end":237183,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237634,"byte_end":237641,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Skip<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237527,"byte_end":237600,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237605,"byte_end":237622,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237951,"byte_end":237958,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Skip<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237690,"byte_end":237757,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237762,"byte_end":237793,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237798,"byte_end":237801,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237806,"byte_end":237879,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237884,"byte_end":237939,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238287,"byte_end":238298,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Skip<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238019,"byte_end":238093,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238098,"byte_end":238129,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238134,"byte_end":238137,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238142,"byte_end":238215,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238220,"byte_end":238275,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238607,"byte_end":238617,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Skip<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238372,"byte_end":238434,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238439,"byte_end":238442,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238447,"byte_end":238519,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238524,"byte_end":238595,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2105},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":240219,"byte_end":240228,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`skip_while`](super::StreamExt::skip_while) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":240087,"byte_end":240158,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":240159,"byte_end":240207,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":241622,"byte_end":241629,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SkipWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":241515,"byte_end":241588,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":241593,"byte_end":241610,"line_start":60,"line_end":60,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":241939,"byte_end":241946,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SkipWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":241678,"byte_end":241745,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":241750,"byte_end":241781,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":241786,"byte_end":241789,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":241794,"byte_end":241867,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":241872,"byte_end":241927,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242275,"byte_end":242286,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SkipWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242007,"byte_end":242081,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242086,"byte_end":242117,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242122,"byte_end":242125,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242130,"byte_end":242203,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242208,"byte_end":242263,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242595,"byte_end":242605,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SkipWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242360,"byte_end":242422,"line_start":83,"line_end":83,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242427,"byte_end":242430,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242435,"byte_end":242507,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242512,"byte_end":242583,"line_start":86,"line_end":86,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5587},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245177,"byte_end":245181,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":5589},{"krate":0,"index":5590}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`take`](super::StreamExt::take) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245040,"byte_end":245099,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245117,"byte_end":245165,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245616,"byte_end":245623,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245509,"byte_end":245582,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245587,"byte_end":245604,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245933,"byte_end":245940,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245672,"byte_end":245739,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245744,"byte_end":245775,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245780,"byte_end":245783,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245788,"byte_end":245861,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245866,"byte_end":245921,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246269,"byte_end":246280,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246001,"byte_end":246075,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246080,"byte_end":246111,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246116,"byte_end":246119,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246124,"byte_end":246197,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246202,"byte_end":246257,"line_start":49,"line_end":49,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246589,"byte_end":246599,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246354,"byte_end":246416,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246421,"byte_end":246424,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246429,"byte_end":246501,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246506,"byte_end":246577,"line_start":57,"line_end":57,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2188},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":248401,"byte_end":248410,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`take_while`](super::StreamExt::take_while) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":248269,"byte_end":248340,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":248341,"byte_end":248389,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":249837,"byte_end":249844,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TakeWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":249730,"byte_end":249803,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":249808,"byte_end":249825,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250154,"byte_end":250161,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TakeWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":249893,"byte_end":249960,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":249965,"byte_end":249996,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250001,"byte_end":250004,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250009,"byte_end":250082,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250087,"byte_end":250142,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250490,"byte_end":250501,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TakeWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250222,"byte_end":250296,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250301,"byte_end":250332,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250337,"byte_end":250340,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250345,"byte_end":250418,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250423,"byte_end":250478,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250810,"byte_end":250820,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TakeWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250575,"byte_end":250637,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250642,"byte_end":250645,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250650,"byte_end":250722,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250727,"byte_end":250798,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2245},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253349,"byte_end":253353,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`then`](super::StreamExt::then) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253229,"byte_end":253288,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253289,"byte_end":253337,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254294,"byte_end":254301,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Then<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254187,"byte_end":254260,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254265,"byte_end":254282,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254611,"byte_end":254618,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Then<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254350,"byte_end":254417,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254422,"byte_end":254453,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254458,"byte_end":254461,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254466,"byte_end":254539,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254544,"byte_end":254599,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254947,"byte_end":254958,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Then<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254679,"byte_end":254753,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254758,"byte_end":254789,"line_start":67,"line_end":67,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254794,"byte_end":254797,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254802,"byte_end":254875,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":254880,"byte_end":254935,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":255267,"byte_end":255277,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Then<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":255032,"byte_end":255094,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":255099,"byte_end":255102,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":255107,"byte_end":255179,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":255184,"byte_end":255255,"line_start":78,"line_end":78,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5619},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":257273,"byte_end":257276,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":5622},{"krate":0,"index":5623},{"krate":0,"index":5624},{"krate":0,"index":5625}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`zip`](super::StreamExt::zip) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":257138,"byte_end":257195,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":257213,"byte_end":257261,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258215,"byte_end":258222,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258107,"byte_end":258181,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258186,"byte_end":258203,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258578,"byte_end":258585,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258316,"byte_end":258384,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258389,"byte_end":258420,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258425,"byte_end":258428,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258433,"byte_end":258506,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258511,"byte_end":258566,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258960,"byte_end":258971,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258691,"byte_end":258766,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258771,"byte_end":258802,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258807,"byte_end":258810,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258815,"byte_end":258888,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":258893,"byte_end":258948,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":259477,"byte_end":259487,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":259241,"byte_end":259304,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":259309,"byte_end":259312,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":259317,"byte_end":259389,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":259394,"byte_end":259465,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5640},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":262323,"byte_end":262329,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":5642},{"krate":0,"index":5643},{"krate":0,"index":5644}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`chunks`](super::StreamExt::chunks) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":262182,"byte_end":262245,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":262263,"byte_end":262311,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263174,"byte_end":263181,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chunks<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263067,"byte_end":263140,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263145,"byte_end":263162,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263500,"byte_end":263507,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chunks<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263239,"byte_end":263306,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263311,"byte_end":263342,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263347,"byte_end":263350,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263355,"byte_end":263428,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263433,"byte_end":263488,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263841,"byte_end":263852,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chunks<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263573,"byte_end":263647,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263652,"byte_end":263683,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263688,"byte_end":263691,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263696,"byte_end":263769,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263774,"byte_end":263829,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":264175,"byte_end":264185,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chunks<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":263940,"byte_end":264002,"line_start":65,"line_end":65,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":264007,"byte_end":264010,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":264015,"byte_end":264087,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":264092,"byte_end":264163,"line_start":68,"line_end":68,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2375},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":266666,"byte_end":266670,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`scan`](super::StreamExt::scan) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":266546,"byte_end":266605,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":266606,"byte_end":266654,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268175,"byte_end":268182,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Scan<St, S, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268068,"byte_end":268141,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268146,"byte_end":268163,"line_start":71,"line_end":71,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268492,"byte_end":268499,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Scan<St, S, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268231,"byte_end":268298,"line_start":76,"line_end":76,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268303,"byte_end":268334,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268339,"byte_end":268342,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268347,"byte_end":268420,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268425,"byte_end":268480,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268828,"byte_end":268839,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Scan<St, S, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268560,"byte_end":268634,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268639,"byte_end":268670,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268675,"byte_end":268678,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268683,"byte_end":268756,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268761,"byte_end":268816,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":269148,"byte_end":269158,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Scan<St, S, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268913,"byte_end":268975,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268980,"byte_end":268983,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":268988,"byte_end":269060,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":269065,"byte_end":269136,"line_start":97,"line_end":97,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5678},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8282641,"byte_end":8282656,"line_start":14,"line_end":14,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":5680},{"krate":0,"index":5681},{"krate":0,"index":5682}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8282493,"byte_end":8282568,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8282569,"byte_end":8282580,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8282581,"byte_end":8282629,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5691},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8283800,"byte_end":8283807,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufferUnordered<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8283693,"byte_end":8283766,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8283771,"byte_end":8283788,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5692},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284126,"byte_end":8284133,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufferUnordered<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8283865,"byte_end":8283932,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8283937,"byte_end":8283968,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8283973,"byte_end":8283976,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8283981,"byte_end":8284054,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284059,"byte_end":8284114,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5693},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284467,"byte_end":8284478,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufferUnordered<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284199,"byte_end":8284273,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284278,"byte_end":8284309,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284314,"byte_end":8284317,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284322,"byte_end":8284395,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284400,"byte_end":8284455,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5694},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284801,"byte_end":8284811,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufferUnordered<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284566,"byte_end":8284628,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284633,"byte_end":8284636,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284641,"byte_end":8284713,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284718,"byte_end":8284789,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5719},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8287232,"byte_end":8287240,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":5721},{"krate":0,"index":5722},{"krate":0,"index":5723}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`buffered`](super::StreamExt::buffered) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8287104,"byte_end":8287171,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8287172,"byte_end":8287220,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5732},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288342,"byte_end":8288349,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Buffered<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288235,"byte_end":8288308,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288313,"byte_end":8288330,"line_start":60,"line_end":60,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5733},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288668,"byte_end":8288675,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Buffered<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288407,"byte_end":8288474,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288479,"byte_end":8288510,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288515,"byte_end":8288518,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288523,"byte_end":8288596,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288601,"byte_end":8288656,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5734},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8289009,"byte_end":8289020,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Buffered<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288741,"byte_end":8288815,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288820,"byte_end":8288851,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288856,"byte_end":8288859,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288864,"byte_end":8288937,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8288942,"byte_end":8288997,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5735},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8289343,"byte_end":8289353,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Buffered<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8289108,"byte_end":8289170,"line_start":83,"line_end":83,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8289175,"byte_end":8289178,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8289183,"byte_end":8289255,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8289260,"byte_end":8289331,"line_start":86,"line_end":86,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5759},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8291562,"byte_end":8291579,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5766}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8291389,"byte_end":8291470,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8291471,"byte_end":8291482,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8291483,"byte_end":8291550,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5794},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/catch_unwind.rs","byte_start":271345,"byte_end":271356,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":5796},{"krate":0,"index":5797}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/catch_unwind.rs","byte_start":271192,"byte_end":271267,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/catch_unwind.rs","byte_start":271285,"byte_end":271333,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2461},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154182,"byte_end":154191,"line_start":165,"line_end":165,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2491},{"krate":0,"index":2494},{"krate":0,"index":2497},{"krate":0,"index":2500},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2511},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2525},{"krate":0,"index":2527},{"krate":0,"index":2528}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154071,"byte_end":154145,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154146,"byte_end":154171,"line_start":164,"line_end":164,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155101,"byte_end":155105,"line_start":189,"line_end":189,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154206,"byte_end":154272,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154277,"byte_end":154280,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154285,"byte_end":154353,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154358,"byte_end":154433,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154438,"byte_end":154513,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154518,"byte_end":154572,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154577,"byte_end":154652,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154657,"byte_end":154667,"line_start":173,"line_end":173,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154672,"byte_end":154675,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154680,"byte_end":154694,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154699,"byte_end":154702,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154707,"byte_end":154714,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154719,"byte_end":154760,"line_start":178,"line_end":178,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154765,"byte_end":154808,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154813,"byte_end":154816,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154821,"byte_end":154862,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154867,"byte_end":154870,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154875,"byte_end":154920,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154925,"byte_end":154970,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154975,"byte_end":155020,"line_start":185,"line_end":185,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155025,"byte_end":155067,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155072,"byte_end":155081,"line_start":187,"line_end":187,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155086,"byte_end":155093,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156304,"byte_end":156315,"line_start":224,"line_end":224,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn (self) -> StreamFuture<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155207,"byte_end":155279,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155284,"byte_end":155345,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155350,"byte_end":155353,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155358,"byte_end":155433,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155438,"byte_end":155492,"line_start":200,"line_end":200,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155497,"byte_end":155500,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155505,"byte_end":155578,"line_start":202,"line_end":202,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155583,"byte_end":155645,"line_start":203,"line_end":203,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155650,"byte_end":155725,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155730,"byte_end":155784,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155789,"byte_end":155864,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155869,"byte_end":155879,"line_start":207,"line_end":207,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155884,"byte_end":155887,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155892,"byte_end":155906,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155911,"byte_end":155914,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155919,"byte_end":155926,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155931,"byte_end":155972,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":155977,"byte_end":156020,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156025,"byte_end":156028,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156033,"byte_end":156070,"line_start":215,"line_end":215,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156075,"byte_end":156078,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156083,"byte_end":156135,"line_start":217,"line_end":217,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156140,"byte_end":156170,"line_start":218,"line_end":218,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156175,"byte_end":156178,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156183,"byte_end":156235,"line_start":220,"line_end":220,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156240,"byte_end":156270,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156275,"byte_end":156284,"line_start":222,"line_end":222,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156289,"byte_end":156296,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157268,"byte_end":157271,"line_start":254,"line_end":254,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156432,"byte_end":156507,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156512,"byte_end":156535,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156540,"byte_end":156543,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156548,"byte_end":156620,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156625,"byte_end":156689,"line_start":235,"line_end":235,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156694,"byte_end":156731,"line_start":236,"line_end":236,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156736,"byte_end":156739,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156744,"byte_end":156820,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156825,"byte_end":156896,"line_start":239,"line_end":239,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156901,"byte_end":156922,"line_start":240,"line_end":240,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156927,"byte_end":156930,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156935,"byte_end":156949,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156954,"byte_end":156957,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156962,"byte_end":156969,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156974,"byte_end":157015,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157020,"byte_end":157063,"line_start":246,"line_end":246,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157068,"byte_end":157071,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157076,"byte_end":157113,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157118,"byte_end":157157,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157162,"byte_end":157165,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157170,"byte_end":157234,"line_start":251,"line_end":251,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157239,"byte_end":157248,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157253,"byte_end":157260,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158803,"byte_end":158812,"line_start":300,"line_end":300,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157415,"byte_end":157486,"line_start":262,"line_end":262,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157491,"byte_end":157510,"line_start":263,"line_end":263,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157515,"byte_end":157518,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157523,"byte_end":157588,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157593,"byte_end":157662,"line_start":266,"line_end":266,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157667,"byte_end":157678,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157683,"byte_end":157686,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157691,"byte_end":157766,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157771,"byte_end":157853,"line_start":270,"line_end":270,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157858,"byte_end":157876,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157881,"byte_end":157884,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157889,"byte_end":157912,"line_start":273,"line_end":273,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157917,"byte_end":157920,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157925,"byte_end":158000,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ [`usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158005,"byte_end":158087,"line_start":276,"line_end":276,"column_start":5,"column_end":87}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158092,"byte_end":158148,"line_start":277,"line_end":277,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158153,"byte_end":158156,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158161,"byte_end":158173,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158178,"byte_end":158181,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158186,"byte_end":158255,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158260,"byte_end":158285,"line_start":282,"line_end":282,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158290,"byte_end":158293,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158298,"byte_end":158312,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158317,"byte_end":158320,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158325,"byte_end":158332,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158337,"byte_end":158378,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158383,"byte_end":158426,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158431,"byte_end":158434,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158439,"byte_end":158490,"line_start":290,"line_end":290,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158495,"byte_end":158498,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158503,"byte_end":158543,"line_start":292,"line_end":292,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158548,"byte_end":158551,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158556,"byte_end":158608,"line_start":294,"line_end":294,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158613,"byte_end":158665,"line_start":295,"line_end":295,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158670,"byte_end":158722,"line_start":296,"line_end":296,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158727,"byte_end":158769,"line_start":297,"line_end":297,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158774,"byte_end":158783,"line_start":298,"line_end":298,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158788,"byte_end":158795,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160000,"byte_end":160006,"line_start":333,"line_end":333,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn <Fut, F> (self, f: F) -> Filter<Self, Fut, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158915,"byte_end":158987,"line_start":307,"line_end":307,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158992,"byte_end":159019,"line_start":308,"line_end":308,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159024,"byte_end":159027,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159032,"byte_end":159107,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159112,"byte_end":159183,"line_start":311,"line_end":311,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159188,"byte_end":159260,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159265,"byte_end":159339,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159344,"byte_end":159402,"line_start":314,"line_end":314,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159407,"byte_end":159410,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159415,"byte_end":159491,"line_start":316,"line_end":316,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159496,"byte_end":159570,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159575,"byte_end":159596,"line_start":318,"line_end":318,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159601,"byte_end":159604,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159609,"byte_end":159623,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159628,"byte_end":159631,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159636,"byte_end":159643,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159648,"byte_end":159689,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159694,"byte_end":159718,"line_start":324,"line_end":324,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159723,"byte_end":159766,"line_start":325,"line_end":325,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159771,"byte_end":159774,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159779,"byte_end":159817,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159822,"byte_end":159883,"line_start":328,"line_end":328,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159888,"byte_end":159891,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159896,"byte_end":159966,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159971,"byte_end":159980,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":159985,"byte_end":159992,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161299,"byte_end":161309,"line_start":367,"line_end":367,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn <Fut, T, F> (self, f: F) -> FilterMap<Self, Fut, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160202,"byte_end":160277,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160282,"byte_end":160358,"line_start":343,"line_end":343,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160363,"byte_end":160366,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160371,"byte_end":160446,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160451,"byte_end":160526,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160531,"byte_end":160607,"line_start":347,"line_end":347,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160612,"byte_end":160677,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160682,"byte_end":160685,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160690,"byte_end":160766,"line_start":350,"line_end":350,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160771,"byte_end":160845,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160850,"byte_end":160875,"line_start":352,"line_end":352,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160880,"byte_end":160883,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160888,"byte_end":160902,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160907,"byte_end":160914,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160919,"byte_end":160960,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":160965,"byte_end":161008,"line_start":357,"line_end":357,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161013,"byte_end":161016,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161021,"byte_end":161059,"line_start":359,"line_end":359,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161064,"byte_end":161114,"line_start":360,"line_end":360,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161119,"byte_end":161170,"line_start":361,"line_end":361,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161175,"byte_end":161182,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161187,"byte_end":161190,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161195,"byte_end":161265,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161270,"byte_end":161279,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161284,"byte_end":161291,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162315,"byte_end":162319,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161518,"byte_end":161591,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161596,"byte_end":161624,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161629,"byte_end":161632,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161637,"byte_end":161711,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161716,"byte_end":161783,"line_start":380,"line_end":380,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161788,"byte_end":161833,"line_start":381,"line_end":381,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161838,"byte_end":161841,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161846,"byte_end":161922,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161927,"byte_end":161953,"line_start":384,"line_end":384,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161958,"byte_end":161961,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161966,"byte_end":161980,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161985,"byte_end":161988,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161993,"byte_end":162000,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162005,"byte_end":162046,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162051,"byte_end":162094,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162099,"byte_end":162102,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162107,"byte_end":162144,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162149,"byte_end":162204,"line_start":393,"line_end":393,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162209,"byte_end":162212,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162217,"byte_end":162281,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162286,"byte_end":162295,"line_start":396,"line_end":396,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162300,"byte_end":162307,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163220,"byte_end":163227,"line_start":432,"line_end":432,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn <C> (self) -> Collect<Self, C>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162495,"byte_end":162549,"line_start":407,"line_end":407,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162554,"byte_end":162609,"line_start":408,"line_end":408,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162614,"byte_end":162617,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162622,"byte_end":162690,"line_start":410,"line_end":410,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162695,"byte_end":162698,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162703,"byte_end":162717,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162722,"byte_end":162725,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162730,"byte_end":162737,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162742,"byte_end":162783,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162788,"byte_end":162819,"line_start":416,"line_end":416,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162824,"byte_end":162859,"line_start":417,"line_end":417,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162864,"byte_end":162884,"line_start":418,"line_end":418,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162889,"byte_end":162892,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162897,"byte_end":162934,"line_start":420,"line_end":420,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162939,"byte_end":162942,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162947,"byte_end":162974,"line_start":422,"line_end":422,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162979,"byte_end":163003,"line_start":423,"line_end":423,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163008,"byte_end":163050,"line_start":424,"line_end":424,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163055,"byte_end":163064,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163069,"byte_end":163076,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163081,"byte_end":163084,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163089,"byte_end":163137,"line_start":428,"line_end":428,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163142,"byte_end":163186,"line_start":429,"line_end":429,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163191,"byte_end":163200,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163205,"byte_end":163212,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164397,"byte_end":164403,"line_start":471,"line_end":471,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn (self) -> Concat<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163362,"byte_end":163424,"line_start":439,"line_end":439,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163429,"byte_end":163493,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163498,"byte_end":163501,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163506,"byte_end":163570,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163575,"byte_end":163640,"line_start":443,"line_end":443,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163645,"byte_end":163691,"line_start":444,"line_end":444,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163696,"byte_end":163699,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163704,"byte_end":163753,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163758,"byte_end":163798,"line_start":447,"line_end":447,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163803,"byte_end":163806,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163811,"byte_end":163825,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163830,"byte_end":163833,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163838,"byte_end":163845,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163850,"byte_end":163891,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163896,"byte_end":163927,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163932,"byte_end":163967,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163972,"byte_end":163992,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163997,"byte_end":164000,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164005,"byte_end":164042,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164047,"byte_end":164050,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164055,"byte_end":164082,"line_start":459,"line_end":459,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164087,"byte_end":164118,"line_start":460,"line_end":460,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164123,"byte_end":164149,"line_start":461,"line_end":461,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164154,"byte_end":164220,"line_start":462,"line_end":462,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164225,"byte_end":164234,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164239,"byte_end":164246,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164251,"byte_end":164254,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164259,"byte_end":164294,"line_start":466,"line_end":466,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164299,"byte_end":164302,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164307,"byte_end":164363,"line_start":468,"line_end":468,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164368,"byte_end":164377,"line_start":469,"line_end":469,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164382,"byte_end":164389,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165416,"byte_end":165420,"line_start":499,"line_end":499,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> Fold<Self, Fut, T, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164601,"byte_end":164668,"line_start":479,"line_end":479,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164673,"byte_end":164725,"line_start":480,"line_end":480,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164730,"byte_end":164733,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164738,"byte_end":164808,"line_start":482,"line_end":482,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164813,"byte_end":164889,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164894,"byte_end":164970,"line_start":484,"line_end":484,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164975,"byte_end":165045,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165050,"byte_end":165076,"line_start":486,"line_end":486,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165081,"byte_end":165084,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165089,"byte_end":165103,"line_start":488,"line_end":488,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165108,"byte_end":165111,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165116,"byte_end":165123,"line_start":490,"line_end":490,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165128,"byte_end":165169,"line_start":491,"line_end":491,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165174,"byte_end":165217,"line_start":492,"line_end":492,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165222,"byte_end":165225,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165230,"byte_end":165273,"line_start":494,"line_end":494,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165278,"byte_end":165347,"line_start":495,"line_end":495,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165352,"byte_end":165382,"line_start":496,"line_end":496,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165387,"byte_end":165396,"line_start":497,"line_end":497,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165401,"byte_end":165408,"line_start":498,"line_end":498,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166591,"byte_end":166598,"line_start":539,"line_end":539,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165632,"byte_end":165697,"line_start":508,"line_end":508,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165702,"byte_end":165705,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165710,"byte_end":165724,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165729,"byte_end":165732,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165737,"byte_end":165744,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165749,"byte_end":165790,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165795,"byte_end":165826,"line_start":514,"line_end":514,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165831,"byte_end":165866,"line_start":515,"line_end":515,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165871,"byte_end":165891,"line_start":516,"line_end":516,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165896,"byte_end":165899,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165904,"byte_end":165943,"line_start":518,"line_end":518,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165948,"byte_end":165987,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":165992,"byte_end":166031,"line_start":520,"line_end":520,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166036,"byte_end":166039,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166044,"byte_end":166071,"line_start":522,"line_end":522,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166076,"byte_end":166115,"line_start":523,"line_end":523,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166120,"byte_end":166159,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166164,"byte_end":166171,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166176,"byte_end":166203,"line_start":526,"line_end":526,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166208,"byte_end":166247,"line_start":527,"line_end":527,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166252,"byte_end":166291,"line_start":528,"line_end":528,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166296,"byte_end":166303,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166308,"byte_end":166335,"line_start":530,"line_end":530,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166340,"byte_end":166381,"line_start":531,"line_end":531,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166386,"byte_end":166427,"line_start":532,"line_end":532,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166432,"byte_end":166439,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166444,"byte_end":166447,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166452,"byte_end":166511,"line_start":535,"line_end":535,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166516,"byte_end":166557,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166562,"byte_end":166571,"line_start":537,"line_end":537,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166576,"byte_end":166583,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167518,"byte_end":167522,"line_start":569,"line_end":569,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn <S, B, Fut, F> (self, initial_state: S, f: F) -> Scan<Self, S, Fut, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state and produces a new stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166725,"byte_end":166823,"line_start":547,"line_end":547,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166828,"byte_end":166831,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element of the stream until provided closure","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166836,"byte_end":166948,"line_start":549,"line_end":549,"column_start":5,"column_end":117}},{"value":"/ returns `None`. Once `None` is returned, stream will be terminated.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":166953,"byte_end":167024,"line_start":550,"line_end":550,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167029,"byte_end":167032,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167037,"byte_end":167051,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167056,"byte_end":167059,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167064,"byte_end":167071,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167076,"byte_end":167117,"line_start":555,"line_end":555,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167122,"byte_end":167146,"line_start":556,"line_end":556,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167151,"byte_end":167194,"line_start":557,"line_end":557,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167199,"byte_end":167202,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167207,"byte_end":167245,"line_start":559,"line_end":559,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167250,"byte_end":167253,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167258,"byte_end":167302,"line_start":561,"line_end":561,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167307,"byte_end":167327,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167332,"byte_end":167395,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167400,"byte_end":167407,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167412,"byte_end":167415,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167420,"byte_end":167484,"line_start":566,"line_end":566,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167489,"byte_end":167498,"line_start":567,"line_end":567,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167503,"byte_end":167510,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168543,"byte_end":168553,"line_start":600,"line_end":600,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn <Fut, F> (self, f: F) -> SkipWhile<Self, Fut, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167768,"byte_end":167842,"line_start":578,"line_end":578,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167847,"byte_end":167870,"line_start":579,"line_end":579,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167875,"byte_end":167878,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167883,"byte_end":167956,"line_start":581,"line_end":581,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":167961,"byte_end":168033,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ returns false all future elements will be returned from the underlying","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168038,"byte_end":168112,"line_start":583,"line_end":583,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168117,"byte_end":168128,"line_start":584,"line_end":584,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168133,"byte_end":168136,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168141,"byte_end":168155,"line_start":586,"line_end":586,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168160,"byte_end":168163,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168168,"byte_end":168175,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168180,"byte_end":168221,"line_start":589,"line_end":589,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168226,"byte_end":168250,"line_start":590,"line_end":590,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168255,"byte_end":168298,"line_start":591,"line_end":591,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168303,"byte_end":168306,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168311,"byte_end":168349,"line_start":593,"line_end":593,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168354,"byte_end":168357,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168362,"byte_end":168425,"line_start":595,"line_end":595,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168430,"byte_end":168433,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168438,"byte_end":168509,"line_start":597,"line_end":597,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168514,"byte_end":168523,"line_start":598,"line_end":598,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168528,"byte_end":168535,"line_start":599,"line_end":599,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169507,"byte_end":169517,"line_start":630,"line_end":630,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn <Fut, F> (self, f: F) -> TakeWhile<Self, Fut, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168755,"byte_end":168831,"line_start":609,"line_end":609,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168836,"byte_end":168859,"line_start":610,"line_end":610,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168864,"byte_end":168867,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168872,"byte_end":168947,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":168952,"byte_end":169024,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169029,"byte_end":169093,"line_start":614,"line_end":614,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169098,"byte_end":169101,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169106,"byte_end":169120,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169125,"byte_end":169128,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169133,"byte_end":169140,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169145,"byte_end":169186,"line_start":619,"line_end":619,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169191,"byte_end":169215,"line_start":620,"line_end":620,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169220,"byte_end":169263,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169268,"byte_end":169271,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169276,"byte_end":169314,"line_start":623,"line_end":623,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169319,"byte_end":169322,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169327,"byte_end":169390,"line_start":625,"line_end":625,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169395,"byte_end":169398,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169403,"byte_end":169473,"line_start":627,"line_end":627,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169478,"byte_end":169487,"line_start":628,"line_end":628,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169492,"byte_end":169499,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170777,"byte_end":170785,"line_start":672,"line_end":672,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn <Fut, F> (self, f: F) -> ForEach<Self, Fut, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169719,"byte_end":169790,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169795,"byte_end":169838,"line_start":640,"line_end":640,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169843,"byte_end":169846,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169851,"byte_end":169926,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":169931,"byte_end":170001,"line_start":643,"line_end":643,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170006,"byte_end":170044,"line_start":644,"line_end":644,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170049,"byte_end":170052,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170057,"byte_end":170132,"line_start":646,"line_end":646,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170137,"byte_end":170180,"line_start":647,"line_end":647,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170185,"byte_end":170188,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170193,"byte_end":170266,"line_start":649,"line_end":649,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170271,"byte_end":170314,"line_start":650,"line_end":650,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170319,"byte_end":170322,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170327,"byte_end":170341,"line_start":652,"line_end":652,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170346,"byte_end":170349,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170354,"byte_end":170361,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170366,"byte_end":170407,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170412,"byte_end":170436,"line_start":656,"line_end":656,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170441,"byte_end":170484,"line_start":657,"line_end":657,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170489,"byte_end":170492,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170497,"byte_end":170515,"line_start":659,"line_end":659,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170520,"byte_end":170523,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170528,"byte_end":170533,"line_start":661,"line_end":661,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170538,"byte_end":170599,"line_start":662,"line_end":662,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170604,"byte_end":170626,"line_start":663,"line_end":663,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170631,"byte_end":170660,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170665,"byte_end":170676,"line_start":665,"line_end":665,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170681,"byte_end":170699,"line_start":666,"line_end":666,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170704,"byte_end":170709,"line_start":667,"line_end":667,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170714,"byte_end":170717,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170722,"byte_end":170743,"line_start":669,"line_end":669,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170748,"byte_end":170757,"line_start":670,"line_end":670,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170762,"byte_end":170769,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172967,"byte_end":172986,"line_start":728,"line_end":728,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"fn <Fut, F> (self, limit: impl Into<Option<usize>>, f: F) -> ForEachConcurrent<Self, Fut, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":170980,"byte_end":171051,"line_start":681,"line_end":681,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171056,"byte_end":171130,"line_start":682,"line_end":682,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171135,"byte_end":171149,"line_start":683,"line_end":683,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171154,"byte_end":171157,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171162,"byte_end":171225,"line_start":685,"line_end":685,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171230,"byte_end":171301,"line_start":686,"line_end":686,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171306,"byte_end":171358,"line_start":687,"line_end":687,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171363,"byte_end":171366,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171371,"byte_end":171446,"line_start":689,"line_end":689,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171451,"byte_end":171521,"line_start":690,"line_end":690,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171526,"byte_end":171590,"line_start":691,"line_end":691,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171595,"byte_end":171598,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171603,"byte_end":171674,"line_start":693,"line_end":693,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171679,"byte_end":171749,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171754,"byte_end":171815,"line_start":695,"line_end":695,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171820,"byte_end":171887,"line_start":696,"line_end":696,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171892,"byte_end":171961,"line_start":697,"line_end":697,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":171966,"byte_end":172038,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172043,"byte_end":172046,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172051,"byte_end":172126,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172131,"byte_end":172188,"line_start":701,"line_end":701,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172193,"byte_end":172196,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172201,"byte_end":172215,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172220,"byte_end":172223,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172228,"byte_end":172235,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172240,"byte_end":172281,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172286,"byte_end":172320,"line_start":707,"line_end":707,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172325,"byte_end":172368,"line_start":708,"line_end":708,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172373,"byte_end":172376,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172381,"byte_end":172421,"line_start":710,"line_end":710,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172426,"byte_end":172466,"line_start":711,"line_end":711,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172471,"byte_end":172511,"line_start":712,"line_end":712,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172516,"byte_end":172519,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172524,"byte_end":172592,"line_start":714,"line_end":714,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172597,"byte_end":172619,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172624,"byte_end":172649,"line_start":716,"line_end":716,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172654,"byte_end":172684,"line_start":717,"line_end":717,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172689,"byte_end":172698,"line_start":718,"line_end":718,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172703,"byte_end":172709,"line_start":719,"line_end":719,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172714,"byte_end":172740,"line_start":720,"line_end":720,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172745,"byte_end":172771,"line_start":721,"line_end":721,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172776,"byte_end":172802,"line_start":722,"line_end":722,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172807,"byte_end":172821,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172826,"byte_end":172834,"line_start":724,"line_end":724,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172839,"byte_end":172846,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":172934,"byte_end":172959,"line_start":727,"line_end":727,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173787,"byte_end":173791,"line_start":757,"line_end":757,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173279,"byte_end":173350,"line_start":741,"line_end":741,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173355,"byte_end":173358,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173363,"byte_end":173436,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173441,"byte_end":173476,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173481,"byte_end":173484,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173489,"byte_end":173503,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173508,"byte_end":173511,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173516,"byte_end":173523,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173528,"byte_end":173569,"line_start":749,"line_end":749,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173574,"byte_end":173617,"line_start":750,"line_end":750,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173622,"byte_end":173625,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173630,"byte_end":173676,"line_start":752,"line_end":752,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173681,"byte_end":173684,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173689,"byte_end":173753,"line_start":754,"line_end":754,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173758,"byte_end":173767,"line_start":755,"line_end":755,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173772,"byte_end":173779,"line_start":756,"line_end":756,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174424,"byte_end":174428,"line_start":780,"line_end":780,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173897,"byte_end":173969,"line_start":764,"line_end":764,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173974,"byte_end":173977,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":173982,"byte_end":174055,"line_start":766,"line_end":766,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174060,"byte_end":174106,"line_start":767,"line_end":767,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174111,"byte_end":174114,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174119,"byte_end":174133,"line_start":769,"line_end":769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174138,"byte_end":174141,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174146,"byte_end":174153,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174158,"byte_end":174199,"line_start":772,"line_end":772,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174204,"byte_end":174247,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174252,"byte_end":174255,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174260,"byte_end":174306,"line_start":775,"line_end":775,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174311,"byte_end":174314,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174319,"byte_end":174390,"line_start":777,"line_end":777,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174395,"byte_end":174404,"line_start":778,"line_end":778,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174409,"byte_end":174416,"line_start":779,"line_end":779,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176017,"byte_end":176021,"line_start":826,"line_end":826,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174534,"byte_end":174605,"line_start":787,"line_end":787,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174610,"byte_end":174683,"line_start":788,"line_end":788,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174688,"byte_end":174726,"line_start":789,"line_end":789,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174731,"byte_end":174734,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174739,"byte_end":174793,"line_start":791,"line_end":791,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174798,"byte_end":174870,"line_start":792,"line_end":792,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174875,"byte_end":174951,"line_start":793,"line_end":793,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":174956,"byte_end":175024,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175029,"byte_end":175105,"line_start":795,"line_end":795,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175110,"byte_end":175132,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175137,"byte_end":175140,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175145,"byte_end":175212,"line_start":798,"line_end":798,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175217,"byte_end":175285,"line_start":799,"line_end":799,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175290,"byte_end":175303,"line_start":800,"line_end":800,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175308,"byte_end":175311,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175316,"byte_end":175330,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175335,"byte_end":175338,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175343,"byte_end":175350,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175355,"byte_end":175398,"line_start":805,"line_end":805,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175403,"byte_end":175446,"line_start":806,"line_end":806,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175451,"byte_end":175479,"line_start":807,"line_end":807,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175484,"byte_end":175487,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175492,"byte_end":175510,"line_start":809,"line_end":809,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175515,"byte_end":175553,"line_start":810,"line_end":810,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175558,"byte_end":175573,"line_start":811,"line_end":811,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175578,"byte_end":175595,"line_start":812,"line_end":812,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175600,"byte_end":175642,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175647,"byte_end":175682,"line_start":814,"line_end":814,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175687,"byte_end":175731,"line_start":815,"line_end":815,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175736,"byte_end":175745,"line_start":816,"line_end":816,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175750,"byte_end":175764,"line_start":817,"line_end":817,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175769,"byte_end":175772,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175777,"byte_end":175820,"line_start":819,"line_end":819,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175825,"byte_end":175862,"line_start":820,"line_end":820,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175867,"byte_end":175904,"line_start":821,"line_end":821,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175909,"byte_end":175943,"line_start":822,"line_end":822,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175948,"byte_end":175982,"line_start":823,"line_end":823,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":175987,"byte_end":175997,"line_start":824,"line_end":824,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176002,"byte_end":176009,"line_start":825,"line_end":825,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176918,"byte_end":176924,"line_start":859,"line_end":859,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176114,"byte_end":176161,"line_start":833,"line_end":833,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176166,"byte_end":176169,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176174,"byte_end":176248,"line_start":835,"line_end":835,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176253,"byte_end":176290,"line_start":836,"line_end":836,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176295,"byte_end":176298,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176303,"byte_end":176317,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176322,"byte_end":176325,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176330,"byte_end":176337,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176342,"byte_end":176383,"line_start":841,"line_end":841,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176388,"byte_end":176431,"line_start":842,"line_end":842,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176436,"byte_end":176439,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176444,"byte_end":176484,"line_start":844,"line_end":844,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176489,"byte_end":176492,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176497,"byte_end":176526,"line_start":846,"line_end":846,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176531,"byte_end":176559,"line_start":847,"line_end":847,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176564,"byte_end":176621,"line_start":848,"line_end":848,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176626,"byte_end":176653,"line_start":849,"line_end":849,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176658,"byte_end":176681,"line_start":850,"line_end":850,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176686,"byte_end":176689,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176694,"byte_end":176729,"line_start":852,"line_end":852,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176734,"byte_end":176762,"line_start":853,"line_end":853,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176767,"byte_end":176824,"line_start":854,"line_end":854,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176829,"byte_end":176856,"line_start":855,"line_end":855,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176861,"byte_end":176884,"line_start":856,"line_end":856,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176889,"byte_end":176898,"line_start":857,"line_end":857,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176903,"byte_end":176910,"line_start":858,"line_end":858,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178683,"byte_end":178695,"line_start":904,"line_end":904,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":176975,"byte_end":177029,"line_start":863,"line_end":863,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177034,"byte_end":177037,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177042,"byte_end":177117,"line_start":865,"line_end":865,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177122,"byte_end":177125,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177130,"byte_end":177205,"line_start":867,"line_end":867,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177210,"byte_end":177284,"line_start":868,"line_end":868,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177289,"byte_end":177363,"line_start":869,"line_end":869,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177368,"byte_end":177417,"line_start":870,"line_end":870,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177422,"byte_end":177425,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177430,"byte_end":177505,"line_start":872,"line_end":872,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177510,"byte_end":177580,"line_start":873,"line_end":873,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177585,"byte_end":177652,"line_start":874,"line_end":874,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177657,"byte_end":177729,"line_start":875,"line_end":875,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177734,"byte_end":177803,"line_start":876,"line_end":876,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177808,"byte_end":177823,"line_start":877,"line_end":877,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177828,"byte_end":177831,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177836,"byte_end":177900,"line_start":879,"line_end":879,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177905,"byte_end":177962,"line_start":880,"line_end":880,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177967,"byte_end":177970,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177975,"byte_end":177989,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":177994,"byte_end":177997,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178002,"byte_end":178009,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178014,"byte_end":178055,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178060,"byte_end":178103,"line_start":886,"line_end":886,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178108,"byte_end":178111,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178116,"byte_end":178178,"line_start":888,"line_end":888,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178183,"byte_end":178213,"line_start":889,"line_end":889,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178218,"byte_end":178272,"line_start":890,"line_end":890,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178277,"byte_end":178307,"line_start":891,"line_end":891,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178312,"byte_end":178361,"line_start":892,"line_end":892,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178366,"byte_end":178369,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178374,"byte_end":178436,"line_start":894,"line_end":894,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178441,"byte_end":178463,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178468,"byte_end":178488,"line_start":896,"line_end":896,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178493,"byte_end":178535,"line_start":897,"line_end":897,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178540,"byte_end":178545,"line_start":898,"line_end":898,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178550,"byte_end":178583,"line_start":899,"line_end":899,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178588,"byte_end":178621,"line_start":900,"line_end":900,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178626,"byte_end":178635,"line_start":901,"line_end":901,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178640,"byte_end":178647,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178652,"byte_end":178675,"line_start":903,"line_end":903,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179056,"byte_end":179061,"line_start":916,"line_end":916,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"fn <'a> (self) -> BoxStream<'a, Self::Item>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178827,"byte_end":178868,"line_start":911,"line_end":911,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178873,"byte_end":178876,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178881,"byte_end":178956,"line_start":913,"line_end":913,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":178961,"byte_end":179018,"line_start":914,"line_end":914,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179023,"byte_end":179048,"line_start":915,"line_end":915,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179485,"byte_end":179496,"line_start":930,"line_end":930,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"fn <'a> (self) -> LocalBoxStream<'a, Self::Item>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179184,"byte_end":179225,"line_start":923,"line_end":923,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179230,"byte_end":179233,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179238,"byte_end":179297,"line_start":925,"line_end":925,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179302,"byte_end":179305,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179310,"byte_end":179385,"line_start":927,"line_end":927,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179390,"byte_end":179447,"line_start":928,"line_end":928,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179452,"byte_end":179477,"line_start":929,"line_end":929,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180401,"byte_end":180409,"line_start":951,"line_end":951,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"fn (self, n: usize) -> Buffered<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179617,"byte_end":179680,"line_start":937,"line_end":937,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179685,"byte_end":179688,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179693,"byte_end":179768,"line_start":939,"line_end":939,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179773,"byte_end":179849,"line_start":940,"line_end":940,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179854,"byte_end":179927,"line_start":941,"line_end":941,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":179932,"byte_end":180005,"line_start":942,"line_end":942,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180010,"byte_end":180052,"line_start":943,"line_end":943,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180057,"byte_end":180060,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180065,"byte_end":180130,"line_start":945,"line_end":945,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180135,"byte_end":180138,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180143,"byte_end":180218,"line_start":947,"line_end":947,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180223,"byte_end":180280,"line_start":948,"line_end":948,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180368,"byte_end":180393,"line_start":950,"line_end":950,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182081,"byte_end":182097,"line_start":996,"line_end":996,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"fn (self, n: usize) -> BufferUnordered<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180551,"byte_end":180626,"line_start":959,"line_end":959,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180631,"byte_end":180634,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180639,"byte_end":180714,"line_start":961,"line_end":961,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180719,"byte_end":180793,"line_start":962,"line_end":962,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180798,"byte_end":180870,"line_start":963,"line_end":963,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180875,"byte_end":180949,"line_start":964,"line_end":964,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180954,"byte_end":180983,"line_start":965,"line_end":965,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180988,"byte_end":180991,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":180996,"byte_end":181061,"line_start":967,"line_end":967,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181066,"byte_end":181069,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181074,"byte_end":181149,"line_start":969,"line_end":969,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181154,"byte_end":181211,"line_start":970,"line_end":970,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181216,"byte_end":181219,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181224,"byte_end":181238,"line_start":972,"line_end":972,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181243,"byte_end":181246,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181251,"byte_end":181258,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181263,"byte_end":181304,"line_start":975,"line_end":975,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181309,"byte_end":181343,"line_start":976,"line_end":976,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181348,"byte_end":181391,"line_start":977,"line_end":977,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181396,"byte_end":181399,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181404,"byte_end":181454,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181459,"byte_end":181509,"line_start":980,"line_end":980,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181514,"byte_end":181517,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181522,"byte_end":181589,"line_start":982,"line_end":982,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181594,"byte_end":181656,"line_start":983,"line_end":983,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181661,"byte_end":181664,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181669,"byte_end":181694,"line_start":985,"line_end":985,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181699,"byte_end":181753,"line_start":986,"line_end":986,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181758,"byte_end":181761,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181766,"byte_end":181791,"line_start":988,"line_end":988,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181796,"byte_end":181850,"line_start":989,"line_end":989,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181855,"byte_end":181858,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181863,"byte_end":181907,"line_start":991,"line_end":991,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181912,"byte_end":181948,"line_start":992,"line_end":992,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":181953,"byte_end":181960,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182048,"byte_end":182073,"line_start":995,"line_end":995,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182941,"byte_end":182944,"line_start":1026,"line_end":1026,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn <St> (self, other: St) -> Zip<Self, St>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182253,"byte_end":182301,"line_start":1004,"line_end":1004,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182306,"byte_end":182309,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182314,"byte_end":182387,"line_start":1006,"line_end":1006,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182392,"byte_end":182464,"line_start":1007,"line_end":1007,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182469,"byte_end":182482,"line_start":1008,"line_end":1008,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182487,"byte_end":182490,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182495,"byte_end":182509,"line_start":1010,"line_end":1010,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182514,"byte_end":182517,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182522,"byte_end":182529,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182534,"byte_end":182575,"line_start":1013,"line_end":1013,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182580,"byte_end":182623,"line_start":1014,"line_end":1014,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182628,"byte_end":182631,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182636,"byte_end":182674,"line_start":1016,"line_end":1016,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182679,"byte_end":182718,"line_start":1017,"line_end":1017,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182723,"byte_end":182726,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182731,"byte_end":182765,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182770,"byte_end":182811,"line_start":1020,"line_end":1020,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182816,"byte_end":182844,"line_start":1021,"line_end":1021,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182849,"byte_end":182899,"line_start":1022,"line_end":1022,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182904,"byte_end":182913,"line_start":1023,"line_end":1023,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182918,"byte_end":182925,"line_start":1024,"line_end":1024,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":182930,"byte_end":182933,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183808,"byte_end":183813,"line_start":1057,"line_end":1057,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn <St> (self, other: St) -> Chain<Self, St>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183081,"byte_end":183118,"line_start":1034,"line_end":1034,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183123,"byte_end":183126,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183131,"byte_end":183202,"line_start":1036,"line_end":1036,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183207,"byte_end":183283,"line_start":1037,"line_end":1037,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183288,"byte_end":183291,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183296,"byte_end":183303,"line_start":1039,"line_end":1039,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183308,"byte_end":183349,"line_start":1040,"line_end":1040,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183354,"byte_end":183397,"line_start":1041,"line_end":1041,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183402,"byte_end":183405,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183410,"byte_end":183467,"line_start":1043,"line_end":1043,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183472,"byte_end":183528,"line_start":1044,"line_end":1044,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183533,"byte_end":183536,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183541,"byte_end":183581,"line_start":1046,"line_end":1046,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183586,"byte_end":183589,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183594,"byte_end":183642,"line_start":1048,"line_end":1048,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183647,"byte_end":183675,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183680,"byte_end":183695,"line_start":1050,"line_end":1050,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183700,"byte_end":183719,"line_start":1051,"line_end":1051,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183724,"byte_end":183742,"line_start":1052,"line_end":1052,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183747,"byte_end":183762,"line_start":1053,"line_end":1053,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183767,"byte_end":183774,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183779,"byte_end":183788,"line_start":1055,"line_end":1055,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183793,"byte_end":183800,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184119,"byte_end":184127,"line_start":1068,"line_end":1068,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn (self) -> Peekable<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":183973,"byte_end":184028,"line_start":1065,"line_end":1065,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184033,"byte_end":184036,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184041,"byte_end":184111,"line_start":1067,"line_end":1067,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":185130,"byte_end":185136,"line_start":1094,"line_end":1094,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"fn (self, capacity: usize) -> Chunks<Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184228,"byte_end":184295,"line_start":1075,"line_end":1075,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184300,"byte_end":184303,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184308,"byte_end":184382,"line_start":1077,"line_end":1077,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184387,"byte_end":184459,"line_start":1078,"line_end":1078,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184464,"byte_end":184516,"line_start":1079,"line_end":1079,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184521,"byte_end":184524,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184529,"byte_end":184602,"line_start":1081,"line_end":1081,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184607,"byte_end":184681,"line_start":1082,"line_end":1082,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184686,"byte_end":184761,"line_start":1083,"line_end":1083,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184766,"byte_end":184838,"line_start":1084,"line_end":1084,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184843,"byte_end":184855,"line_start":1085,"line_end":1085,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184860,"byte_end":184863,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184868,"byte_end":184943,"line_start":1087,"line_end":1087,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":184948,"byte_end":185005,"line_start":1088,"line_end":1088,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":185010,"byte_end":185013,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":185018,"byte_end":185030,"line_start":1090,"line_end":1090,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":185035,"byte_end":185038,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":185043,"byte_end":185092,"line_start":1092,"line_end":1092,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":185097,"byte_end":185122,"line_start":1093,"line_end":1093,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187179,"byte_end":187186,"line_start":1144,"line_end":1144,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":186876,"byte_end":186949,"line_start":1139,"line_end":1139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":186954,"byte_end":186957,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":186962,"byte_end":187031,"line_start":1141,"line_end":1141,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187036,"byte_end":187105,"line_start":1142,"line_end":1142,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187110,"byte_end":187171,"line_start":1143,"line_end":1143,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187610,"byte_end":187621,"line_start":1157,"line_end":1157,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187331,"byte_end":187406,"line_start":1152,"line_end":1152,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187411,"byte_end":187432,"line_start":1153,"line_end":1153,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187437,"byte_end":187440,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187445,"byte_end":187525,"line_start":1155,"line_end":1155,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187530,"byte_end":187602,"line_start":1156,"line_end":1156,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188042,"byte_end":188054,"line_start":1170,"line_end":1170,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn <B> (self) -> Either<B, Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187763,"byte_end":187839,"line_start":1165,"line_end":1165,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187844,"byte_end":187865,"line_start":1166,"line_end":1166,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187870,"byte_end":187873,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187878,"byte_end":187957,"line_start":1168,"line_end":1168,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":187962,"byte_end":188034,"line_start":1169,"line_end":1169,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188298,"byte_end":188313,"line_start":1180,"line_end":1180,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188197,"byte_end":188268,"line_start":1178,"line_end":1178,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188273,"byte_end":188290,"line_start":1179,"line_end":1179,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190414,"byte_end":190430,"line_start":1235,"line_end":1235,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn (&mut self) -> SelectNextSome<'_, Self>","parent":{"krate":0,"index":2461},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188460,"byte_end":188535,"line_start":1187,"line_end":1187,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188540,"byte_end":188550,"line_start":1188,"line_end":1188,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188555,"byte_end":188558,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188563,"byte_end":188636,"line_start":1190,"line_end":1190,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188641,"byte_end":188709,"line_start":1191,"line_end":1191,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188714,"byte_end":188762,"line_start":1192,"line_end":1192,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188767,"byte_end":188842,"line_start":1193,"line_end":1193,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188847,"byte_end":188923,"line_start":1194,"line_end":1194,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188928,"byte_end":188954,"line_start":1195,"line_end":1195,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188959,"byte_end":188962,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":188967,"byte_end":189040,"line_start":1197,"line_end":1197,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189045,"byte_end":189115,"line_start":1198,"line_end":1198,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189120,"byte_end":189160,"line_start":1199,"line_end":1199,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189165,"byte_end":189168,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189173,"byte_end":189227,"line_start":1201,"line_end":1201,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189232,"byte_end":189316,"line_start":1202,"line_end":1202,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189321,"byte_end":189324,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189329,"byte_end":189343,"line_start":1204,"line_end":1204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189348,"byte_end":189351,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189356,"byte_end":189363,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189368,"byte_end":189409,"line_start":1207,"line_end":1207,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189414,"byte_end":189448,"line_start":1208,"line_end":1208,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189453,"byte_end":189508,"line_start":1209,"line_end":1209,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189513,"byte_end":189516,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189521,"byte_end":189556,"line_start":1211,"line_end":1211,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189561,"byte_end":189611,"line_start":1212,"line_end":1212,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189616,"byte_end":189638,"line_start":1213,"line_end":1213,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189643,"byte_end":189653,"line_start":1214,"line_end":1214,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189658,"byte_end":189675,"line_start":1215,"line_end":1215,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189680,"byte_end":189706,"line_start":1216,"line_end":1216,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189711,"byte_end":189766,"line_start":1217,"line_end":1217,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189771,"byte_end":189800,"line_start":1218,"line_end":1218,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189805,"byte_end":189868,"line_start":1219,"line_end":1219,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189873,"byte_end":189919,"line_start":1220,"line_end":1220,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189924,"byte_end":189938,"line_start":1221,"line_end":1221,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":189943,"byte_end":190012,"line_start":1222,"line_end":1222,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190017,"byte_end":190042,"line_start":1223,"line_end":1223,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190047,"byte_end":190100,"line_start":1224,"line_end":1224,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190105,"byte_end":190134,"line_start":1225,"line_end":1225,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190139,"byte_end":190152,"line_start":1226,"line_end":1226,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190157,"byte_end":190227,"line_start":1227,"line_end":1227,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190232,"byte_end":190291,"line_start":1228,"line_end":1228,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190296,"byte_end":190326,"line_start":1229,"line_end":1229,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190331,"byte_end":190340,"line_start":1230,"line_end":1230,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190345,"byte_end":190350,"line_start":1231,"line_end":1231,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190355,"byte_end":190380,"line_start":1232,"line_end":1232,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190385,"byte_end":190394,"line_start":1233,"line_end":1233,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":190399,"byte_end":190406,"line_start":1234,"line_end":1234,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2585},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":302666,"byte_end":302673,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`and_then`](super::TryStreamExt::and_then) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":302535,"byte_end":302605,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":302606,"byte_end":302654,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303618,"byte_end":303625,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AndThen<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303511,"byte_end":303584,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303589,"byte_end":303606,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303935,"byte_end":303942,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AndThen<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303674,"byte_end":303741,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303746,"byte_end":303777,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303782,"byte_end":303785,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303790,"byte_end":303863,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303868,"byte_end":303923,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304271,"byte_end":304282,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<AndThen<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304003,"byte_end":304077,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304082,"byte_end":304113,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304118,"byte_end":304121,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304126,"byte_end":304199,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304204,"byte_end":304259,"line_start":67,"line_end":67,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304591,"byte_end":304601,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AndThen<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304356,"byte_end":304418,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304423,"byte_end":304426,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304431,"byte_end":304503,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304508,"byte_end":304579,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5814},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":306716,"byte_end":306723,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"ErrInto","qualname":"::stream::try_stream::err_into::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5817},{"krate":0,"index":5818}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`err_into`](super::TryStreamExt::err_into) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":306568,"byte_end":306638,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":306656,"byte_end":306704,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307102,"byte_end":307109,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ErrInto<St, E>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":306995,"byte_end":307068,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307073,"byte_end":307090,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307419,"byte_end":307426,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ErrInto<St, E>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307158,"byte_end":307225,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307230,"byte_end":307261,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307266,"byte_end":307269,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307274,"byte_end":307347,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307352,"byte_end":307407,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307755,"byte_end":307766,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<ErrInto<St, E>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307487,"byte_end":307561,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307566,"byte_end":307597,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307602,"byte_end":307605,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307610,"byte_end":307683,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307688,"byte_end":307743,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":308075,"byte_end":308085,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ErrInto<St, E>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307840,"byte_end":307902,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307907,"byte_end":307910,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307915,"byte_end":307987,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":307992,"byte_end":308063,"line_start":53,"line_end":53,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2676},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309387,"byte_end":309396,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"InspectOk","qualname":"::stream::try_stream::inspect_ok::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309252,"byte_end":309326,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309327,"byte_end":309375,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310098,"byte_end":310105,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectOk<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309991,"byte_end":310064,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310069,"byte_end":310086,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310415,"byte_end":310422,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectOk<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310154,"byte_end":310221,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310226,"byte_end":310257,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310262,"byte_end":310265,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310270,"byte_end":310343,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310348,"byte_end":310403,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310751,"byte_end":310762,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<InspectOk<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310483,"byte_end":310557,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310562,"byte_end":310593,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310598,"byte_end":310601,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310606,"byte_end":310679,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310684,"byte_end":310739,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":311071,"byte_end":311081,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectOk<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310836,"byte_end":310898,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310903,"byte_end":310906,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310911,"byte_end":310983,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":310988,"byte_end":311059,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2727},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312453,"byte_end":312463,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::stream::try_stream::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":2730},{"krate":0,"index":2731}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312316,"byte_end":312392,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312393,"byte_end":312441,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313173,"byte_end":313180,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectErr<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313066,"byte_end":313139,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313144,"byte_end":313161,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313490,"byte_end":313497,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectErr<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313229,"byte_end":313296,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313301,"byte_end":313332,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313337,"byte_end":313340,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313345,"byte_end":313418,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313423,"byte_end":313478,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313826,"byte_end":313837,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<InspectErr<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313558,"byte_end":313632,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313637,"byte_end":313668,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313673,"byte_end":313676,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313681,"byte_end":313754,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313759,"byte_end":313814,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":314146,"byte_end":314156,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectErr<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313911,"byte_end":313973,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313978,"byte_end":313981,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":313986,"byte_end":314058,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":314063,"byte_end":314134,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5836},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315488,"byte_end":315498,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":5838}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315334,"byte_end":315410,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315428,"byte_end":315476,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315789,"byte_end":315796,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoStream<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315682,"byte_end":315755,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315760,"byte_end":315777,"line_start":24,"line_end":24,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316106,"byte_end":316113,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoStream<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315845,"byte_end":315912,"line_start":29,"line_end":29,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315917,"byte_end":315948,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315953,"byte_end":315956,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315961,"byte_end":316034,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316039,"byte_end":316094,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316442,"byte_end":316453,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<IntoStream<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316174,"byte_end":316248,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316253,"byte_end":316284,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316289,"byte_end":316292,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316297,"byte_end":316370,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316375,"byte_end":316430,"line_start":42,"line_end":42,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316762,"byte_end":316772,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoStream<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316527,"byte_end":316589,"line_start":47,"line_end":47,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316594,"byte_end":316597,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316602,"byte_end":316674,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316679,"byte_end":316750,"line_start":50,"line_end":50,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2803},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":317889,"byte_end":317894,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"MapOk","qualname":"::stream::try_stream::map_ok::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2807}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":317762,"byte_end":317828,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":317829,"byte_end":317877,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318529,"byte_end":318536,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapOk<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318422,"byte_end":318495,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318500,"byte_end":318517,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318846,"byte_end":318853,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapOk<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318585,"byte_end":318652,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318657,"byte_end":318688,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318693,"byte_end":318696,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318701,"byte_end":318774,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318779,"byte_end":318834,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319182,"byte_end":319193,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapOk<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318914,"byte_end":318988,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318993,"byte_end":319024,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319029,"byte_end":319032,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319037,"byte_end":319110,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319115,"byte_end":319170,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319502,"byte_end":319512,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapOk<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319267,"byte_end":319329,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319334,"byte_end":319337,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319342,"byte_end":319414,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319419,"byte_end":319490,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2852},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":320828,"byte_end":320834,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::stream::try_stream::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map_err`](super::TryStreamExt::map_err) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":320699,"byte_end":320767,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":320768,"byte_end":320816,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321475,"byte_end":321482,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapErr<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321368,"byte_end":321441,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321446,"byte_end":321463,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321792,"byte_end":321799,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapErr<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321531,"byte_end":321598,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321603,"byte_end":321634,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321639,"byte_end":321642,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321647,"byte_end":321720,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321725,"byte_end":321780,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322128,"byte_end":322139,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapErr<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321860,"byte_end":321934,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321939,"byte_end":321970,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321975,"byte_end":321978,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321983,"byte_end":322056,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322061,"byte_end":322116,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322448,"byte_end":322458,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapErr<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322213,"byte_end":322275,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322280,"byte_end":322283,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322288,"byte_end":322360,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322365,"byte_end":322436,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2902},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":323821,"byte_end":323827,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`or_else`](super::TryStreamExt::or_else) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":323692,"byte_end":323760,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":323761,"byte_end":323809,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324764,"byte_end":324771,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<OrElse<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324657,"byte_end":324730,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324735,"byte_end":324752,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325081,"byte_end":325088,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OrElse<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324820,"byte_end":324887,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324892,"byte_end":324923,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324928,"byte_end":324931,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324936,"byte_end":325009,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325014,"byte_end":325069,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325417,"byte_end":325428,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<OrElse<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325149,"byte_end":325223,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325228,"byte_end":325259,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325264,"byte_end":325267,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325272,"byte_end":325345,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325350,"byte_end":325405,"line_start":67,"line_end":67,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325737,"byte_end":325747,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OrElse<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325502,"byte_end":325564,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325569,"byte_end":325572,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325577,"byte_end":325649,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325654,"byte_end":325725,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5863},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":327904,"byte_end":327911,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":5866}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":327737,"byte_end":327807,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":327825,"byte_end":327892,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2983},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":328984,"byte_end":328994,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":328826,"byte_end":328904,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":328905,"byte_end":328972,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3025},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":331083,"byte_end":331092,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_filter`](super::TryStreamExt::try_filter)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":330944,"byte_end":331010,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":331011,"byte_end":331022,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":331023,"byte_end":331071,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332262,"byte_end":332269,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFilter<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332155,"byte_end":332228,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332233,"byte_end":332250,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332579,"byte_end":332586,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFilter<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332318,"byte_end":332385,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332390,"byte_end":332421,"line_start":65,"line_end":65,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332426,"byte_end":332429,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332434,"byte_end":332507,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332512,"byte_end":332567,"line_start":68,"line_end":68,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332915,"byte_end":332926,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFilter<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332647,"byte_end":332721,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332726,"byte_end":332757,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332762,"byte_end":332765,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332770,"byte_end":332843,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":332848,"byte_end":332903,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":333235,"byte_end":333245,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFilter<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":333000,"byte_end":333062,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":333067,"byte_end":333070,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":333075,"byte_end":333147,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":333152,"byte_end":333223,"line_start":85,"line_end":85,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3079},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":335714,"byte_end":335726,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":335567,"byte_end":335641,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":335642,"byte_end":335653,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":335654,"byte_end":335702,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3100},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336577,"byte_end":336584,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFilterMap<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336470,"byte_end":336543,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336548,"byte_end":336565,"line_start":46,"line_end":46,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336894,"byte_end":336901,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFilterMap<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336633,"byte_end":336700,"line_start":51,"line_end":51,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336705,"byte_end":336736,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336741,"byte_end":336744,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336749,"byte_end":336822,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336827,"byte_end":336882,"line_start":55,"line_end":55,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337230,"byte_end":337241,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFilterMap<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336962,"byte_end":337036,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337041,"byte_end":337072,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337077,"byte_end":337080,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337085,"byte_end":337158,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337163,"byte_end":337218,"line_start":64,"line_end":64,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337550,"byte_end":337560,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFilterMap<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337315,"byte_end":337377,"line_start":69,"line_end":69,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337382,"byte_end":337385,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337390,"byte_end":337462,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337467,"byte_end":337538,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5897},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":339846,"byte_end":339856,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5899},{"krate":0,"index":5900}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":339692,"byte_end":339768,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":339786,"byte_end":339834,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340475,"byte_end":340482,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFlatten<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340368,"byte_end":340441,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340446,"byte_end":340463,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340792,"byte_end":340799,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFlatten<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340531,"byte_end":340598,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340603,"byte_end":340634,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340639,"byte_end":340642,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340647,"byte_end":340720,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340725,"byte_end":340780,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341128,"byte_end":341139,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFlatten<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340860,"byte_end":340934,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340939,"byte_end":340970,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340975,"byte_end":340978,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340983,"byte_end":341056,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341061,"byte_end":341116,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341448,"byte_end":341458,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFlatten<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341213,"byte_end":341275,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341280,"byte_end":341283,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341288,"byte_end":341360,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341365,"byte_end":341436,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5910},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":343352,"byte_end":343362,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":5913},{"krate":0,"index":5914}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_collect`](super::TryStreamExt::try_collect) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":343179,"byte_end":343255,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":343273,"byte_end":343340,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5924},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":344905,"byte_end":344914,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":5926},{"krate":0,"index":5927}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_concat`](super::TryStreamExt::try_concat) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":344734,"byte_end":344808,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":344826,"byte_end":344893,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3215},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":346548,"byte_end":346555,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_fold`](super::TryStreamExt::try_fold) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":346398,"byte_end":346468,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":346469,"byte_end":346536,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3266},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351707,"byte_end":351717,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> TryUnfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":349850,"byte_end":349926,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":349927,"byte_end":349930,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":349931,"byte_end":350007,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350008,"byte_end":350078,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350079,"byte_end":350138,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350139,"byte_end":350142,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350143,"byte_end":350221,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350222,"byte_end":350299,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350300,"byte_end":350364,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350365,"byte_end":350368,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350369,"byte_end":350441,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350442,"byte_end":350520,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350521,"byte_end":350550,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350551,"byte_end":350554,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350555,"byte_end":350632,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350633,"byte_end":350697,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350698,"byte_end":350750,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350751,"byte_end":350754,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350755,"byte_end":350832,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350833,"byte_end":350905,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350906,"byte_end":350975,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":350976,"byte_end":351054,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351055,"byte_end":351058,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351059,"byte_end":351072,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351073,"byte_end":351076,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351077,"byte_end":351084,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351085,"byte_end":351118,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351119,"byte_end":351142,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351143,"byte_end":351184,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351185,"byte_end":351231,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351232,"byte_end":351235,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351236,"byte_end":351295,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351296,"byte_end":351318,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351319,"byte_end":351353,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351354,"byte_end":351363,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351364,"byte_end":351367,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351368,"byte_end":351391,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351392,"byte_end":351431,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351432,"byte_end":351468,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351469,"byte_end":351512,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351513,"byte_end":351529,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351530,"byte_end":351550,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351551,"byte_end":351560,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351561,"byte_end":351568,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351569,"byte_end":351572,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351573,"byte_end":351638,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351639,"byte_end":351681,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351682,"byte_end":351691,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351692,"byte_end":351699,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3271},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":352036,"byte_end":352045,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_unfold`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351932,"byte_end":351975,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":351976,"byte_end":352024,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3315},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":354202,"byte_end":354214,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3323}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":354055,"byte_end":354129,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":354130,"byte_end":354141,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":354142,"byte_end":354190,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":355720,"byte_end":355727,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TrySkipWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":355613,"byte_end":355686,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":355691,"byte_end":355708,"line_start":66,"line_end":66,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356037,"byte_end":356044,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TrySkipWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":355776,"byte_end":355843,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":355848,"byte_end":355879,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":355884,"byte_end":355887,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":355892,"byte_end":355965,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":355970,"byte_end":356025,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356373,"byte_end":356384,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TrySkipWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356105,"byte_end":356179,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356184,"byte_end":356215,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356220,"byte_end":356223,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356228,"byte_end":356301,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356306,"byte_end":356361,"line_start":84,"line_end":84,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356693,"byte_end":356703,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySkipWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356458,"byte_end":356520,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356525,"byte_end":356528,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356533,"byte_end":356605,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356610,"byte_end":356681,"line_start":92,"line_end":92,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6052},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8295663,"byte_end":8295681,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":6054},{"krate":0,"index":6055},{"krate":0,"index":6056}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"/ Stream for the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8295487,"byte_end":8295505,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8295506,"byte_end":8295585,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8295603,"byte_end":8295651,"line_start":14,"line_end":14,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5990},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296461,"byte_end":8296468,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryBufferUnordered<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296354,"byte_end":8296427,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296432,"byte_end":8296449,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5991},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296797,"byte_end":8296804,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryBufferUnordered<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296536,"byte_end":8296603,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296608,"byte_end":8296639,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296644,"byte_end":8296647,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296652,"byte_end":8296725,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296730,"byte_end":8296785,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5992},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8297148,"byte_end":8297159,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryBufferUnordered<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296880,"byte_end":8296954,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296959,"byte_end":8296990,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8296995,"byte_end":8296998,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8297003,"byte_end":8297076,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8297081,"byte_end":8297136,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5993},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8297496,"byte_end":8297506,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryBufferUnordered<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8297261,"byte_end":8297323,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8297328,"byte_end":8297331,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8297336,"byte_end":8297408,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8297413,"byte_end":8297484,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6017},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8299570,"byte_end":8299590,"line_start":15,"line_end":15,"column_start":12,"column_end":32},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6023},{"krate":0,"index":6024}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8299382,"byte_end":8299400,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8299401,"byte_end":8299478,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8299479,"byte_end":8299490,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8299491,"byte_end":8299558,"line_start":14,"line_end":14,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6060},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":359335,"byte_end":359348,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":6062},{"krate":0,"index":6063}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":359173,"byte_end":359257,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":359275,"byte_end":359323,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":3394},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276238,"byte_end":276250,"line_start":112,"line_end":112,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3400},{"krate":0,"index":3403},{"krate":0,"index":3406},{"krate":0,"index":3409},{"krate":0,"index":3411},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3418},{"krate":0,"index":3421},{"krate":0,"index":3425},{"krate":0,"index":3427},{"krate":0,"index":3430},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3442}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276176,"byte_end":276227,"line_start":111,"line_end":111,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276792,"byte_end":276800,"line_start":130,"line_end":130,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276268,"byte_end":276342,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276347,"byte_end":276373,"line_start":114,"line_end":114,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276378,"byte_end":276381,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276386,"byte_end":276400,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276405,"byte_end":276408,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276413,"byte_end":276420,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276425,"byte_end":276466,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276471,"byte_end":276517,"line_start":120,"line_end":120,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276522,"byte_end":276525,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276530,"byte_end":276550,"line_start":122,"line_end":122,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276555,"byte_end":276600,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276605,"byte_end":276636,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276641,"byte_end":276644,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276649,"byte_end":276703,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276708,"byte_end":276759,"line_start":127,"line_end":127,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276764,"byte_end":276772,"line_start":128,"line_end":128,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276777,"byte_end":276784,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277455,"byte_end":277461,"line_start":155,"line_end":155,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276935,"byte_end":277008,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277013,"byte_end":277044,"line_start":139,"line_end":139,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277049,"byte_end":277052,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277057,"byte_end":277071,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277076,"byte_end":277079,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277084,"byte_end":277091,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277096,"byte_end":277137,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277142,"byte_end":277188,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277193,"byte_end":277196,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277201,"byte_end":277221,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277226,"byte_end":277267,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277272,"byte_end":277303,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277308,"byte_end":277311,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277316,"byte_end":277369,"line_start":151,"line_end":151,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277374,"byte_end":277422,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277427,"byte_end":277435,"line_start":153,"line_end":153,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277440,"byte_end":277447,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278126,"byte_end":278133,"line_start":180,"line_end":180,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277607,"byte_end":277678,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277683,"byte_end":277714,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277719,"byte_end":277722,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277727,"byte_end":277741,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277746,"byte_end":277749,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277754,"byte_end":277761,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277766,"byte_end":277807,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277812,"byte_end":277858,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277863,"byte_end":277866,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277871,"byte_end":277891,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277896,"byte_end":277937,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277942,"byte_end":277974,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277979,"byte_end":277982,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":277987,"byte_end":278040,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278045,"byte_end":278093,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278098,"byte_end":278106,"line_start":178,"line_end":178,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278111,"byte_end":278118,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279697,"byte_end":279705,"line_start":226,"line_end":226,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278284,"byte_end":278360,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278365,"byte_end":278405,"line_start":189,"line_end":189,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278410,"byte_end":278413,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278418,"byte_end":278494,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278499,"byte_end":278575,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278580,"byte_end":278653,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278658,"byte_end":278700,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278705,"byte_end":278708,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278713,"byte_end":278786,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278791,"byte_end":278822,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278827,"byte_end":278830,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278835,"byte_end":278909,"line_start":199,"line_end":199,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278914,"byte_end":278988,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":278993,"byte_end":279009,"line_start":201,"line_end":201,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279014,"byte_end":279017,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279022,"byte_end":279093,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279098,"byte_end":279124,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279129,"byte_end":279132,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279137,"byte_end":279209,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279214,"byte_end":279263,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279268,"byte_end":279271,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279276,"byte_end":279290,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279295,"byte_end":279298,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279303,"byte_end":279310,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279315,"byte_end":279346,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279351,"byte_end":279375,"line_start":213,"line_end":213,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279380,"byte_end":279418,"line_start":214,"line_end":214,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279423,"byte_end":279426,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279431,"byte_end":279487,"line_start":216,"line_end":216,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279492,"byte_end":279495,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279500,"byte_end":279535,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279540,"byte_end":279579,"line_start":219,"line_end":219,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279584,"byte_end":279608,"line_start":220,"line_end":220,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279613,"byte_end":279629,"line_start":221,"line_end":221,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279634,"byte_end":279650,"line_start":222,"line_end":222,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279655,"byte_end":279665,"line_start":223,"line_end":223,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279670,"byte_end":279677,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279682,"byte_end":279689,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280808,"byte_end":280815,"line_start":252,"line_end":252,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279909,"byte_end":279974,"line_start":235,"line_end":235,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":279979,"byte_end":280028,"line_start":236,"line_end":236,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280033,"byte_end":280036,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280041,"byte_end":280120,"line_start":238,"line_end":238,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280125,"byte_end":280199,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280204,"byte_end":280280,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280285,"byte_end":280330,"line_start":241,"line_end":241,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280335,"byte_end":280338,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280343,"byte_end":280418,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280423,"byte_end":280463,"line_start":244,"line_end":244,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280468,"byte_end":280471,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280476,"byte_end":280585,"line_start":246,"line_end":246,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280590,"byte_end":280664,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280669,"byte_end":280685,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280690,"byte_end":280693,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280698,"byte_end":280769,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":280774,"byte_end":280800,"line_start":251,"line_end":251,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3409},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281317,"byte_end":281327,"line_start":267,"line_end":267,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281014,"byte_end":281088,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281093,"byte_end":281103,"line_start":262,"line_end":262,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281108,"byte_end":281111,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281116,"byte_end":281186,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281191,"byte_end":281267,"line_start":265,"line_end":265,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281272,"byte_end":281309,"line_start":266,"line_end":266,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3411},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281765,"byte_end":281776,"line_start":280,"line_end":280,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281474,"byte_end":281553,"line_start":275,"line_end":275,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281558,"byte_end":281561,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281566,"byte_end":281636,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281641,"byte_end":281715,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281720,"byte_end":281757,"line_start":279,"line_end":279,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282646,"byte_end":282657,"line_start":309,"line_end":309,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281928,"byte_end":281981,"line_start":288,"line_end":288,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":281986,"byte_end":282030,"line_start":289,"line_end":289,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282035,"byte_end":282038,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282043,"byte_end":282092,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282097,"byte_end":282170,"line_start":292,"line_end":292,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282175,"byte_end":282195,"line_start":293,"line_end":293,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282200,"byte_end":282203,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282208,"byte_end":282222,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282227,"byte_end":282230,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282235,"byte_end":282242,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282247,"byte_end":282306,"line_start":298,"line_end":298,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282311,"byte_end":282314,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282319,"byte_end":282338,"line_start":300,"line_end":300,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282343,"byte_end":282361,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282366,"byte_end":282438,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282443,"byte_end":282473,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282478,"byte_end":282485,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282490,"byte_end":282564,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282569,"byte_end":282572,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282577,"byte_end":282626,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282631,"byte_end":282638,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283501,"byte_end":283509,"line_start":336,"line_end":336,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282762,"byte_end":282836,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282841,"byte_end":282915,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282920,"byte_end":282932,"line_start":318,"line_end":318,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282937,"byte_end":282940,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":282945,"byte_end":283012,"line_start":320,"line_end":320,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283017,"byte_end":283089,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283094,"byte_end":283133,"line_start":322,"line_end":322,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283138,"byte_end":283141,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283146,"byte_end":283160,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283165,"byte_end":283168,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283173,"byte_end":283180,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283185,"byte_end":283226,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283231,"byte_end":283277,"line_start":328,"line_end":328,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283282,"byte_end":283285,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283290,"byte_end":283347,"line_start":330,"line_end":330,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283352,"byte_end":283355,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283360,"byte_end":283414,"line_start":332,"line_end":332,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283419,"byte_end":283468,"line_start":333,"line_end":333,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283473,"byte_end":283481,"line_start":334,"line_end":334,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283486,"byte_end":283493,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284802,"byte_end":284814,"line_start":376,"line_end":376,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn <Fut, F> (self, f: F) -> TryForEach<Self, Fut, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283617,"byte_end":283686,"line_start":343,"line_end":343,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283691,"byte_end":283747,"line_start":344,"line_end":344,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283752,"byte_end":283755,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283760,"byte_end":283835,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283840,"byte_end":283910,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283915,"byte_end":283953,"line_start":348,"line_end":348,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283958,"byte_end":283961,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":283966,"byte_end":284044,"line_start":350,"line_end":350,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284049,"byte_end":284109,"line_start":351,"line_end":351,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284114,"byte_end":284171,"line_start":352,"line_end":352,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284176,"byte_end":284243,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284248,"byte_end":284278,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284283,"byte_end":284286,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284291,"byte_end":284305,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284310,"byte_end":284313,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284318,"byte_end":284325,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284330,"byte_end":284371,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284376,"byte_end":284400,"line_start":360,"line_end":360,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284405,"byte_end":284451,"line_start":361,"line_end":361,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284456,"byte_end":284459,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284464,"byte_end":284485,"line_start":363,"line_end":363,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284490,"byte_end":284493,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284498,"byte_end":284503,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284508,"byte_end":284569,"line_start":366,"line_end":366,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284574,"byte_end":284596,"line_start":367,"line_end":367,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284601,"byte_end":284665,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284670,"byte_end":284681,"line_start":369,"line_end":369,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284686,"byte_end":284725,"line_start":370,"line_end":370,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284730,"byte_end":284735,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284740,"byte_end":284743,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284748,"byte_end":284769,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284774,"byte_end":284782,"line_start":374,"line_end":374,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":284787,"byte_end":284794,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285774,"byte_end":285788,"line_start":405,"line_end":405,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn <Fut, F> (self, f: F) -> TrySkipWhile<Self, Fut, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285033,"byte_end":285107,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285112,"byte_end":285135,"line_start":386,"line_end":386,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285140,"byte_end":285143,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This function is similar to [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285148,"byte_end":285243,"line_start":388,"line_end":388,"column_start":5,"column_end":100}},{"value":"/ but exits early if an error occurs.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285248,"byte_end":285287,"line_start":389,"line_end":389,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285292,"byte_end":285295,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285300,"byte_end":285314,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285319,"byte_end":285322,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285327,"byte_end":285334,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285339,"byte_end":285380,"line_start":394,"line_end":394,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285385,"byte_end":285409,"line_start":395,"line_end":395,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285414,"byte_end":285460,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285465,"byte_end":285468,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285473,"byte_end":285542,"line_start":398,"line_end":398,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285547,"byte_end":285617,"line_start":399,"line_end":399,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285622,"byte_end":285625,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285630,"byte_end":285697,"line_start":401,"line_end":401,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285702,"byte_end":285741,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285746,"byte_end":285754,"line_start":403,"line_end":403,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":285759,"byte_end":285766,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287696,"byte_end":287719,"line_start":457,"line_end":457,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"fn <Fut, F> (self, limit: impl Into<Option<usize>>, f: F) -> TryForEachConcurrent<Self, Fut, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286014,"byte_end":286096,"line_start":414,"line_end":414,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286101,"byte_end":286175,"line_start":415,"line_end":415,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286180,"byte_end":286230,"line_start":416,"line_end":416,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286235,"byte_end":286238,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286243,"byte_end":286265,"line_start":418,"line_end":418,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286270,"byte_end":286356,"line_start":419,"line_end":419,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286361,"byte_end":286446,"line_start":420,"line_end":420,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286451,"byte_end":286479,"line_start":421,"line_end":421,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286484,"byte_end":286487,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286492,"byte_end":286567,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286572,"byte_end":286629,"line_start":424,"line_end":424,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286634,"byte_end":286637,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286642,"byte_end":286656,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286661,"byte_end":286664,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286669,"byte_end":286676,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286681,"byte_end":286722,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286727,"byte_end":286761,"line_start":430,"line_end":430,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286766,"byte_end":286823,"line_start":431,"line_end":431,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286828,"byte_end":286831,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286836,"byte_end":286876,"line_start":433,"line_end":433,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286881,"byte_end":286921,"line_start":434,"line_end":434,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286926,"byte_end":286967,"line_start":435,"line_end":435,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286972,"byte_end":286975,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":286980,"byte_end":287031,"line_start":437,"line_end":437,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287036,"byte_end":287089,"line_start":438,"line_end":438,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287094,"byte_end":287116,"line_start":439,"line_end":439,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287121,"byte_end":287146,"line_start":440,"line_end":440,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287151,"byte_end":287213,"line_start":441,"line_end":441,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287218,"byte_end":287233,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287238,"byte_end":287247,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287252,"byte_end":287258,"line_start":444,"line_end":444,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287263,"byte_end":287266,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287271,"byte_end":287297,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287302,"byte_end":287369,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287374,"byte_end":287388,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287393,"byte_end":287396,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287401,"byte_end":287462,"line_start":450,"line_end":450,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287467,"byte_end":287495,"line_start":451,"line_end":451,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287500,"byte_end":287550,"line_start":452,"line_end":452,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287555,"byte_end":287563,"line_start":453,"line_end":453,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287568,"byte_end":287575,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":287663,"byte_end":287688,"line_start":456,"line_end":456,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289076,"byte_end":289087,"line_start":500,"line_end":500,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn <C> (self) -> TryCollect<Self, C>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288037,"byte_end":288089,"line_start":470,"line_end":470,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288094,"byte_end":288161,"line_start":471,"line_end":471,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288166,"byte_end":288169,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288174,"byte_end":288248,"line_start":473,"line_end":473,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288253,"byte_end":288334,"line_start":474,"line_end":474,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288339,"byte_end":288409,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288414,"byte_end":288417,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288422,"byte_end":288490,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288495,"byte_end":288498,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288503,"byte_end":288517,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288522,"byte_end":288525,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288530,"byte_end":288537,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288542,"byte_end":288583,"line_start":482,"line_end":482,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288588,"byte_end":288619,"line_start":483,"line_end":483,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288624,"byte_end":288662,"line_start":484,"line_end":484,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288667,"byte_end":288687,"line_start":485,"line_end":485,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288692,"byte_end":288695,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288700,"byte_end":288737,"line_start":487,"line_end":487,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288742,"byte_end":288745,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288750,"byte_end":288777,"line_start":489,"line_end":489,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288782,"byte_end":288806,"line_start":490,"line_end":490,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288811,"byte_end":288857,"line_start":491,"line_end":491,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288862,"byte_end":288871,"line_start":492,"line_end":492,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288876,"byte_end":288919,"line_start":493,"line_end":493,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288924,"byte_end":288931,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288936,"byte_end":288939,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":288944,"byte_end":289007,"line_start":496,"line_end":496,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289012,"byte_end":289043,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289048,"byte_end":289056,"line_start":498,"line_end":498,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289061,"byte_end":289068,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290514,"byte_end":290524,"line_start":537,"line_end":537,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn <Fut, F> (self, f: F) -> TryFilter<Self, Fut, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289226,"byte_end":289299,"line_start":507,"line_end":507,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289304,"byte_end":289338,"line_start":508,"line_end":508,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289343,"byte_end":289346,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289351,"byte_end":289426,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289431,"byte_end":289506,"line_start":511,"line_end":511,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289511,"byte_end":289584,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289589,"byte_end":289660,"line_start":513,"line_end":513,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289665,"byte_end":289715,"line_start":514,"line_end":514,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289720,"byte_end":289723,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289728,"byte_end":289799,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289804,"byte_end":289807,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289812,"byte_end":289888,"line_start":518,"line_end":518,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289893,"byte_end":289963,"line_start":519,"line_end":519,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289968,"byte_end":289993,"line_start":520,"line_end":520,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":289998,"byte_end":290001,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290006,"byte_end":290020,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290025,"byte_end":290032,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290037,"byte_end":290078,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290083,"byte_end":290107,"line_start":525,"line_end":525,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290112,"byte_end":290169,"line_start":526,"line_end":526,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290174,"byte_end":290177,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290182,"byte_end":290262,"line_start":528,"line_end":528,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290267,"byte_end":290310,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290315,"byte_end":290348,"line_start":530,"line_end":530,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290353,"byte_end":290360,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290365,"byte_end":290368,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290373,"byte_end":290421,"line_start":533,"line_end":533,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290426,"byte_end":290481,"line_start":534,"line_end":534,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290486,"byte_end":290494,"line_start":535,"line_end":535,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290499,"byte_end":290506,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292100,"byte_end":292114,"line_start":578,"line_end":578,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn <Fut, F, T> (self, f: F) -> TryFilterMap<Self, Fut, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290724,"byte_end":290786,"line_start":546,"line_end":546,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290791,"byte_end":290859,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290864,"byte_end":290898,"line_start":548,"line_end":548,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290903,"byte_end":290906,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290911,"byte_end":290986,"line_start":550,"line_end":550,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":290991,"byte_end":291066,"line_start":551,"line_end":551,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291071,"byte_end":291147,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291152,"byte_end":291217,"line_start":553,"line_end":553,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291222,"byte_end":291225,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291230,"byte_end":291301,"line_start":555,"line_end":555,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291306,"byte_end":291309,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291314,"byte_end":291390,"line_start":557,"line_end":557,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291395,"byte_end":291469,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291474,"byte_end":291499,"line_start":559,"line_end":559,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291504,"byte_end":291507,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291512,"byte_end":291526,"line_start":561,"line_end":561,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291531,"byte_end":291538,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291543,"byte_end":291584,"line_start":563,"line_end":563,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291589,"byte_end":291646,"line_start":564,"line_end":564,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291651,"byte_end":291676,"line_start":565,"line_end":565,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291681,"byte_end":291684,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291689,"byte_end":291759,"line_start":567,"line_end":567,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291764,"byte_end":291819,"line_start":568,"line_end":568,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291824,"byte_end":291886,"line_start":569,"line_end":569,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291891,"byte_end":291906,"line_start":570,"line_end":570,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291911,"byte_end":291918,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291923,"byte_end":291926,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291931,"byte_end":291952,"line_start":573,"line_end":573,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":291957,"byte_end":292006,"line_start":574,"line_end":574,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292011,"byte_end":292067,"line_start":575,"line_end":575,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292072,"byte_end":292080,"line_start":576,"line_end":576,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292085,"byte_end":292092,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293762,"byte_end":293773,"line_start":625,"line_end":625,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn (self) -> TryFlatten<Self>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292347,"byte_end":292412,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292417,"byte_end":292420,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292425,"byte_end":292498,"line_start":589,"line_end":589,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292503,"byte_end":292576,"line_start":590,"line_end":590,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292581,"byte_end":292654,"line_start":591,"line_end":591,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292659,"byte_end":292729,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292734,"byte_end":292737,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292742,"byte_end":292756,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292761,"byte_end":292764,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292769,"byte_end":292776,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292781,"byte_end":292822,"line_start":597,"line_end":597,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292827,"byte_end":292858,"line_start":598,"line_end":598,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292863,"byte_end":292914,"line_start":599,"line_end":599,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292919,"byte_end":292939,"line_start":600,"line_end":600,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292944,"byte_end":292947,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292952,"byte_end":292991,"line_start":602,"line_end":602,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":292996,"byte_end":293035,"line_start":603,"line_end":603,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293040,"byte_end":293079,"line_start":604,"line_end":604,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293084,"byte_end":293087,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293092,"byte_end":293119,"line_start":606,"line_end":606,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293124,"byte_end":293167,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293172,"byte_end":293179,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293184,"byte_end":293211,"line_start":609,"line_end":609,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293216,"byte_end":293259,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293264,"byte_end":293308,"line_start":611,"line_end":611,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293313,"byte_end":293320,"line_start":612,"line_end":612,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293325,"byte_end":293352,"line_start":613,"line_end":613,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293357,"byte_end":293402,"line_start":614,"line_end":614,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293407,"byte_end":293452,"line_start":615,"line_end":615,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293457,"byte_end":293501,"line_start":616,"line_end":616,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293506,"byte_end":293513,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293518,"byte_end":293521,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293526,"byte_end":293565,"line_start":619,"line_end":619,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293570,"byte_end":293619,"line_start":620,"line_end":620,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293624,"byte_end":293673,"line_start":621,"line_end":621,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293678,"byte_end":293728,"line_start":622,"line_end":622,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293733,"byte_end":293742,"line_start":623,"line_end":623,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293747,"byte_end":293754,"line_start":624,"line_end":624,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295253,"byte_end":295261,"line_start":662,"line_end":662,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> TryFold<Self, Fut, T, F>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":293966,"byte_end":294036,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294041,"byte_end":294101,"line_start":635,"line_end":635,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294106,"byte_end":294109,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294114,"byte_end":294184,"line_start":637,"line_end":637,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294189,"byte_end":294265,"line_start":638,"line_end":638,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294270,"byte_end":294346,"line_start":639,"line_end":639,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294351,"byte_end":294421,"line_start":640,"line_end":640,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294426,"byte_end":294452,"line_start":641,"line_end":641,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294457,"byte_end":294460,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294465,"byte_end":294545,"line_start":643,"line_end":643,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294550,"byte_end":294619,"line_start":644,"line_end":644,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294624,"byte_end":294645,"line_start":645,"line_end":645,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294650,"byte_end":294653,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294658,"byte_end":294672,"line_start":647,"line_end":647,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294677,"byte_end":294680,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294685,"byte_end":294692,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294697,"byte_end":294738,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294743,"byte_end":294789,"line_start":651,"line_end":651,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294794,"byte_end":294797,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294802,"byte_end":294871,"line_start":653,"line_end":653,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294876,"byte_end":294953,"line_start":654,"line_end":654,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294958,"byte_end":294991,"line_start":655,"line_end":655,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":294996,"byte_end":294999,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295004,"byte_end":295090,"line_start":657,"line_end":657,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295095,"byte_end":295181,"line_start":658,"line_end":658,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295186,"byte_end":295220,"line_start":659,"line_end":659,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295225,"byte_end":295233,"line_start":660,"line_end":660,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295238,"byte_end":295245,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296743,"byte_end":296753,"line_start":705,"line_end":705,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn (self) -> TryConcat<Self>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295497,"byte_end":295559,"line_start":671,"line_end":671,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295564,"byte_end":295639,"line_start":672,"line_end":672,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295644,"byte_end":295647,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295652,"byte_end":295723,"line_start":674,"line_end":674,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295728,"byte_end":295804,"line_start":675,"line_end":675,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295809,"byte_end":295848,"line_start":676,"line_end":676,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295853,"byte_end":295856,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295861,"byte_end":295947,"line_start":678,"line_end":678,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295952,"byte_end":295955,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":295960,"byte_end":296044,"line_start":680,"line_end":680,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296049,"byte_end":296105,"line_start":681,"line_end":681,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296110,"byte_end":296113,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296118,"byte_end":296132,"line_start":683,"line_end":683,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296137,"byte_end":296140,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296145,"byte_end":296152,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296157,"byte_end":296198,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296203,"byte_end":296234,"line_start":687,"line_end":687,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296239,"byte_end":296277,"line_start":688,"line_end":688,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296282,"byte_end":296302,"line_start":689,"line_end":689,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296307,"byte_end":296310,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296315,"byte_end":296376,"line_start":691,"line_end":691,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296381,"byte_end":296384,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296389,"byte_end":296416,"line_start":693,"line_end":693,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296421,"byte_end":296452,"line_start":694,"line_end":694,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296457,"byte_end":296483,"line_start":695,"line_end":695,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296488,"byte_end":296558,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296563,"byte_end":296572,"line_start":697,"line_end":697,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296577,"byte_end":296584,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296589,"byte_end":296592,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296597,"byte_end":296636,"line_start":700,"line_end":700,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296641,"byte_end":296644,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296649,"byte_end":296709,"line_start":702,"line_end":702,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296714,"byte_end":296723,"line_start":703,"line_end":703,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296728,"byte_end":296735,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299456,"byte_end":299476,"line_start":772,"line_end":772,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"fn (self, n: usize) -> TryBufferUnordered<Self>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":296956,"byte_end":297022,"line_start":713,"line_end":713,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297027,"byte_end":297030,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297035,"byte_end":297140,"line_start":715,"line_end":715,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297145,"byte_end":297188,"line_start":716,"line_end":716,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297193,"byte_end":297196,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297201,"byte_end":297269,"line_start":718,"line_end":718,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297274,"byte_end":297347,"line_start":719,"line_end":719,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297352,"byte_end":297408,"line_start":720,"line_end":720,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297413,"byte_end":297416,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297421,"byte_end":297496,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297501,"byte_end":297574,"line_start":723,"line_end":723,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297579,"byte_end":297644,"line_start":724,"line_end":724,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297649,"byte_end":297652,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297657,"byte_end":297732,"line_start":726,"line_end":726,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297737,"byte_end":297794,"line_start":727,"line_end":727,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297799,"byte_end":297802,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297807,"byte_end":297821,"line_start":729,"line_end":729,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297826,"byte_end":297829,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297834,"byte_end":297886,"line_start":731,"line_end":731,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297891,"byte_end":297898,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297903,"byte_end":297944,"line_start":733,"line_end":733,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297949,"byte_end":297983,"line_start":734,"line_end":734,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":297988,"byte_end":298045,"line_start":735,"line_end":735,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298050,"byte_end":298053,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298058,"byte_end":298108,"line_start":737,"line_end":737,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298113,"byte_end":298163,"line_start":738,"line_end":738,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298168,"byte_end":298171,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298176,"byte_end":298251,"line_start":740,"line_end":740,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298256,"byte_end":298259,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298264,"byte_end":298330,"line_start":742,"line_end":742,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298335,"byte_end":298338,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298343,"byte_end":298368,"line_start":744,"line_end":744,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298373,"byte_end":298427,"line_start":745,"line_end":745,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298432,"byte_end":298435,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298440,"byte_end":298465,"line_start":747,"line_end":747,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298470,"byte_end":298524,"line_start":748,"line_end":748,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298529,"byte_end":298532,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298537,"byte_end":298581,"line_start":750,"line_end":750,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298586,"byte_end":298622,"line_start":751,"line_end":751,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298627,"byte_end":298634,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298639,"byte_end":298642,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298647,"byte_end":298707,"line_start":754,"line_end":754,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298712,"byte_end":298719,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298724,"byte_end":298765,"line_start":756,"line_end":756,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298770,"byte_end":298801,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298806,"byte_end":298857,"line_start":758,"line_end":758,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298862,"byte_end":298865,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298870,"byte_end":298924,"line_start":760,"line_end":760,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":298929,"byte_end":298995,"line_start":761,"line_end":761,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299000,"byte_end":299003,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299008,"byte_end":299057,"line_start":763,"line_end":763,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299062,"byte_end":299116,"line_start":764,"line_end":764,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299121,"byte_end":299124,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299129,"byte_end":299182,"line_start":766,"line_end":766,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299187,"byte_end":299259,"line_start":767,"line_end":767,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299264,"byte_end":299323,"line_start":768,"line_end":768,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299328,"byte_end":299335,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299423,"byte_end":299448,"line_start":771,"line_end":771,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299852,"byte_end":299871,"line_start":784,"line_end":784,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299744,"byte_end":299822,"line_start":782,"line_end":782,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":299827,"byte_end":299844,"line_start":783,"line_end":783,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":302061,"byte_end":302076,"line_start":848,"line_end":848,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"fn (self) -> IntoAsyncRead<Self>","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":300889,"byte_end":300971,"line_start":821,"line_end":821,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":300976,"byte_end":300979,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":300984,"byte_end":301099,"line_start":823,"line_end":823,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301104,"byte_end":301195,"line_start":824,"line_end":824,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301200,"byte_end":301290,"line_start":825,"line_end":825,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301295,"byte_end":301380,"line_start":826,"line_end":826,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301385,"byte_end":301388,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301393,"byte_end":301457,"line_start":828,"line_end":828,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301462,"byte_end":301519,"line_start":829,"line_end":829,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301524,"byte_end":301527,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301532,"byte_end":301546,"line_start":831,"line_end":831,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301551,"byte_end":301554,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301559,"byte_end":301566,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301571,"byte_end":301612,"line_start":834,"line_end":834,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301617,"byte_end":301663,"line_start":835,"line_end":835,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301668,"byte_end":301702,"line_start":836,"line_end":836,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301707,"byte_end":301710,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301715,"byte_end":301776,"line_start":838,"line_end":838,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301781,"byte_end":301827,"line_start":839,"line_end":839,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301832,"byte_end":301861,"line_start":840,"line_end":840,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301866,"byte_end":301869,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301874,"byte_end":301930,"line_start":842,"line_end":842,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301935,"byte_end":301973,"line_start":843,"line_end":843,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301978,"byte_end":301986,"line_start":844,"line_end":844,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":301991,"byte_end":301998,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":302003,"byte_end":302025,"line_start":846,"line_end":846,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":302030,"byte_end":302053,"line_start":847,"line_end":847,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6079},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364627,"byte_end":364631,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6081}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364512,"byte_end":364549,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364567,"byte_end":364615,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3476},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":365149,"byte_end":365153,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364683,"byte_end":364747,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364748,"byte_end":364776,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364777,"byte_end":364780,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364781,"byte_end":364854,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364855,"byte_end":364910,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364911,"byte_end":364914,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364915,"byte_end":364922,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364923,"byte_end":364964,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364965,"byte_end":365008,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":365009,"byte_end":365012,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":365013,"byte_end":365057,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":365058,"byte_end":365123,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":365124,"byte_end":365133,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":365134,"byte_end":365141,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6085},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":365795,"byte_end":365801,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":6087}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":365678,"byte_end":365717,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":365735,"byte_end":365783,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3494},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366325,"byte_end":366331,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T> (item: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":365823,"byte_end":365883,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":365884,"byte_end":365887,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":365888,"byte_end":365955,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":365956,"byte_end":366028,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366029,"byte_end":366086,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366087,"byte_end":366090,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366091,"byte_end":366098,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366099,"byte_end":366140,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366141,"byte_end":366184,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366185,"byte_end":366188,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366189,"byte_end":366224,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366225,"byte_end":366299,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366300,"byte_end":366309,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366310,"byte_end":366317,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6091},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367116,"byte_end":367121,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":6093}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367000,"byte_end":367038,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367056,"byte_end":367104,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3518},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367289,"byte_end":367294,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367159,"byte_end":367207,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367208,"byte_end":367211,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367212,"byte_end":367281,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3543},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368228,"byte_end":368232,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <Fut> (future: Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":367921,"byte_end":367962,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":367963,"byte_end":367966,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":367967,"byte_end":367974,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":367975,"byte_end":368016,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368017,"byte_end":368060,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368061,"byte_end":368064,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368065,"byte_end":368109,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368110,"byte_end":368165,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368166,"byte_end":368202,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368203,"byte_end":368212,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368213,"byte_end":368220,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6097},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368500,"byte_end":368504,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6099}],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"/ A stream which emits single element and then EOF.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368311,"byte_end":368364,"line_start":22,"line_end":22,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368365,"byte_end":368368,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368369,"byte_end":368422,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368440,"byte_end":368488,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6106},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369600,"byte_end":369607,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":6108}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369480,"byte_end":369522,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369540,"byte_end":369588,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3569},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369783,"byte_end":369790,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369651,"byte_end":369705,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369706,"byte_end":369709,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369710,"byte_end":369775,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3591},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370496,"byte_end":370502,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":3593}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370395,"byte_end":370435,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370436,"byte_end":370484,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3599},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":371190,"byte_end":371197,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370702,"byte_end":370775,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370776,"byte_end":370779,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370780,"byte_end":370839,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370840,"byte_end":370843,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370844,"byte_end":370858,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370859,"byte_end":370862,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370863,"byte_end":370870,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370871,"byte_end":370904,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370905,"byte_end":370933,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370934,"byte_end":370937,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370938,"byte_end":370967,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370968,"byte_end":370971,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370972,"byte_end":371036,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":371037,"byte_end":371090,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":371091,"byte_end":371112,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":371113,"byte_end":371166,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":371167,"byte_end":371174,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":371175,"byte_end":371182,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6112},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":371802,"byte_end":371808,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6115},{"krate":0,"index":6116},{"krate":0,"index":6117}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`select()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":371683,"byte_end":371724,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":371742,"byte_end":371790,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3624},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372424,"byte_end":372430,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn <St1, St2> (stream1: St1, stream2: St2) -> Select<St1, St2>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":371948,"byte_end":372016,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372017,"byte_end":372093,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372094,"byte_end":372142,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372143,"byte_end":372146,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372147,"byte_end":372221,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372222,"byte_end":372291,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372292,"byte_end":372319,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372320,"byte_end":372323,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372324,"byte_end":372395,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372396,"byte_end":372416,"line_start":26,"line_end":26,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372809,"byte_end":372816,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372701,"byte_end":372775,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372780,"byte_end":372797,"line_start":40,"line_end":40,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373172,"byte_end":373179,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372910,"byte_end":372978,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372983,"byte_end":373014,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373019,"byte_end":373022,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373027,"byte_end":373100,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373105,"byte_end":373160,"line_start":49,"line_end":49,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373554,"byte_end":373565,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373285,"byte_end":373360,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373365,"byte_end":373396,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373401,"byte_end":373404,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373409,"byte_end":373482,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373487,"byte_end":373542,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":374071,"byte_end":374081,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373835,"byte_end":373898,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373903,"byte_end":373906,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373911,"byte_end":373983,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":373988,"byte_end":374059,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":3662},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377425,"byte_end":377431,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> Unfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":375983,"byte_end":376053,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376054,"byte_end":376057,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376058,"byte_end":376127,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376128,"byte_end":376209,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376210,"byte_end":376241,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376242,"byte_end":376245,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376246,"byte_end":376325,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376326,"byte_end":376405,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376406,"byte_end":376460,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376461,"byte_end":376464,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376465,"byte_end":376545,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376546,"byte_end":376616,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376617,"byte_end":376639,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376640,"byte_end":376643,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376644,"byte_end":376721,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376722,"byte_end":376794,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376795,"byte_end":376872,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376873,"byte_end":376933,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376934,"byte_end":376937,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376938,"byte_end":376951,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376952,"byte_end":376955,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376956,"byte_end":376963,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":376964,"byte_end":377005,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377006,"byte_end":377049,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377050,"byte_end":377053,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377054,"byte_end":377109,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377110,"byte_end":377133,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377134,"byte_end":377173,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377174,"byte_end":377211,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377212,"byte_end":377251,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377252,"byte_end":377268,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377269,"byte_end":377285,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377286,"byte_end":377295,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377296,"byte_end":377303,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377304,"byte_end":377307,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377308,"byte_end":377360,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377361,"byte_end":377399,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377400,"byte_end":377409,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377410,"byte_end":377417,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3667},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377747,"byte_end":377753,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3673}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`unfold`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377647,"byte_end":377686,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377687,"byte_end":377735,"line_start":59,"line_end":59,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6166},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307381,"byte_end":8307395,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6170},{"krate":0,"index":6171}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305315,"byte_end":8305349,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305350,"byte_end":8305353,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305354,"byte_end":8305433,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305434,"byte_end":8305505,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305506,"byte_end":8305582,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305583,"byte_end":8305631,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305632,"byte_end":8305635,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305636,"byte_end":8305715,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305716,"byte_end":8305791,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305792,"byte_end":8305870,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305871,"byte_end":8305951,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305952,"byte_end":8305981,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305982,"byte_end":8305985,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8305986,"byte_end":8306064,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306065,"byte_end":8306139,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306140,"byte_end":8306215,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306216,"byte_end":8306291,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306292,"byte_end":8306367,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306368,"byte_end":8306426,"line_start":76,"line_end":76,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306427,"byte_end":8306430,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306431,"byte_end":8306504,"line_start":78,"line_end":78,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306505,"byte_end":8306583,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306584,"byte_end":8306642,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306643,"byte_end":8306716,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306717,"byte_end":8306785,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306786,"byte_end":8306862,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306863,"byte_end":8306931,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306932,"byte_end":8306985,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306986,"byte_end":8306989,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8306990,"byte_end":8307056,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307057,"byte_end":8307136,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307137,"byte_end":8307184,"line_start":89,"line_end":89,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307185,"byte_end":8307188,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307189,"byte_end":8307262,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307263,"byte_end":8307320,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307321,"byte_end":8307369,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6176},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307903,"byte_end":8307906,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"fn () -> FuturesOrdered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307683,"byte_end":8307727,"line_start":104,"line_end":104,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307732,"byte_end":8307735,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307740,"byte_end":8307815,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307820,"byte_end":8307891,"line_start":107,"line_end":107,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6177},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308428,"byte_end":8308431,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308155,"byte_end":8308212,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308217,"byte_end":8308220,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308225,"byte_end":8308288,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308293,"byte_end":8308357,"line_start":120,"line_end":120,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308362,"byte_end":8308416,"line_start":121,"line_end":121,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6178},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308589,"byte_end":8308597,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308526,"byte_end":8308577,"line_start":126,"line_end":126,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6179},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8309021,"byte_end":8309025,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"fn (&mut self, future: Fut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308702,"byte_end":8308735,"line_start":131,"line_end":131,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308740,"byte_end":8308743,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308748,"byte_end":8308824,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308829,"byte_end":8308903,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308908,"byte_end":8308981,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8308986,"byte_end":8309009,"line_start":136,"line_end":136,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":6197},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":6198},{"krate":0,"index":6199},{"krate":0,"index":6202},{"krate":0,"index":6205},{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6213},{"krate":0,"index":6216},{"krate":0,"index":6217},{"krate":0,"index":6218},{"krate":0,"index":6219},{"krate":0,"index":6220},{"krate":0,"index":6221},{"krate":0,"index":6227},{"krate":0,"index":6230},{"krate":0,"index":6233},{"krate":0,"index":6239},{"krate":0,"index":6277},{"krate":0,"index":6282},{"krate":0,"index":6323},{"krate":0,"index":6324},{"krate":0,"index":6360},{"krate":0,"index":6363},{"krate":0,"index":6364},{"krate":0,"index":6369},{"krate":0,"index":6371},{"krate":0,"index":6373},{"krate":0,"index":6375},{"krate":0,"index":6377},{"krate":0,"index":6379},{"krate":0,"index":6382},{"krate":0,"index":6385},{"krate":0,"index":6399},{"krate":0,"index":6412},{"krate":0,"index":6415},{"krate":0,"index":6418},{"krate":0,"index":6423}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148809,"byte_end":148834,"line_start":86,"line_end":86,"column_start":5,"column_end":30}},{"value":"! An unbounded set of futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8311043,"byte_end":8311075,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8311076,"byte_end":8311079,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8311080,"byte_end":8311155,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8311156,"byte_end":8311213,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6474},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8337295,"byte_end":8337305,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":6477},{"krate":0,"index":6478},{"krate":0,"index":6479}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8337224,"byte_end":8337283,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6484},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8337541,"byte_end":8337548,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8337470,"byte_end":8337529,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6493},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8337690,"byte_end":8337700,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":6496},{"krate":0,"index":6497},{"krate":0,"index":6498},{"krate":0,"index":6499}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8337617,"byte_end":8337678,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":6504},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8337987,"byte_end":8337991,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8337910,"byte_end":8337975,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6364},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313927,"byte_end":8313943,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6366},{"krate":0,"index":6367},{"krate":0,"index":6368}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8312832,"byte_end":8312885,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8312886,"byte_end":8312889,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8312890,"byte_end":8312958,"line_start":52,"line_end":52,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8312959,"byte_end":8313032,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313033,"byte_end":8313109,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313110,"byte_end":8313154,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313155,"byte_end":8313158,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313159,"byte_end":8313237,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313238,"byte_end":8313296,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313297,"byte_end":8313361,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313362,"byte_end":8313415,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313416,"byte_end":8313495,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313496,"byte_end":8313525,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313526,"byte_end":8313529,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313530,"byte_end":8313600,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313601,"byte_end":8313678,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313679,"byte_end":8313730,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313731,"byte_end":8313734,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313735,"byte_end":8313808,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313809,"byte_end":8313866,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8313867,"byte_end":8313915,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6381},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8316490,"byte_end":8316493,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"fn () -> FuturesUnordered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8316219,"byte_end":8316268,"line_start":125,"line_end":125,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8316273,"byte_end":8316276,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8316281,"byte_end":8316348,"line_start":127,"line_end":127,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8316353,"byte_end":8316427,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8316432,"byte_end":8316478,"line_start":129,"line_end":129,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6387},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8317692,"byte_end":8317695,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8317554,"byte_end":8317609,"line_start":163,"line_end":163,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8317614,"byte_end":8317617,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8317622,"byte_end":8317680,"line_start":165,"line_end":165,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6388},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8317859,"byte_end":8317867,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8317797,"byte_end":8317847,"line_start":171,"line_end":171,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6389},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8318450,"byte_end":8318454,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"fn (&self, future: Fut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8318080,"byte_end":8318111,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8318116,"byte_end":8318119,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8318124,"byte_end":8318194,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8318199,"byte_end":8318285,"line_start":181,"line_end":181,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8318290,"byte_end":8318366,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8318371,"byte_end":8318438,"line_start":183,"line_end":183,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6390},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8319729,"byte_end":8319733,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"fn (&self) -> Iter<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8319647,"byte_end":8319717,"line_start":211,"line_end":211,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6392},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8320277,"byte_end":8320285,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8320196,"byte_end":8320265,"line_start":228,"line_end":228,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6393},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8320475,"byte_end":8320487,"line_start":234,"line_end":234,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"fn (mut self: Pin<&mut Self>) -> IterPinMut<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8320394,"byte_end":8320463,"line_start":233,"line_end":233,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6443},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349283,"byte_end":8349292,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":6445}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8348659,"byte_end":8348690,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8348691,"byte_end":8348694,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8348695,"byte_end":8348766,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8348767,"byte_end":8348804,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8348805,"byte_end":8348808,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8348809,"byte_end":8348875,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8348876,"byte_end":8348947,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8348948,"byte_end":8349028,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349029,"byte_end":8349032,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349033,"byte_end":8349094,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349095,"byte_end":8349169,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349170,"byte_end":8349222,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349223,"byte_end":8349271,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6451},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349749,"byte_end":8349752,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"fn () -> SelectAll<St>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349549,"byte_end":8349588,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349593,"byte_end":8349596,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349601,"byte_end":8349671,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349676,"byte_end":8349737,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6452},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349976,"byte_end":8349979,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349838,"byte_end":8349893,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349898,"byte_end":8349901,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349906,"byte_end":8349964,"line_start":46,"line_end":46,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6453},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350095,"byte_end":8350103,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350034,"byte_end":8350083,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6454},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350465,"byte_end":8350469,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"fn (&mut self, stream: St) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350162,"byte_end":8350193,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350198,"byte_end":8350201,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350206,"byte_end":8350278,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350283,"byte_end":8350357,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350362,"byte_end":8350430,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350435,"byte_end":8350453,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":6465},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8352245,"byte_end":8352255,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"fn <I> (streams: I) -> SelectAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8351624,"byte_end":8351698,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8351699,"byte_end":8351702,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8351703,"byte_end":8351782,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8351783,"byte_end":8351834,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8351835,"byte_end":8351909,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8351910,"byte_end":8351969,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8351970,"byte_end":8351973,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8351974,"byte_end":8352046,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8352047,"byte_end":8352097,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8352098,"byte_end":8352101,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8352102,"byte_end":8352179,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8352180,"byte_end":8352237,"line_start":115,"line_end":115,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":3706},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6513},{"krate":0,"index":6514},{"krate":0,"index":6515},{"krate":0,"index":6518},{"krate":0,"index":3707},{"krate":0,"index":3727},{"krate":0,"index":3730},{"krate":0,"index":3736},{"krate":0,"index":3743},{"krate":0,"index":3744}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"! Task notification","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":379410,"byte_end":379431,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3721},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380621,"byte_end":380629,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":3722}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380578,"byte_end":380610,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381626,"byte_end":381631,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"fn <Fut> (&self, future: Fut) -> Result<(), SpawnError>","parent":{"krate":0,"index":3721},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380643,"byte_end":380708,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380713,"byte_end":380728,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380733,"byte_end":380736,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380741,"byte_end":380811,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380816,"byte_end":380835,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380840,"byte_end":380843,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380848,"byte_end":380917,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380922,"byte_end":380995,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381000,"byte_end":381039,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381044,"byte_end":381047,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381052,"byte_end":381118,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381123,"byte_end":381189,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381194,"byte_end":381265,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381270,"byte_end":381326,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381331,"byte_end":381334,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381339,"byte_end":381346,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381351,"byte_end":381389,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381394,"byte_end":381426,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381431,"byte_end":381434,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381439,"byte_end":381485,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381490,"byte_end":381493,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381498,"byte_end":381535,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381540,"byte_end":381576,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381581,"byte_end":381588,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":381593,"byte_end":381618,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":3724},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383276,"byte_end":383289,"line_start":95,"line_end":95,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":3725}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383228,"byte_end":383265,"line_start":94,"line_end":94,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3725},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384332,"byte_end":384343,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"fn <Fut> (&self, future: Fut) -> Result<(), SpawnError>","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383308,"byte_end":383373,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383378,"byte_end":383393,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383398,"byte_end":383401,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383406,"byte_end":383476,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383481,"byte_end":383500,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383505,"byte_end":383508,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383513,"byte_end":383582,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383587,"byte_end":383660,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383665,"byte_end":383704,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383709,"byte_end":383712,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383717,"byte_end":383783,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383788,"byte_end":383854,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383859,"byte_end":383930,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383935,"byte_end":383991,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383996,"byte_end":383999,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384004,"byte_end":384011,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384016,"byte_end":384053,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384058,"byte_end":384095,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384100,"byte_end":384103,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384108,"byte_end":384144,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384149,"byte_end":384186,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384191,"byte_end":384194,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384199,"byte_end":384236,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384241,"byte_end":384282,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384287,"byte_end":384294,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":384299,"byte_end":384324,"line_start":121,"line_end":121,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":3745},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","parent":null,"children":[{"krate":0,"index":3746}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"! Definition of the `Never` type,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":385693,"byte_end":385728,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"! a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":385729,"byte_end":385785,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":3746},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":386422,"byte_end":386427,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":385787,"byte_end":385822,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":385823,"byte_end":385826,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":385827,"byte_end":385902,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":385903,"byte_end":385940,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":385941,"byte_end":385944,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":385945,"byte_end":386009,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":386010,"byte_end":386013,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":386014,"byte_end":386085,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":386086,"byte_end":386137,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":386138,"byte_end":386230,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":386231,"byte_end":386234,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":386235,"byte_end":386306,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":386307,"byte_end":386412,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":3747},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":3748},{"krate":0,"index":3749},{"krate":0,"index":3760},{"krate":0,"index":3761},{"krate":0,"index":3763},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4047},{"krate":0,"index":4050},{"krate":0,"index":4075},{"krate":0,"index":4078},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4137},{"krate":0,"index":4140},{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":4178},{"krate":0,"index":4179},{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4359},{"krate":0,"index":4362},{"krate":0,"index":4382},{"krate":0,"index":4383},{"krate":0,"index":4404},{"krate":0,"index":4407},{"krate":0,"index":4442},{"krate":0,"index":4445},{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4518},{"krate":0,"index":4519},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4559},{"krate":0,"index":4560},{"krate":0,"index":4575},{"krate":0,"index":4577},{"krate":0,"index":4586},{"krate":0,"index":4588},{"krate":0,"index":4590},{"krate":0,"index":4592},{"krate":0,"index":4598}],"decl_id":null,"docs":" IO","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3567,"byte_end":3589,"line_start":112,"line_end":112,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3590,"byte_end":3613,"line_start":113,"line_end":113,"column_start":1,"column_end":24}},{"value":"! IO","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":386458,"byte_end":386464,"line_start":1,"line_end":1,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":386465,"byte_end":386468,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":386469,"byte_end":386532,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"! `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` types, including","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":386533,"byte_end":386612,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! the `AsyncReadExt`, `AsyncWriteExt`, `AsyncSeekExt`, and `AsyncBufReadExt`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":386613,"byte_end":386691,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! traits which add methods to the `AsyncRead`, `AsyncWrite`, `AsyncSeek`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":386692,"byte_end":386767,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! and `AsyncBufRead` types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":386768,"byte_end":386797,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":386798,"byte_end":386801,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `io` and `std` features of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":386802,"byte_end":386876,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":386877,"byte_end":386934,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6519},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408336,"byte_end":408346,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":407687,"byte_end":407752,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":407753,"byte_end":407802,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":407803,"byte_end":407874,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":407875,"byte_end":407878,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":407879,"byte_end":407955,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":407956,"byte_end":408027,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408028,"byte_end":408096,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408097,"byte_end":408165,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408166,"byte_end":408241,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408242,"byte_end":408256,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408910,"byte_end":408913,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"fn (io: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408840,"byte_end":408898,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":409028,"byte_end":409035,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408965,"byte_end":409016,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":409149,"byte_end":409156,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":409078,"byte_end":409137,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":409277,"byte_end":409287,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":409211,"byte_end":409265,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3850},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414218,"byte_end":414227,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[{"value":"/ The `BufReader` struct adds buffering to any reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413330,"byte_end":413386,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413387,"byte_end":413390,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It can be excessively inefficient to work directly with a [`AsyncRead`]","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413391,"byte_end":413466,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ instance. A `BufReader` performs large, infrequent reads on the underlying","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413467,"byte_end":413545,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ [`AsyncRead`] and maintains an in-memory buffer of the results.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413546,"byte_end":413613,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413614,"byte_end":413617,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `BufReader` can improve the speed of programs that make *small* and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413618,"byte_end":413689,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ *repeated* read calls to the same file or network socket. It does not","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413690,"byte_end":413763,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ help when reading very large amounts at once, or reading just one or a few","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413764,"byte_end":413842,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ times. It also provides no advantage when reading from a source that is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413843,"byte_end":413918,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ already in memory, like a `Vec<u8>`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413919,"byte_end":413959,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413960,"byte_end":413963,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When the `BufReader` is dropped, the contents of its buffer will be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":413964,"byte_end":414035,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ discarded. Creating multiple instances of a `BufReader` on the same","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414036,"byte_end":414107,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ stream can cause data loss.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414108,"byte_end":414139,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414140,"byte_end":414143,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: futures_io::AsyncRead","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414144,"byte_end":414184,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414185,"byte_end":414188,"line_start":28,"line_end":28,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":3860},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414606,"byte_end":414609,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414464,"byte_end":414556,"line_start":44,"line_end":44,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414561,"byte_end":414594,"line_start":45,"line_end":45,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3861},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414771,"byte_end":414784,"line_start":51,"line_end":51,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414694,"byte_end":414759,"line_start":50,"line_end":50,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415298,"byte_end":415305,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415161,"byte_end":415207,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415212,"byte_end":415215,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415220,"byte_end":415286,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3863},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415497,"byte_end":415504,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415352,"byte_end":415406,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415411,"byte_end":415414,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415419,"byte_end":415485,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415715,"byte_end":415726,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415563,"byte_end":415624,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415629,"byte_end":415632,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415637,"byte_end":415703,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3865},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415949,"byte_end":415959,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415798,"byte_end":415861,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415866,"byte_end":415869,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":415874,"byte_end":415937,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3866},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":416163,"byte_end":416169,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":416003,"byte_end":416059,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":416064,"byte_end":416067,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":416072,"byte_end":416151,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":3911},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423768,"byte_end":423777,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[{"value":"/ Wraps a writer and buffers its output.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":422734,"byte_end":422776,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":422777,"byte_end":422780,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It can be excessively inefficient to work directly with something that","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":422781,"byte_end":422855,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ implements [`AsyncWrite`]. A `BufWriter` keeps an in-memory buffer of data and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":422856,"byte_end":422938,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ writes it to an underlying writer in large, infrequent batches.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":422939,"byte_end":423006,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423007,"byte_end":423010,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `BufWriter` can improve the speed of programs that make *small* and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423011,"byte_end":423082,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ *repeated* write calls to the same file or network socket. It does not","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423083,"byte_end":423157,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ help when writing very large amounts at once, or writing just one or a few","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423158,"byte_end":423236,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ times. It also provides no advantage when writing to a destination that is","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423237,"byte_end":423315,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ in memory, like a `Vec<u8>`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423316,"byte_end":423348,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423349,"byte_end":423352,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When the `BufWriter` is dropped, the contents of its buffer will be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423353,"byte_end":423424,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ discarded. Creating multiple instances of a `BufWriter` on the same","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423425,"byte_end":423496,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ stream can cause data loss. If you need to write out the contents of its","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423497,"byte_end":423573,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ buffer, you must manually call flush before the writer is dropped.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423574,"byte_end":423644,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423645,"byte_end":423648,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`AsyncWrite`]: futures_io::AsyncWrite","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423649,"byte_end":423691,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/ [`flush`]: super::AsyncWriteExt::flush","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423692,"byte_end":423734,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423735,"byte_end":423738,"line_start":30,"line_end":30,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":424111,"byte_end":424114,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423969,"byte_end":424061,"line_start":44,"line_end":44,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":424066,"byte_end":424099,"line_start":45,"line_end":45,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3921},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":424276,"byte_end":424289,"line_start":51,"line_end":51,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (cap: usize, inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":424199,"byte_end":424264,"line_start":50,"line_end":50,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425446,"byte_end":425453,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425388,"byte_end":425434,"line_start":88,"line_end":88,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3924},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425644,"byte_end":425651,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425500,"byte_end":425554,"line_start":93,"line_end":93,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425559,"byte_end":425562,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425567,"byte_end":425632,"line_start":95,"line_end":95,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3925},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425861,"byte_end":425872,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425710,"byte_end":425771,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425776,"byte_end":425779,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425784,"byte_end":425849,"line_start":102,"line_end":102,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3926},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":426095,"byte_end":426105,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":425944,"byte_end":426007,"line_start":107,"line_end":107,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":426012,"byte_end":426015,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":426020,"byte_end":426083,"line_start":109,"line_end":109,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":426217,"byte_end":426223,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":426149,"byte_end":426205,"line_start":114,"line_end":114,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3964},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":429802,"byte_end":429807,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":3969}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`chain`](super::AsyncReadExt::chain) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":429677,"byte_end":429741,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":429742,"byte_end":429790,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430344,"byte_end":430351,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430270,"byte_end":430332,"line_start":42,"line_end":42,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3978},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430683,"byte_end":430690,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430420,"byte_end":430490,"line_start":47,"line_end":47,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430495,"byte_end":430498,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430503,"byte_end":430576,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430581,"byte_end":430654,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430659,"byte_end":430671,"line_start":51,"line_end":51,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3979},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":431049,"byte_end":431060,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430779,"byte_end":430856,"line_start":56,"line_end":56,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430861,"byte_end":430864,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430869,"byte_end":430942,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":430947,"byte_end":431020,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":431025,"byte_end":431037,"line_start":60,"line_end":60,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":431360,"byte_end":431370,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":431292,"byte_end":431348,"line_start":68,"line_end":68,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6576},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/close.rs","byte_start":434327,"byte_end":434332,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":6579}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/close.rs","byte_start":434165,"byte_end":434230,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/close.rs","byte_start":434248,"byte_end":434315,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":4031},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435881,"byte_end":435885,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"fn <R, W> (reader: R, writer: &mut W) -> Copy<'_, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435032,"byte_end":435107,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435108,"byte_end":435111,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435112,"byte_end":435195,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435196,"byte_end":435276,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435277,"byte_end":435349,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435350,"byte_end":435363,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435364,"byte_end":435367,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435368,"byte_end":435415,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435416,"byte_end":435419,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435420,"byte_end":435434,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435435,"byte_end":435438,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435439,"byte_end":435446,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435447,"byte_end":435488,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435489,"byte_end":435540,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435541,"byte_end":435544,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435545,"byte_end":435588,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435589,"byte_end":435636,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435637,"byte_end":435640,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435641,"byte_end":435694,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435695,"byte_end":435721,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435722,"byte_end":435725,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435726,"byte_end":435751,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435752,"byte_end":435805,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435806,"byte_end":435865,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":435866,"byte_end":435873,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6584},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":436212,"byte_end":436216,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":6588}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`copy()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":436076,"byte_end":436115,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":436133,"byte_end":436200,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":4060},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437739,"byte_end":437747,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"fn <R, W> (reader: R, writer: &mut W) -> CopyBuf<'_, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":436883,"byte_end":436958,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":436959,"byte_end":436962,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":436963,"byte_end":437049,"line_start":9,"line_end":9,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437050,"byte_end":437130,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437131,"byte_end":437203,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437204,"byte_end":437217,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437218,"byte_end":437221,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437222,"byte_end":437269,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437270,"byte_end":437273,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437274,"byte_end":437288,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437289,"byte_end":437292,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437293,"byte_end":437300,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437301,"byte_end":437342,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437343,"byte_end":437394,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437395,"byte_end":437398,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437399,"byte_end":437442,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437443,"byte_end":437490,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437491,"byte_end":437494,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437495,"byte_end":437552,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437553,"byte_end":437579,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437580,"byte_end":437583,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437584,"byte_end":437609,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437610,"byte_end":437663,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437664,"byte_end":437723,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437724,"byte_end":437731,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6597},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":438078,"byte_end":438085,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6603}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`copy_buf()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437938,"byte_end":437981,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":437999,"byte_end":438066,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6609},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440330,"byte_end":440336,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":6611}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":439555,"byte_end":439618,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":439619,"byte_end":439652,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":439653,"byte_end":439656,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":439657,"byte_end":439725,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":439726,"byte_end":439808,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":439809,"byte_end":439888,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":439889,"byte_end":439914,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":439915,"byte_end":439918,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":439919,"byte_end":439993,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":439994,"byte_end":440061,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440062,"byte_end":440095,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440096,"byte_end":440099,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440100,"byte_end":440139,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440140,"byte_end":440179,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440180,"byte_end":440221,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440222,"byte_end":440285,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4094},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440916,"byte_end":440919,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn (inner: T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440395,"byte_end":440470,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440475,"byte_end":440478,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440483,"byte_end":440557,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440562,"byte_end":440630,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440635,"byte_end":440673,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440678,"byte_end":440681,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440686,"byte_end":440700,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440705,"byte_end":440708,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440713,"byte_end":440720,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440725,"byte_end":440753,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440758,"byte_end":440761,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440766,"byte_end":440805,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440810,"byte_end":440858,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440863,"byte_end":440892,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440897,"byte_end":440904,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4095},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441371,"byte_end":441381,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441026,"byte_end":441083,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441088,"byte_end":441091,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441096,"byte_end":441110,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441115,"byte_end":441118,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441123,"byte_end":441130,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441135,"byte_end":441163,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441168,"byte_end":441171,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441176,"byte_end":441215,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441220,"byte_end":441268,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441273,"byte_end":441302,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441307,"byte_end":441310,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441315,"byte_end":441347,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441352,"byte_end":441359,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4096},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441789,"byte_end":441796,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441438,"byte_end":441498,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441503,"byte_end":441506,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441511,"byte_end":441525,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441530,"byte_end":441533,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441538,"byte_end":441545,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441550,"byte_end":441578,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441583,"byte_end":441586,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441591,"byte_end":441630,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441635,"byte_end":441683,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441688,"byte_end":441717,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441722,"byte_end":441725,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441730,"byte_end":441765,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441770,"byte_end":441777,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442368,"byte_end":442375,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441852,"byte_end":441920,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441925,"byte_end":441928,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":441933,"byte_end":442006,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442011,"byte_end":442073,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442078,"byte_end":442081,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442086,"byte_end":442100,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442105,"byte_end":442108,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442113,"byte_end":442120,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442125,"byte_end":442153,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442158,"byte_end":442161,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442166,"byte_end":442209,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442214,"byte_end":442262,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442267,"byte_end":442296,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442301,"byte_end":442304,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442309,"byte_end":442344,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442349,"byte_end":442356,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443033,"byte_end":443041,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442439,"byte_end":442487,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442492,"byte_end":442495,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442500,"byte_end":442514,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442519,"byte_end":442522,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442527,"byte_end":442534,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442539,"byte_end":442580,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442585,"byte_end":442639,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442644,"byte_end":442647,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442652,"byte_end":442704,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442709,"byte_end":442712,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442717,"byte_end":442752,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442757,"byte_end":442760,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442765,"byte_end":442808,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442813,"byte_end":442848,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442853,"byte_end":442856,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442861,"byte_end":442905,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442910,"byte_end":442945,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":442950,"byte_end":443009,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443014,"byte_end":443021,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4099},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443509,"byte_end":443521,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn (&mut self, pos: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443099,"byte_end":443136,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443141,"byte_end":443144,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443149,"byte_end":443163,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443168,"byte_end":443171,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443176,"byte_end":443183,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443188,"byte_end":443216,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443221,"byte_end":443224,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443229,"byte_end":443281,"line_start":135,"line_end":135,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443286,"byte_end":443289,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443294,"byte_end":443329,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443334,"byte_end":443337,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443342,"byte_end":443367,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443372,"byte_end":443407,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443412,"byte_end":443415,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443420,"byte_end":443445,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443450,"byte_end":443485,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443490,"byte_end":443497,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4127},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446302,"byte_end":446307,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":4128}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446201,"byte_end":446241,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446242,"byte_end":446290,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4129},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446867,"byte_end":446872,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446328,"byte_end":446375,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446376,"byte_end":446379,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446380,"byte_end":446452,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446453,"byte_end":446456,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446457,"byte_end":446471,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446472,"byte_end":446475,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446476,"byte_end":446541,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446542,"byte_end":446545,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446546,"byte_end":446553,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446554,"byte_end":446595,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446596,"byte_end":446638,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446639,"byte_end":446642,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446643,"byte_end":446678,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446679,"byte_end":446712,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446713,"byte_end":446759,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446760,"byte_end":446791,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446792,"byte_end":446851,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446852,"byte_end":446859,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6637},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/flush.rs","byte_start":447930,"byte_end":447935,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":6640}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/flush.rs","byte_start":447768,"byte_end":447833,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/flush.rs","byte_start":447851,"byte_end":447918,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6645},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/lines.rs","byte_start":448765,"byte_end":448770,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":6647},{"krate":0,"index":6648},{"krate":0,"index":6649},{"krate":0,"index":6650}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`lines`](super::AsyncBufReadExt::lines) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/lines.rs","byte_start":448620,"byte_end":448687,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/lines.rs","byte_start":448705,"byte_end":448753,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6654},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read.rs","byte_start":450087,"byte_end":450091,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":6657},{"krate":0,"index":6658}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read.rs","byte_start":449928,"byte_end":449990,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read.rs","byte_start":450008,"byte_end":450075,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6663},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_vectored.rs","byte_start":450983,"byte_end":450995,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":6666},{"krate":0,"index":6667}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_vectored.rs","byte_start":450806,"byte_end":450886,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_vectored.rs","byte_start":450904,"byte_end":450971,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6672},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_exact.rs","byte_start":451936,"byte_end":451945,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":6675},{"krate":0,"index":6676}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_exact.rs","byte_start":451765,"byte_end":451839,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_exact.rs","byte_start":451857,"byte_end":451924,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6681},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_line.rs","byte_start":453264,"byte_end":453272,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":6684},{"krate":0,"index":6685},{"krate":0,"index":6686},{"krate":0,"index":6687}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_line.rs","byte_start":453092,"byte_end":453167,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_line.rs","byte_start":453185,"byte_end":453252,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6692},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":455121,"byte_end":455130,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":6695},{"krate":0,"index":6696},{"krate":0,"index":6697}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":454948,"byte_end":455024,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":455042,"byte_end":455109,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6702},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_string.rs","byte_start":457862,"byte_end":457874,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":6705},{"krate":0,"index":6706},{"krate":0,"index":6707},{"krate":0,"index":6708}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_string.rs","byte_start":457683,"byte_end":457765,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_string.rs","byte_start":457783,"byte_end":457850,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6713},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_until.rs","byte_start":459800,"byte_end":459809,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":6716},{"krate":0,"index":6717},{"krate":0,"index":6718},{"krate":0,"index":6719}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_until.rs","byte_start":459626,"byte_end":459703,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_until.rs","byte_start":459721,"byte_end":459788,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4351},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461563,"byte_end":461569,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":4352}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461461,"byte_end":461502,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461503,"byte_end":461551,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4353},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":462126,"byte_end":462132,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461589,"byte_end":461658,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461659,"byte_end":461662,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461663,"byte_end":461743,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461744,"byte_end":461763,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461764,"byte_end":461767,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461768,"byte_end":461782,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461783,"byte_end":461786,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461787,"byte_end":461794,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461795,"byte_end":461836,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461837,"byte_end":461879,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461880,"byte_end":461883,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461884,"byte_end":461912,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461913,"byte_end":461952,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":461953,"byte_end":462003,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":462004,"byte_end":462050,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":462051,"byte_end":462110,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":462111,"byte_end":462118,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6724},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/seek.rs","byte_start":463404,"byte_end":463408,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":6727},{"krate":0,"index":6728}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/seek.rs","byte_start":463241,"byte_end":463307,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/seek.rs","byte_start":463325,"byte_end":463392,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4393},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464178,"byte_end":464182,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":4394}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464078,"byte_end":464117,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464118,"byte_end":464166,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4395},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464790,"byte_end":464794,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464203,"byte_end":464280,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464281,"byte_end":464284,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464285,"byte_end":464380,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464381,"byte_end":464438,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464439,"byte_end":464442,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464443,"byte_end":464457,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464458,"byte_end":464461,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464462,"byte_end":464473,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464474,"byte_end":464515,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464516,"byte_end":464559,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464560,"byte_end":464563,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464564,"byte_end":464601,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464602,"byte_end":464634,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464635,"byte_end":464684,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464685,"byte_end":464714,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464715,"byte_end":464774,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464775,"byte_end":464782,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6733},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/split.rs","byte_start":465941,"byte_end":465949,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":6735}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/split.rs","byte_start":465844,"byte_end":465912,"line_start":7,"line_end":7,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":6739},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/split.rs","byte_start":466078,"byte_end":466087,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":6741}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/split.rs","byte_start":465981,"byte_end":466049,"line_start":13,"line_end":13,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":6745},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468212,"byte_end":468216,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6747},{"krate":0,"index":6748}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`take`](super::AsyncReadExt::take) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468053,"byte_end":468115,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468133,"byte_end":468200,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469300,"byte_end":469305,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468547,"byte_end":468600,"line_start":28,"line_end":28,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468605,"byte_end":468651,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468656,"byte_end":468659,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468664,"byte_end":468674,"line_start":31,"line_end":31,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468679,"byte_end":468682,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468687,"byte_end":468764,"line_start":33,"line_end":33,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468769,"byte_end":468838,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468843,"byte_end":468846,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468851,"byte_end":468865,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468870,"byte_end":468873,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468878,"byte_end":468885,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468890,"byte_end":468931,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468936,"byte_end":468980,"line_start":40,"line_end":40,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468985,"byte_end":468988,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468993,"byte_end":469040,"line_start":42,"line_end":42,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469045,"byte_end":469073,"line_start":43,"line_end":43,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469078,"byte_end":469081,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469086,"byte_end":469120,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469125,"byte_end":469167,"line_start":46,"line_end":46,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469172,"byte_end":469175,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469180,"byte_end":469212,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469217,"byte_end":469276,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469281,"byte_end":469288,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470217,"byte_end":470226,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469353,"byte_end":469424,"line_start":55,"line_end":55,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469429,"byte_end":469503,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469508,"byte_end":469583,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469588,"byte_end":469612,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469617,"byte_end":469620,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469625,"byte_end":469639,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469644,"byte_end":469647,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469652,"byte_end":469659,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469664,"byte_end":469705,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469710,"byte_end":469754,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469759,"byte_end":469762,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469767,"byte_end":469814,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469819,"byte_end":469847,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469852,"byte_end":469855,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469860,"byte_end":469894,"line_start":69,"line_end":69,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469899,"byte_end":469941,"line_start":70,"line_end":70,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469946,"byte_end":469949,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469954,"byte_end":469975,"line_start":72,"line_end":72,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":469980,"byte_end":470012,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470017,"byte_end":470020,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470025,"byte_end":470048,"line_start":75,"line_end":75,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470053,"byte_end":470095,"line_start":76,"line_end":76,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470100,"byte_end":470121,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470126,"byte_end":470129,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470134,"byte_end":470193,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470198,"byte_end":470205,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470857,"byte_end":470864,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470291,"byte_end":470337,"line_start":85,"line_end":85,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470342,"byte_end":470345,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470350,"byte_end":470364,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470369,"byte_end":470372,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470377,"byte_end":470384,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470389,"byte_end":470430,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470435,"byte_end":470479,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470484,"byte_end":470487,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470492,"byte_end":470539,"line_start":93,"line_end":93,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470544,"byte_end":470572,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470577,"byte_end":470580,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470585,"byte_end":470619,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470624,"byte_end":470666,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470671,"byte_end":470674,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let cursor_ref = take.get_ref();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470679,"byte_end":470715,"line_start":99,"line_end":99,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(cursor_ref.position(), 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470720,"byte_end":470761,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470766,"byte_end":470769,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470774,"byte_end":470833,"line_start":102,"line_end":102,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470838,"byte_end":470845,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4467},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471618,"byte_end":471625,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470911,"byte_end":470965,"line_start":108,"line_end":108,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470970,"byte_end":470973,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":470978,"byte_end":471051,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471056,"byte_end":471128,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471133,"byte_end":471144,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471149,"byte_end":471152,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471157,"byte_end":471171,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471176,"byte_end":471179,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471184,"byte_end":471191,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471196,"byte_end":471237,"line_start":117,"line_end":117,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471242,"byte_end":471286,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471291,"byte_end":471294,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471299,"byte_end":471346,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471351,"byte_end":471379,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471384,"byte_end":471387,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471392,"byte_end":471426,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471431,"byte_end":471473,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471478,"byte_end":471481,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let cursor_mut = take.get_mut();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471486,"byte_end":471522,"line_start":126,"line_end":126,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471527,"byte_end":471530,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471535,"byte_end":471594,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471599,"byte_end":471606,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4468},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471936,"byte_end":471947,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471684,"byte_end":471745,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471750,"byte_end":471753,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471758,"byte_end":471831,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471836,"byte_end":471908,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":471913,"byte_end":471924,"line_start":138,"line_end":138,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4469},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472588,"byte_end":472598,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472019,"byte_end":472073,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472078,"byte_end":472081,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472086,"byte_end":472100,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472105,"byte_end":472108,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472113,"byte_end":472120,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472125,"byte_end":472166,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472171,"byte_end":472215,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472220,"byte_end":472223,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472228,"byte_end":472275,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472280,"byte_end":472308,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472313,"byte_end":472316,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472321,"byte_end":472355,"line_start":154,"line_end":154,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472360,"byte_end":472402,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472407,"byte_end":472410,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let cursor = take.into_inner();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472415,"byte_end":472450,"line_start":157,"line_end":157,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(cursor.position(), 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472455,"byte_end":472492,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472497,"byte_end":472500,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472505,"byte_end":472564,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472569,"byte_end":472576,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6757},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475152,"byte_end":475158,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":6759},{"krate":0,"index":6760}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474197,"byte_end":474244,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474245,"byte_end":474248,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474249,"byte_end":474325,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474326,"byte_end":474404,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474405,"byte_end":474481,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474482,"byte_end":474557,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474558,"byte_end":474631,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474632,"byte_end":474663,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474664,"byte_end":474667,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474668,"byte_end":474739,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474740,"byte_end":474819,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474820,"byte_end":474847,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474848,"byte_end":474851,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474852,"byte_end":474926,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":474927,"byte_end":475001,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475002,"byte_end":475081,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475082,"byte_end":475123,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475467,"byte_end":475470,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"fn (t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475243,"byte_end":475314,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475319,"byte_end":475329,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475334,"byte_end":475337,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475342,"byte_end":475416,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475421,"byte_end":475455,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4486},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475682,"byte_end":475689,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475585,"byte_end":475652,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475657,"byte_end":475670,"line_start":40,"line_end":40,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4487},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475834,"byte_end":475841,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475736,"byte_end":475804,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475809,"byte_end":475822,"line_start":46,"line_end":46,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4488},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475972,"byte_end":475982,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475900,"byte_end":475960,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4489},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476123,"byte_end":476128,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476026,"byte_end":476098,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476103,"byte_end":476111,"line_start":57,"line_end":57,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":4490},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476275,"byte_end":476278,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476183,"byte_end":476250,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476255,"byte_end":476263,"line_start":63,"line_end":63,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":4491},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476724,"byte_end":476727,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"fn <R> (&mut self, range: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476331,"byte_end":476391,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476396,"byte_end":476399,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476404,"byte_end":476416,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476421,"byte_end":476424,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476429,"byte_end":476502,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476507,"byte_end":476584,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476589,"byte_end":476592,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476597,"byte_end":476654,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":476659,"byte_end":476712,"line_start":76,"line_end":76,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6764},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write.rs","byte_start":477914,"byte_end":477919,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":6767},{"krate":0,"index":6768}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write.rs","byte_start":477752,"byte_end":477817,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write.rs","byte_start":477835,"byte_end":477902,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6773},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_vectored.rs","byte_start":478810,"byte_end":478823,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":6776},{"krate":0,"index":6777}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_vectored.rs","byte_start":478630,"byte_end":478713,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_vectored.rs","byte_start":478731,"byte_end":478798,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6782},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_all.rs","byte_start":479757,"byte_end":479765,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":6785},{"krate":0,"index":6786}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_all.rs","byte_start":479587,"byte_end":479660,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_all.rs","byte_start":479678,"byte_end":479745,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":4560},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389280,"byte_end":389292,"line_start":128,"line_end":128,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":4565},{"krate":0,"index":4567},{"krate":0,"index":4569},{"krate":0,"index":4571},{"krate":0,"index":4573},{"krate":0,"index":4574}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389198,"byte_end":389269,"line_start":127,"line_end":127,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4561},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390145,"byte_end":390150,"line_start":152,"line_end":152,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":4560},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389310,"byte_end":389375,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389380,"byte_end":389383,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389388,"byte_end":389468,"line_start":131,"line_end":131,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389473,"byte_end":389545,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389550,"byte_end":389571,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389576,"byte_end":389579,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389584,"byte_end":389598,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389603,"byte_end":389606,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389611,"byte_end":389618,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389623,"byte_end":389664,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389669,"byte_end":389713,"line_start":139,"line_end":139,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389718,"byte_end":389721,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389726,"byte_end":389770,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389775,"byte_end":389819,"line_start":142,"line_end":142,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389824,"byte_end":389827,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389832,"byte_end":389876,"line_start":144,"line_end":144,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389881,"byte_end":389913,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389918,"byte_end":389921,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389926,"byte_end":389959,"line_start":147,"line_end":147,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389964,"byte_end":390007,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390012,"byte_end":390061,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390066,"byte_end":390125,"line_start":150,"line_end":150,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390130,"byte_end":390137,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4563},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391190,"byte_end":391194,"line_start":184,"line_end":184,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> Read<'a, Self>","parent":{"krate":0,"index":4560},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390288,"byte_end":390362,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390367,"byte_end":390403,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390408,"byte_end":390411,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390416,"byte_end":390494,"line_start":163,"line_end":163,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390499,"byte_end":390526,"line_start":164,"line_end":164,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390531,"byte_end":390534,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390539,"byte_end":390553,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390558,"byte_end":390561,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390566,"byte_end":390573,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390578,"byte_end":390619,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390624,"byte_end":390668,"line_start":170,"line_end":170,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390673,"byte_end":390676,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390681,"byte_end":390728,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390733,"byte_end":390763,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390768,"byte_end":390771,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390776,"byte_end":390828,"line_start":175,"line_end":175,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390833,"byte_end":390836,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390841,"byte_end":390912,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390917,"byte_end":390981,"line_start":178,"line_end":178,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":390986,"byte_end":391031,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391036,"byte_end":391061,"line_start":180,"line_end":180,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391066,"byte_end":391106,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391111,"byte_end":391170,"line_start":182,"line_end":182,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391175,"byte_end":391182,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391561,"byte_end":391574,"line_start":195,"line_end":195,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"fn <'a> (&'a mut self, bufs: &'a mut [IoSliceMut<'a>]) -> ReadVectored<'a, Self>","parent":{"krate":0,"index":4560},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391323,"byte_end":391407,"line_start":190,"line_end":190,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391412,"byte_end":391430,"line_start":191,"line_end":191,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391435,"byte_end":391438,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391443,"byte_end":391521,"line_start":193,"line_end":193,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391526,"byte_end":391553,"line_start":194,"line_end":194,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4567},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392946,"byte_end":392956,"line_start":238,"line_end":238,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExact<'a, Self>","parent":{"krate":0,"index":4560},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391733,"byte_end":391805,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391810,"byte_end":391868,"line_start":202,"line_end":202,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391873,"byte_end":391876,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391881,"byte_end":391955,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391960,"byte_end":391963,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":391968,"byte_end":392045,"line_start":206,"line_end":206,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392050,"byte_end":392072,"line_start":207,"line_end":207,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392077,"byte_end":392080,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392085,"byte_end":392099,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392104,"byte_end":392107,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392112,"byte_end":392119,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392124,"byte_end":392165,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392170,"byte_end":392214,"line_start":213,"line_end":213,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392219,"byte_end":392222,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392227,"byte_end":392274,"line_start":215,"line_end":215,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392279,"byte_end":392309,"line_start":216,"line_end":216,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392314,"byte_end":392317,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392322,"byte_end":392364,"line_start":218,"line_end":218,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392369,"byte_end":392372,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392377,"byte_end":392414,"line_start":220,"line_end":220,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392419,"byte_end":392478,"line_start":221,"line_end":221,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392483,"byte_end":392490,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392495,"byte_end":392498,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392503,"byte_end":392543,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392548,"byte_end":392551,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392556,"byte_end":392563,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392568,"byte_end":392609,"line_start":227,"line_end":227,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392614,"byte_end":392664,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392669,"byte_end":392672,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392677,"byte_end":392724,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392729,"byte_end":392759,"line_start":231,"line_end":231,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392764,"byte_end":392767,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392772,"byte_end":392826,"line_start":233,"line_end":233,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392831,"byte_end":392834,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392839,"byte_end":392912,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392917,"byte_end":392926,"line_start":236,"line_end":236,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":392931,"byte_end":392938,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4569},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393748,"byte_end":393759,"line_start":266,"line_end":266,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEnd<'a, Self>","parent":{"krate":0,"index":4560},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393118,"byte_end":393191,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393196,"byte_end":393199,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393204,"byte_end":393262,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393267,"byte_end":393270,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393275,"byte_end":393289,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393294,"byte_end":393297,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393302,"byte_end":393309,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393314,"byte_end":393355,"line_start":254,"line_end":254,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393360,"byte_end":393404,"line_start":255,"line_end":255,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393409,"byte_end":393412,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393417,"byte_end":393464,"line_start":257,"line_end":257,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393469,"byte_end":393512,"line_start":258,"line_end":258,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393517,"byte_end":393520,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393525,"byte_end":393580,"line_start":260,"line_end":260,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393585,"byte_end":393588,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393593,"byte_end":393618,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393623,"byte_end":393664,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393669,"byte_end":393728,"line_start":264,"line_end":264,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393733,"byte_end":393740,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4571},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394564,"byte_end":394578,"line_start":294,"line_end":294,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadToString<'a, Self>","parent":{"krate":0,"index":4560},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":393924,"byte_end":393997,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394002,"byte_end":394005,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394010,"byte_end":394068,"line_start":277,"line_end":277,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394073,"byte_end":394076,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394081,"byte_end":394095,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394100,"byte_end":394103,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394108,"byte_end":394115,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394120,"byte_end":394161,"line_start":282,"line_end":282,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394166,"byte_end":394210,"line_start":283,"line_end":283,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394215,"byte_end":394218,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394223,"byte_end":394270,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394275,"byte_end":394321,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394326,"byte_end":394329,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394334,"byte_end":394392,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394397,"byte_end":394400,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394405,"byte_end":394430,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394435,"byte_end":394480,"line_start":291,"line_end":291,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394485,"byte_end":394544,"line_start":292,"line_end":292,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394549,"byte_end":394556,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4573},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395905,"byte_end":395910,"line_start":332,"line_end":332,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"fn (self) -> (ReadHalf<Self>, WriteHalf<Self>)","parent":{"krate":0,"index":4560},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394748,"byte_end":394819,"line_start":303,"line_end":303,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394824,"byte_end":394827,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394832,"byte_end":394902,"line_start":305,"line_end":305,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394907,"byte_end":394932,"line_start":306,"line_end":306,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394937,"byte_end":394940,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394945,"byte_end":394959,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394964,"byte_end":394967,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394972,"byte_end":394979,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":394984,"byte_end":395025,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395030,"byte_end":395080,"line_start":312,"line_end":312,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395085,"byte_end":395088,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395093,"byte_end":395163,"line_start":314,"line_end":314,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395168,"byte_end":395238,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395243,"byte_end":395294,"line_start":316,"line_end":316,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395299,"byte_end":395302,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395307,"byte_end":395350,"line_start":318,"line_end":318,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395355,"byte_end":395418,"line_start":319,"line_end":319,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395423,"byte_end":395470,"line_start":320,"line_end":320,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395475,"byte_end":395478,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395483,"byte_end":395488,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395493,"byte_end":395564,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395569,"byte_end":395621,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395626,"byte_end":395678,"line_start":325,"line_end":325,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395683,"byte_end":395688,"line_start":326,"line_end":326,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395693,"byte_end":395696,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395701,"byte_end":395763,"line_start":328,"line_end":328,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395768,"byte_end":395821,"line_start":329,"line_end":329,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395826,"byte_end":395885,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":395890,"byte_end":395897,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4574},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396631,"byte_end":396635,"line_start":357,"line_end":357,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":4560},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396038,"byte_end":396108,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396113,"byte_end":396144,"line_start":339,"line_end":339,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396149,"byte_end":396152,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396157,"byte_end":396171,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396176,"byte_end":396179,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396184,"byte_end":396191,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396196,"byte_end":396237,"line_start":344,"line_end":344,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396242,"byte_end":396286,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396291,"byte_end":396294,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396299,"byte_end":396346,"line_start":347,"line_end":347,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396351,"byte_end":396379,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396384,"byte_end":396387,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396392,"byte_end":396426,"line_start":350,"line_end":350,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396431,"byte_end":396473,"line_start":351,"line_end":351,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396478,"byte_end":396481,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396486,"byte_end":396507,"line_start":353,"line_end":353,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396512,"byte_end":396547,"line_start":354,"line_end":354,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396552,"byte_end":396611,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":396616,"byte_end":396623,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4577},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397365,"byte_end":397378,"line_start":380,"line_end":380,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":4578},{"krate":0,"index":4579},{"krate":0,"index":4580},{"krate":0,"index":4582},{"krate":0,"index":4584}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397282,"byte_end":397354,"line_start":379,"line_end":379,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4578},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398119,"byte_end":398124,"line_start":403,"line_end":403,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"fn (&mut self) -> Flush<'_, Self>","parent":{"krate":0,"index":4577},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397397,"byte_end":397462,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397467,"byte_end":397470,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397475,"byte_end":397489,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397494,"byte_end":397497,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397502,"byte_end":397509,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397514,"byte_end":397555,"line_start":386,"line_end":386,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397560,"byte_end":397609,"line_start":387,"line_end":387,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397614,"byte_end":397651,"line_start":388,"line_end":388,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397656,"byte_end":397659,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397664,"byte_end":397698,"line_start":390,"line_end":390,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397703,"byte_end":397706,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397711,"byte_end":397716,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397721,"byte_end":397767,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397772,"byte_end":397839,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397844,"byte_end":397887,"line_start":395,"line_end":395,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397892,"byte_end":397935,"line_start":396,"line_end":396,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397940,"byte_end":397972,"line_start":397,"line_end":397,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397977,"byte_end":397982,"line_start":398,"line_end":398,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397987,"byte_end":397990,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397995,"byte_end":398035,"line_start":400,"line_end":400,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398040,"byte_end":398099,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398104,"byte_end":398111,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4579},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398297,"byte_end":398302,"line_start":410,"line_end":410,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"fn (&mut self) -> Close<'_, Self>","parent":{"krate":0,"index":4577},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398224,"byte_end":398289,"line_start":409,"line_end":409,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398608,"byte_end":398613,"line_start":420,"line_end":420,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> Write<'a, Self>","parent":{"krate":0,"index":4577},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398402,"byte_end":398473,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398478,"byte_end":398481,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398486,"byte_end":398568,"line_start":418,"line_end":418,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398573,"byte_end":398600,"line_start":419,"line_end":419,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4582},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398984,"byte_end":398998,"line_start":431,"line_end":431,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"fn <'a> (&'a mut self, bufs: &'a [IoSlice<'a>]) -> WriteVectored<'a, Self>","parent":{"krate":0,"index":4577},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398740,"byte_end":398826,"line_start":426,"line_end":426,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398831,"byte_end":398849,"line_start":427,"line_end":427,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398854,"byte_end":398857,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398862,"byte_end":398944,"line_start":429,"line_end":429,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":398949,"byte_end":398976,"line_start":430,"line_end":430,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4584},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399805,"byte_end":399814,"line_start":457,"line_end":457,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> WriteAll<'a, Self>","parent":{"krate":0,"index":4577},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399152,"byte_end":399184,"line_start":437,"line_end":437,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399189,"byte_end":399192,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399197,"byte_end":399278,"line_start":439,"line_end":439,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399283,"byte_end":399305,"line_start":440,"line_end":440,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399310,"byte_end":399313,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399318,"byte_end":399396,"line_start":442,"line_end":442,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399401,"byte_end":399404,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399409,"byte_end":399423,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399428,"byte_end":399431,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399436,"byte_end":399443,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399448,"byte_end":399489,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399494,"byte_end":399539,"line_start":448,"line_end":448,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399544,"byte_end":399547,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399552,"byte_end":399599,"line_start":450,"line_end":450,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399604,"byte_end":399607,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399612,"byte_end":399655,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399660,"byte_end":399663,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399668,"byte_end":399721,"line_start":454,"line_end":454,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399726,"byte_end":399785,"line_start":455,"line_end":455,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":399790,"byte_end":399797,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4588},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401460,"byte_end":401472,"line_start":511,"line_end":511,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":4589}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401378,"byte_end":401449,"line_start":510,"line_end":510,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4589},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401742,"byte_end":401746,"line_start":517,"line_end":517,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> Seek<'_, Self>","parent":{"krate":0,"index":4588},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401490,"byte_end":401559,"line_start":512,"line_end":512,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401564,"byte_end":401617,"line_start":513,"line_end":513,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401622,"byte_end":401625,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401630,"byte_end":401707,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401712,"byte_end":401734,"line_start":516,"line_end":516,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":4592},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401998,"byte_end":402013,"line_start":527,"line_end":527,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":4593},{"krate":0,"index":4595},{"krate":0,"index":4597}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401913,"byte_end":401987,"line_start":526,"line_end":526,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4593},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403617,"byte_end":403627,"line_start":569,"line_end":569,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntil<'a, Self>","parent":{"krate":0,"index":4592},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402034,"byte_end":402109,"line_start":528,"line_end":528,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402114,"byte_end":402181,"line_start":529,"line_end":529,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402186,"byte_end":402283,"line_start":530,"line_end":530,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402288,"byte_end":402291,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402296,"byte_end":402366,"line_start":532,"line_end":532,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402371,"byte_end":402445,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402450,"byte_end":402505,"line_start":534,"line_end":534,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402510,"byte_end":402513,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402518,"byte_end":402596,"line_start":536,"line_end":536,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402601,"byte_end":402628,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402633,"byte_end":402636,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402641,"byte_end":402718,"line_start":539,"line_end":539,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402723,"byte_end":402745,"line_start":540,"line_end":540,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402750,"byte_end":402753,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402758,"byte_end":402772,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402777,"byte_end":402780,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402785,"byte_end":402792,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402797,"byte_end":402838,"line_start":545,"line_end":545,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402843,"byte_end":402890,"line_start":546,"line_end":546,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402895,"byte_end":402898,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402903,"byte_end":402952,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402957,"byte_end":402982,"line_start":549,"line_end":549,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402987,"byte_end":402990,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402995,"byte_end":403018,"line_start":551,"line_end":551,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403023,"byte_end":403084,"line_start":552,"line_end":552,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403089,"byte_end":403118,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403123,"byte_end":403154,"line_start":554,"line_end":554,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403159,"byte_end":403175,"line_start":555,"line_end":555,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403180,"byte_end":403183,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403188,"byte_end":403211,"line_start":557,"line_end":557,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403216,"byte_end":403277,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403282,"byte_end":403311,"line_start":559,"line_end":559,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403316,"byte_end":403346,"line_start":560,"line_end":560,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403351,"byte_end":403367,"line_start":561,"line_end":561,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403372,"byte_end":403375,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403380,"byte_end":403403,"line_start":563,"line_end":563,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403408,"byte_end":403469,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403474,"byte_end":403503,"line_start":565,"line_end":565,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403508,"byte_end":403533,"line_start":566,"line_end":566,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403538,"byte_end":403597,"line_start":567,"line_end":567,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403602,"byte_end":403609,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4595},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405798,"byte_end":405807,"line_start":630,"line_end":630,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLine<'a, Self>","parent":{"krate":0,"index":4592},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403816,"byte_end":403891,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403896,"byte_end":403967,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":403972,"byte_end":404067,"line_start":581,"line_end":581,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404072,"byte_end":404075,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404080,"byte_end":404150,"line_start":583,"line_end":583,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404155,"byte_end":404230,"line_start":584,"line_end":584,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404235,"byte_end":404305,"line_start":585,"line_end":585,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404310,"byte_end":404320,"line_start":586,"line_end":586,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404325,"byte_end":404328,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404333,"byte_end":404411,"line_start":588,"line_end":588,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404416,"byte_end":404443,"line_start":589,"line_end":589,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404448,"byte_end":404451,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404456,"byte_end":404533,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404538,"byte_end":404560,"line_start":592,"line_end":592,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404565,"byte_end":404568,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404573,"byte_end":404585,"line_start":594,"line_end":594,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404590,"byte_end":404593,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404598,"byte_end":404671,"line_start":596,"line_end":596,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404676,"byte_end":404749,"line_start":597,"line_end":597,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404754,"byte_end":404828,"line_start":598,"line_end":598,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404833,"byte_end":404889,"line_start":599,"line_end":599,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404894,"byte_end":404897,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404902,"byte_end":404949,"line_start":601,"line_end":601,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404954,"byte_end":404957,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404962,"byte_end":404976,"line_start":603,"line_end":603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404981,"byte_end":404984,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":404989,"byte_end":404996,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405001,"byte_end":405042,"line_start":606,"line_end":606,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405047,"byte_end":405094,"line_start":607,"line_end":607,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405099,"byte_end":405102,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405107,"byte_end":405153,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405158,"byte_end":405190,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405195,"byte_end":405198,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405203,"byte_end":405226,"line_start":612,"line_end":612,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405231,"byte_end":405285,"line_start":613,"line_end":613,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405290,"byte_end":405319,"line_start":614,"line_end":614,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405324,"byte_end":405353,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405358,"byte_end":405374,"line_start":616,"line_end":616,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405379,"byte_end":405382,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405387,"byte_end":405410,"line_start":618,"line_end":618,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405415,"byte_end":405469,"line_start":619,"line_end":619,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405474,"byte_end":405503,"line_start":620,"line_end":620,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405508,"byte_end":405535,"line_start":621,"line_end":621,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405540,"byte_end":405556,"line_start":622,"line_end":622,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405561,"byte_end":405564,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405569,"byte_end":405592,"line_start":624,"line_end":624,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405597,"byte_end":405651,"line_start":625,"line_end":625,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405656,"byte_end":405685,"line_start":626,"line_end":626,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405690,"byte_end":405714,"line_start":627,"line_end":627,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405719,"byte_end":405778,"line_start":628,"line_end":628,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405783,"byte_end":405790,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4597},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":407292,"byte_end":407297,"line_start":668,"line_end":668,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":4592},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":405946,"byte_end":405997,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406002,"byte_end":406089,"line_start":637,"line_end":637,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406094,"byte_end":406097,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406102,"byte_end":406168,"line_start":639,"line_end":639,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406173,"byte_end":406255,"line_start":640,"line_end":640,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406260,"byte_end":406320,"line_start":641,"line_end":641,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406325,"byte_end":406328,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406333,"byte_end":406368,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406373,"byte_end":406395,"line_start":644,"line_end":644,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406400,"byte_end":406403,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406408,"byte_end":406420,"line_start":646,"line_end":646,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406425,"byte_end":406428,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406433,"byte_end":406524,"line_start":648,"line_end":648,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406529,"byte_end":406532,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406537,"byte_end":406599,"line_start":650,"line_end":650,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406604,"byte_end":406607,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406612,"byte_end":406626,"line_start":652,"line_end":652,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406631,"byte_end":406634,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406639,"byte_end":406646,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406651,"byte_end":406692,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406697,"byte_end":406744,"line_start":656,"line_end":656,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406749,"byte_end":406784,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406789,"byte_end":406792,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406797,"byte_end":406852,"line_start":659,"line_end":659,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406857,"byte_end":406860,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406865,"byte_end":406927,"line_start":661,"line_end":661,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":406932,"byte_end":407003,"line_start":662,"line_end":662,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":407008,"byte_end":407079,"line_start":663,"line_end":663,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":407084,"byte_end":407155,"line_start":664,"line_end":664,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":407160,"byte_end":407208,"line_start":665,"line_end":665,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":407213,"byte_end":407272,"line_start":666,"line_end":666,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":407277,"byte_end":407284,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6791},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6940},{"krate":0,"index":6945},{"krate":0,"index":6984}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3799,"byte_end":3824,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"! Futures-powered synchronization primitives.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mod.rs","byte_start":8352824,"byte_end":8352871,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mod.rs","byte_start":8352872,"byte_end":8352875,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mod.rs","byte_start":8352876,"byte_end":8352951,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mod.rs","byte_start":8352952,"byte_end":8353009,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6813},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8353838,"byte_end":8353843,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":6815},{"krate":0,"index":6816},{"krate":0,"index":6817}],"decl_id":null,"docs":" A futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8353800,"byte_end":8353826,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":6840},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355172,"byte_end":8355175,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355122,"byte_end":8355160,"line_start":66,"line_end":66,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6841},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355607,"byte_end":8355617,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355361,"byte_end":8355416,"line_start":75,"line_end":75,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355421,"byte_end":8355424,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355429,"byte_end":8355443,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355448,"byte_end":8355451,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355456,"byte_end":8355463,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355468,"byte_end":8355497,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355502,"byte_end":8355505,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355510,"byte_end":8355540,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355545,"byte_end":8355583,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355588,"byte_end":8355595,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6844},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355831,"byte_end":8355839,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Option<MutexGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355703,"byte_end":8355747,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355752,"byte_end":8355755,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355760,"byte_end":8355819,"line_start":93,"line_end":93,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6845},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356260,"byte_end":8356264,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexLockFuture<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356095,"byte_end":8356131,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356136,"byte_end":8356139,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356144,"byte_end":8356217,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356222,"byte_end":8356248,"line_start":106,"line_end":106,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":6846},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356925,"byte_end":8356932,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356415,"byte_end":8356470,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356475,"byte_end":8356478,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356483,"byte_end":8356558,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356563,"byte_end":8356637,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356642,"byte_end":8356645,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356650,"byte_end":8356664,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356669,"byte_end":8356672,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356677,"byte_end":8356684,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356689,"byte_end":8356730,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356735,"byte_end":8356764,"line_start":123,"line_end":123,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356769,"byte_end":8356772,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356777,"byte_end":8356811,"line_start":125,"line_end":125,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356816,"byte_end":8356842,"line_start":126,"line_end":126,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356847,"byte_end":8356887,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356892,"byte_end":8356901,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8356906,"byte_end":8356913,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6850},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8358655,"byte_end":8358670,"line_start":175,"line_end":175,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":6853},{"krate":0,"index":6854}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8358562,"byte_end":8358643,"line_start":174,"line_end":174,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":6869},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361284,"byte_end":8361294,"line_start":254,"line_end":254,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":6872}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361120,"byte_end":8361184,"line_start":251,"line_end":251,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361185,"byte_end":8361258,"line_start":252,"line_end":252,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361259,"byte_end":8361272,"line_start":253,"line_end":253,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6876},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361863,"byte_end":8361866,"line_start":275,"line_end":275,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"fn <U, F> (this: Self, f: F) -> MappedMutexGuard<'a, T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361384,"byte_end":8361444,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361449,"byte_end":8361452,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361457,"byte_end":8361470,"line_start":261,"line_end":261,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361475,"byte_end":8361478,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361483,"byte_end":8361490,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361495,"byte_end":8361536,"line_start":264,"line_end":264,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361541,"byte_end":8361584,"line_start":265,"line_end":265,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361589,"byte_end":8361592,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361597,"byte_end":8361650,"line_start":267,"line_end":267,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361655,"byte_end":8361660,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361665,"byte_end":8361754,"line_start":269,"line_end":269,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361759,"byte_end":8361801,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361806,"byte_end":8361811,"line_start":271,"line_end":271,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361816,"byte_end":8361825,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361830,"byte_end":8361837,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361842,"byte_end":8361851,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6892},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363175,"byte_end":8363191,"line_start":318,"line_end":318,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":6896},{"krate":0,"index":6897}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8362991,"byte_end":8363079,"line_start":316,"line_end":316,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363080,"byte_end":8363163,"line_start":317,"line_end":317,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":6902},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363920,"byte_end":8363923,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"fn <V, F> (this: Self, f: F) -> MappedMutexGuard<'a, T, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363331,"byte_end":8363391,"line_start":324,"line_end":324,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363396,"byte_end":8363399,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363404,"byte_end":8363417,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363422,"byte_end":8363425,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363430,"byte_end":8363437,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363442,"byte_end":8363483,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363488,"byte_end":8363549,"line_start":330,"line_end":330,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363554,"byte_end":8363557,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363562,"byte_end":8363615,"line_start":332,"line_end":332,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363620,"byte_end":8363625,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363630,"byte_end":8363719,"line_start":334,"line_end":334,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363724,"byte_end":8363814,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363819,"byte_end":8363858,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363863,"byte_end":8363868,"line_start":337,"line_end":337,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363873,"byte_end":8363882,"line_start":338,"line_end":338,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363887,"byte_end":8363894,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363899,"byte_end":8363908,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24876,"byte_end":24883,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4605},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25160,"byte_end":25167,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25441,"byte_end":25448,"line_start":40,"line_end":40,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25601,"byte_end":25608,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26268,"byte_end":26281,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4608},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26510,"byte_end":26523,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26955,"byte_end":26960,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27659,"byte_end":27672,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27954,"byte_end":27967,"line_start":69,"line_end":69,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29033,"byte_end":29037,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4630},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30920,"byte_end":30924,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":31038,"byte_end":31042,"line_start":78,"line_end":78,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31819,"byte_end":31829,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32041,"byte_end":32051,"line_start":25,"line_end":25,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32376,"byte_end":32386,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32855,"byte_end":32858,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4651},{"krate":0,"index":4654},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33098,"byte_end":33101,"line_start":24,"line_end":24,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33146,"byte_end":33149,"line_start":26,"line_end":26,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33309,"byte_end":33312,"line_start":33,"line_end":33,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34144,"byte_end":34148,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4666},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34473,"byte_end":34477,"line_start":28,"line_end":28,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34687,"byte_end":34691,"line_start":36,"line_end":36,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35409,"byte_end":35416,"line_start":14,"line_end":14,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4678},{"krate":0,"index":4681},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35679,"byte_end":35686,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35728,"byte_end":35735,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35904,"byte_end":35911,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36637,"byte_end":36646,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4689},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36808,"byte_end":36817,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36866,"byte_end":36875,"line_start":23,"line_end":23,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36978,"byte_end":36987,"line_start":27,"line_end":27,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37578,"byte_end":37588,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4698},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37752,"byte_end":37762,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37811,"byte_end":37821,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37924,"byte_end":37934,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/catch_unwind.rs","byte_start":38575,"byte_end":38586,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4707},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/catch_unwind.rs","byte_start":38777,"byte_end":38788,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":39935,"byte_end":39941,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":39984,"byte_end":39990,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":40248,"byte_end":40253,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":40480,"byte_end":40485,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":40581,"byte_end":40586,"line_start":59,"line_end":59,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":40854,"byte_end":40860,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":41326,"byte_end":41332,"line_start":90,"line_end":90,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":43873,"byte_end":43878,"line_start":161,"line_end":161,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":44270,"byte_end":44276,"line_start":176,"line_end":176,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":44428,"byte_end":44434,"line_start":186,"line_end":186,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":45692,"byte_end":45697,"line_start":227,"line_end":227,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":47742,"byte_end":47748,"line_start":293,"line_end":293,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":47942,"byte_end":47948,"line_start":305,"line_end":305,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":48376,"byte_end":48384,"line_start":322,"line_end":322,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":49125,"byte_end":49130,"line_start":13,"line_end":13,"column_start":48,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":49176,"byte_end":49181,"line_start":15,"line_end":15,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":49342,"byte_end":49347,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8823,"byte_end":8824,"line_start":81,"line_end":81,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":68836,"byte_end":68843,"line_start":14,"line_end":14,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4738},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":69194,"byte_end":69201,"line_start":28,"line_end":28,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":69450,"byte_end":69457,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70408,"byte_end":70415,"line_start":15,"line_end":15,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70441,"byte_end":70448,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4750},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70669,"byte_end":70676,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70853,"byte_end":70860,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":71592,"byte_end":71601,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":71627,"byte_end":71636,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4762},{"krate":0,"index":4765},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":71893,"byte_end":71902,"line_start":29,"line_end":29,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":72085,"byte_end":72094,"line_start":39,"line_end":39,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":72931,"byte_end":72941,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":72967,"byte_end":72977,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4776},{"krate":0,"index":4779},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":73237,"byte_end":73247,"line_start":29,"line_end":29,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":73433,"byte_end":73443,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":74225,"byte_end":74235,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4787},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":74437,"byte_end":74447,"line_start":22,"line_end":22,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":74558,"byte_end":74568,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":75189,"byte_end":75195,"line_start":14,"line_end":14,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4799},{"krate":0,"index":4802},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":75444,"byte_end":75450,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":75495,"byte_end":75501,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":75663,"byte_end":75669,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":76586,"byte_end":76591,"line_start":14,"line_end":14,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4816},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":76837,"byte_end":76842,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":76887,"byte_end":76892,"line_start":26,"line_end":26,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":77063,"byte_end":77068,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":78028,"byte_end":78039,"line_start":15,"line_end":15,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4830},{"krate":0,"index":4833},{"krate":0,"index":4835},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":78341,"byte_end":78352,"line_start":26,"line_end":26,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":78403,"byte_end":78414,"line_start":28,"line_end":28,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":78649,"byte_end":78660,"line_start":38,"line_end":38,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":79783,"byte_end":79789,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4847},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":80138,"byte_end":80144,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":80390,"byte_end":80396,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":81462,"byte_end":81478,"line_start":20,"line_end":20,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4850},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":81763,"byte_end":81779,"line_start":34,"line_end":34,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":82055,"byte_end":82071,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":82266,"byte_end":82282,"line_start":56,"line_end":56,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":83749,"byte_end":83761,"line_start":15,"line_end":15,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4862},{"krate":0,"index":4865},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":84028,"byte_end":84040,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":84082,"byte_end":84094,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":84271,"byte_end":84283,"line_start":36,"line_end":36,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":85222,"byte_end":85239,"line_start":18,"line_end":18,"column_start":21,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":85329,"byte_end":85346,"line_start":25,"line_end":25,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":85607,"byte_end":85624,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4867},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":86059,"byte_end":86064,"line_start":60,"line_end":60,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":86797,"byte_end":86802,"line_start":75,"line_end":75,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":87659,"byte_end":87676,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":88013,"byte_end":88030,"line_start":114,"line_end":114,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":90667,"byte_end":90675,"line_start":13,"line_end":13,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":90851,"byte_end":90859,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52776,"byte_end":52779,"line_start":77,"line_end":77,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":93879,"byte_end":93883,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94456,"byte_end":94460,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94592,"byte_end":94596,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95143,"byte_end":95150,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95701,"byte_end":95708,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95853,"byte_end":95860,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95887,"byte_end":95894,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96642,"byte_end":96651,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97230,"byte_end":97239,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":98445,"byte_end":98454,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":98670,"byte_end":98679,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99989,"byte_end":100001,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4937}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":100076,"byte_end":100088,"line_start":35,"line_end":35,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":100418,"byte_end":100430,"line_start":49,"line_end":49,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":100618,"byte_end":100630,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101043,"byte_end":101049,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101719,"byte_end":101725,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101867,"byte_end":101873,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102350,"byte_end":102355,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102534,"byte_end":102539,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102571,"byte_end":102576,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102673,"byte_end":102678,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":109420,"byte_end":109429,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":110146,"byte_end":110155,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":110818,"byte_end":110825,"line_start":68,"line_end":68,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112491,"byte_end":112498,"line_start":124,"line_end":124,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":113394,"byte_end":113401,"line_start":155,"line_end":155,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":113871,"byte_end":113877,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":115240,"byte_end":115246,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":115949,"byte_end":115955,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116492,"byte_end":116501,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":117481,"byte_end":117490,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":118196,"byte_end":118205,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":126554,"byte_end":126563,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":127279,"byte_end":127288,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128026,"byte_end":128036,"line_start":72,"line_end":72,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129796,"byte_end":129806,"line_start":134,"line_end":134,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":131210,"byte_end":131220,"line_start":175,"line_end":175,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":131702,"byte_end":131711,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":133417,"byte_end":133426,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":134779,"byte_end":134787,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135757,"byte_end":135765,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":137209,"byte_end":137217,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137794,"byte_end":137800,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138185,"byte_end":138191,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138572,"byte_end":138578,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138819,"byte_end":138825,"line_start":52,"line_end":52,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":139254,"byte_end":139260,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":139536,"byte_end":139542,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":139984,"byte_end":139990,"line_start":99,"line_end":99,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":142112,"byte_end":142118,"line_start":169,"line_end":169,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1406},{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":143375,"byte_end":143381,"line_start":209,"line_end":209,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":145092,"byte_end":145098,"line_start":259,"line_end":259,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":145629,"byte_end":145635,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277057,"byte_end":8277066,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277086,"byte_end":8277095,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7049},{"krate":0,"index":5344}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278431,"byte_end":8278442,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5346}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8280318,"byte_end":8280325,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5350}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8280508,"byte_end":8280515,"line_start":135,"line_end":135,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8280541,"byte_end":8280550,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5354},{"krate":0,"index":5355}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8281516,"byte_end":8281527,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5357}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":190997,"byte_end":191002,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5411},{"krate":0,"index":5414},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":191345,"byte_end":191350,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":191555,"byte_end":191560,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":193091,"byte_end":193098,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":193139,"byte_end":193146,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5426},{"krate":0,"index":5429},{"krate":0,"index":1499},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":193532,"byte_end":193539,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":193715,"byte_end":193722,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":194607,"byte_end":194613,"line_start":15,"line_end":15,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":194631,"byte_end":194637,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5438},{"krate":0,"index":5441},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":194992,"byte_end":194998,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":195795,"byte_end":195801,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196472,"byte_end":196481,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196507,"byte_end":196516,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":5453},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197909,"byte_end":197918,"line_start":62,"line_end":62,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":198036,"byte_end":198045,"line_start":68,"line_end":68,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":199361,"byte_end":199367,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":199462,"byte_end":199468,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":199860,"byte_end":199866,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5455},{"krate":0,"index":5458},{"krate":0,"index":5460},{"krate":0,"index":5463},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201495,"byte_end":201501,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201769,"byte_end":201775,"line_start":104,"line_end":104,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":203974,"byte_end":203983,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204069,"byte_end":204078,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204375,"byte_end":204384,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5465},{"krate":0,"index":5468},{"krate":0,"index":5470},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205879,"byte_end":205888,"line_start":83,"line_end":83,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":206159,"byte_end":206168,"line_start":93,"line_end":93,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208123,"byte_end":208130,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208200,"byte_end":208207,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5480},{"krate":0,"index":5483}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208324,"byte_end":208331,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209632,"byte_end":209639,"line_start":76,"line_end":76,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209821,"byte_end":209828,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":211252,"byte_end":211256,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":211311,"byte_end":211315,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":211671,"byte_end":211675,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5486},{"krate":0,"index":5489},{"krate":0,"index":5491},{"krate":0,"index":5493},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":212150,"byte_end":212154,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":212401,"byte_end":212405,"line_start":64,"line_end":64,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":213862,"byte_end":213869,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":213955,"byte_end":213962,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":214255,"byte_end":214262,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5496},{"krate":0,"index":5499},{"krate":0,"index":5501},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":214658,"byte_end":214665,"line_start":53,"line_end":53,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":214916,"byte_end":214923,"line_start":63,"line_end":63,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216089,"byte_end":216093,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216111,"byte_end":216115,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5511},{"krate":0,"index":5514},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217774,"byte_end":217778,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217876,"byte_end":217880,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219100,"byte_end":219112,"line_start":15,"line_end":15,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219146,"byte_end":219158,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5522},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221691,"byte_end":221703,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221823,"byte_end":221835,"line_start":83,"line_end":83,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1856},{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":222665,"byte_end":222672,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":222711,"byte_end":222718,"line_start":18,"line_end":18,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":222937,"byte_end":222944,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5525},{"krate":0,"index":5528},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":224331,"byte_end":224338,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":224657,"byte_end":224664,"line_start":89,"line_end":89,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":225777,"byte_end":225780,"line_start":16,"line_end":16,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":225819,"byte_end":225822,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226040,"byte_end":226043,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5530},{"krate":0,"index":5533},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":227429,"byte_end":227432,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":227613,"byte_end":227616,"line_start":82,"line_end":82,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":228731,"byte_end":228735,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":228786,"byte_end":228790,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":228941,"byte_end":228945,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":229084,"byte_end":229088,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":229737,"byte_end":229751,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":229912,"byte_end":229926,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":230070,"byte_end":230084,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231297,"byte_end":231305,"line_start":24,"line_end":24,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231331,"byte_end":231339,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5558},{"krate":0,"index":5561},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":234560,"byte_end":234568,"line_start":114,"line_end":114,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":234710,"byte_end":234718,"line_start":120,"line_end":120,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":235855,"byte_end":235859,"line_start":159,"line_end":159,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":235896,"byte_end":235900,"line_start":161,"line_end":161,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":236171,"byte_end":236175,"line_start":173,"line_end":173,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":236286,"byte_end":236290,"line_start":179,"line_end":179,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237273,"byte_end":237277,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237303,"byte_end":237307,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5570},{"krate":0,"index":5573},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238699,"byte_end":238703,"line_start":62,"line_end":62,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238821,"byte_end":238825,"line_start":68,"line_end":68,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":240430,"byte_end":240439,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":240488,"byte_end":240497,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2122}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":240949,"byte_end":240958,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5575},{"krate":0,"index":5578},{"krate":0,"index":5580},{"krate":0,"index":5583},{"krate":0,"index":5585},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242682,"byte_end":242691,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242951,"byte_end":242960,"line_start":102,"line_end":102,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245255,"byte_end":245259,"line_start":17,"line_end":17,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245285,"byte_end":245289,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5594},{"krate":0,"index":5597},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246663,"byte_end":246667,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":247650,"byte_end":247654,"line_start":102,"line_end":102,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":248602,"byte_end":248611,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":248660,"byte_end":248669,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2205}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":249125,"byte_end":249134,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5599},{"krate":0,"index":5602},{"krate":0,"index":5604},{"krate":0,"index":5607},{"krate":0,"index":5609}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":249370,"byte_end":249379,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250892,"byte_end":250901,"line_start":94,"line_end":94,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":252472,"byte_end":252481,"line_start":146,"line_end":146,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253463,"byte_end":253467,"line_start":18,"line_end":18,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253516,"byte_end":253520,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253810,"byte_end":253814,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5611},{"krate":0,"index":5614},{"krate":0,"index":5617}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253950,"byte_end":253954,"line_start":39,"line_end":39,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":255354,"byte_end":255358,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2278}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":255596,"byte_end":255600,"line_start":94,"line_end":94,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":257545,"byte_end":257548,"line_start":19,"line_end":19,"column_start":26,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":257678,"byte_end":257681,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5638},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":259613,"byte_end":259616,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":259807,"byte_end":259810,"line_start":86,"line_end":86,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":262501,"byte_end":262507,"line_start":20,"line_end":20,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":262533,"byte_end":262539,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5648},{"krate":0,"index":5650},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":264270,"byte_end":264276,"line_start":74,"line_end":74,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":265898,"byte_end":265904,"line_start":121,"line_end":121,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":266829,"byte_end":266833,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":266888,"byte_end":266892,"line_start":25,"line_end":25,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2393}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":267378,"byte_end":267382,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5653},{"krate":0,"index":5656},{"krate":0,"index":5658},{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":267674,"byte_end":267678,"line_start":53,"line_end":53,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":269236,"byte_end":269240,"line_start":103,"line_end":103,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":270458,"byte_end":270462,"line_start":145,"line_end":145,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8282796,"byte_end":8282811,"line_start":23,"line_end":23,"column_start":20,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8282874,"byte_end":8282889,"line_start":28,"line_end":28,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5687}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8283221,"byte_end":8283236,"line_start":41,"line_end":41,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7046},{"krate":0,"index":7044},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5694}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284888,"byte_end":8284903,"line_start":94,"line_end":94,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5699}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8286367,"byte_end":8286382,"line_start":140,"line_end":140,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5702}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8287400,"byte_end":8287408,"line_start":23,"line_end":23,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8287493,"byte_end":8287501,"line_start":29,"line_end":29,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5728}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8287848,"byte_end":8287856,"line_start":43,"line_end":43,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7041},{"krate":0,"index":7039},{"krate":0,"index":5731},{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5735}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8289430,"byte_end":8289438,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8291727,"byte_end":8291744,"line_start":20,"line_end":20,"column_start":28,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8291828,"byte_end":8291845,"line_start":25,"line_end":25,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5775}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8292191,"byte_end":8292208,"line_start":39,"line_end":39,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7036},{"krate":0,"index":7034},{"krate":0,"index":7032},{"krate":0,"index":7030},{"krate":0,"index":5780}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8292853,"byte_end":8292870,"line_start":60,"line_end":60,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5785}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8293112,"byte_end":8293129,"line_start":70,"line_end":70,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5790},{"krate":0,"index":5791}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/catch_unwind.rs","byte_start":271437,"byte_end":271448,"line_start":16,"line_end":16,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5801},{"krate":0,"index":5804},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/catch_unwind.rs","byte_start":271689,"byte_end":271700,"line_start":25,"line_end":25,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/catch_unwind.rs","byte_start":272584,"byte_end":272595,"line_start":58,"line_end":58,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154049,"byte_end":154050,"line_start":161,"line_end":161,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":302783,"byte_end":302790,"line_start":18,"line_end":18,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":302839,"byte_end":302846,"line_start":20,"line_end":20,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303139,"byte_end":303146,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5806},{"krate":0,"index":5809},{"krate":0,"index":5812}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303282,"byte_end":303289,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304673,"byte_end":304680,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":305860,"byte_end":305867,"line_start":118,"line_end":118,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":306810,"byte_end":306817,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":306841,"byte_end":306848,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5823},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":308157,"byte_end":308164,"line_start":59,"line_end":59,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2652}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":308343,"byte_end":308350,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309464,"byte_end":309473,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309512,"byte_end":309521,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2687}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309742,"byte_end":309751,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5826},{"krate":0,"index":5829}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309836,"byte_end":309845,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":311153,"byte_end":311162,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2702}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":311340,"byte_end":311349,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312531,"byte_end":312541,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312580,"byte_end":312590,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312812,"byte_end":312822,"line_start":30,"line_end":30,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5831},{"krate":0,"index":5834}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312907,"byte_end":312917,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":314228,"byte_end":314238,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":314419,"byte_end":314429,"line_start":87,"line_end":87,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2762}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315533,"byte_end":315543,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5842},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316866,"byte_end":316876,"line_start":56,"line_end":56,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316997,"byte_end":317007,"line_start":62,"line_end":62,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":317962,"byte_end":317967,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318006,"byte_end":318011,"line_start":18,"line_end":18,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2814}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318228,"byte_end":318233,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5845},{"krate":0,"index":5848},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319587,"byte_end":319592,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319777,"byte_end":319782,"line_start":81,"line_end":81,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":320902,"byte_end":320908,"line_start":16,"line_end":16,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":320947,"byte_end":320953,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2863}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321171,"byte_end":321177,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5850},{"krate":0,"index":5853},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322533,"byte_end":322539,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322727,"byte_end":322733,"line_start":81,"line_end":81,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2886}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":323937,"byte_end":323943,"line_start":18,"line_end":18,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":323992,"byte_end":323998,"line_start":20,"line_end":20,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324290,"byte_end":324296,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5855},{"krate":0,"index":5858},{"krate":0,"index":5861}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324432,"byte_end":324438,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325819,"byte_end":325825,"line_start":81,"line_end":81,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":327070,"byte_end":327076,"line_start":119,"line_end":119,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2942}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":327992,"byte_end":327999,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":328053,"byte_end":328060,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":328226,"byte_end":328233,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2964}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":328375,"byte_end":328382,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":329104,"byte_end":329114,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":329163,"byte_end":329173,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":329469,"byte_end":329479,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5871},{"krate":0,"index":5874},{"krate":0,"index":5876},{"krate":0,"index":3003}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":329895,"byte_end":329905,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3008},{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":331251,"byte_end":331260,"line_start":22,"line_end":22,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":331354,"byte_end":331363,"line_start":26,"line_end":26,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3041}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":331759,"byte_end":331768,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5879},{"krate":0,"index":5882},{"krate":0,"index":5884},{"krate":0,"index":5887},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":333322,"byte_end":333331,"line_start":91,"line_end":91,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3055}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":333600,"byte_end":333609,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":335823,"byte_end":335835,"line_start":19,"line_end":19,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":335917,"byte_end":335929,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336229,"byte_end":336241,"line_start":36,"line_end":36,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5889},{"krate":0,"index":5892},{"krate":0,"index":5894},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337640,"byte_end":337652,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337942,"byte_end":337954,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":339952,"byte_end":339962,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340033,"byte_end":340043,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5904},{"krate":0,"index":5907}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340161,"byte_end":340171,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341527,"byte_end":341537,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341783,"byte_end":341793,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":343437,"byte_end":343447,"line_start":16,"line_end":16,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5922},{"krate":0,"index":3166},{"krate":0,"index":3167}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":343822,"byte_end":343832,"line_start":32,"line_end":32,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":343872,"byte_end":343882,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":344070,"byte_end":344080,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3178},{"krate":0,"index":3179}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":345016,"byte_end":345025,"line_start":15,"line_end":15,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":345043,"byte_end":345052,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5931},{"krate":0,"index":5934},{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":345396,"byte_end":345405,"line_start":33,"line_end":33,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":346693,"byte_end":346700,"line_start":17,"line_end":17,"column_start":45,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":346755,"byte_end":346762,"line_start":19,"line_end":19,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":347121,"byte_end":347128,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5936},{"krate":0,"index":5939},{"krate":0,"index":5941},{"krate":0,"index":5943},{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":347628,"byte_end":347635,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3246}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":347901,"byte_end":347908,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3252},{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":352149,"byte_end":352158,"line_start":77,"line_end":77,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":352205,"byte_end":352214,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3286}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":352498,"byte_end":352507,"line_start":92,"line_end":92,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5946},{"krate":0,"index":5948},{"krate":0,"index":5950}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":352663,"byte_end":352672,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":354420,"byte_end":354432,"line_start":21,"line_end":21,"column_start":54,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":354481,"byte_end":354493,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":354949,"byte_end":354961,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5953}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":355053,"byte_end":355065,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5956},{"krate":0,"index":5958},{"krate":0,"index":5961},{"krate":0,"index":5963},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356775,"byte_end":356787,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":358419,"byte_end":358431,"line_start":146,"line_end":146,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8295845,"byte_end":8295863,"line_start":23,"line_end":23,"column_start":20,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8295913,"byte_end":8295931,"line_start":27,"line_end":27,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7027},{"krate":0,"index":7025},{"krate":0,"index":5989},{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":5993}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8297596,"byte_end":8297614,"line_start":75,"line_end":75,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5996},{"krate":0,"index":5997}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8299738,"byte_end":8299758,"line_start":22,"line_end":22,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8299842,"byte_end":8299862,"line_start":27,"line_end":27,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6033}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8300227,"byte_end":8300247,"line_start":41,"line_end":41,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6038}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8300498,"byte_end":8300518,"line_start":51,"line_end":51,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7022},{"krate":0,"index":7020},{"krate":0,"index":7018},{"krate":0,"index":7016},{"krate":0,"index":6043}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8301184,"byte_end":8301204,"line_start":72,"line_end":72,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6048},{"krate":0,"index":6049}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":359496,"byte_end":359509,"line_start":21,"line_end":21,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":359725,"byte_end":359738,"line_start":35,"line_end":35,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3378}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":359992,"byte_end":360005,"line_start":48,"line_end":48,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":361873,"byte_end":361886,"line_start":103,"line_end":103,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":362548,"byte_end":362561,"line_start":131,"line_end":131,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276170,"byte_end":276171,"line_start":109,"line_end":109,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364671,"byte_end":364675,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":365281,"byte_end":365285,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366419,"byte_end":366425,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366452,"byte_end":366458,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366765,"byte_end":366771,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3505}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367383,"byte_end":367388,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367420,"byte_end":367425,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367510,"byte_end":367515,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368566,"byte_end":368570,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368590,"byte_end":368594,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6103}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368675,"byte_end":368679,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":369262,"byte_end":369266,"line_start":59,"line_end":59,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3556}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369876,"byte_end":369883,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369915,"byte_end":369922,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3575}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":370007,"byte_end":370014,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3580}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370539,"byte_end":370545,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370576,"byte_end":370582,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":371324,"byte_end":371330,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3605},{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":371927,"byte_end":371933,"line_start":15,"line_end":15,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372678,"byte_end":372684,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":374207,"byte_end":374213,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3637}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":374431,"byte_end":374437,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3641},{"krate":0,"index":3642}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377857,"byte_end":377863,"line_start":66,"line_end":66,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377910,"byte_end":377916,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3682}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":378197,"byte_end":378203,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6122},{"krate":0,"index":6124},{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":378364,"byte_end":378370,"line_start":87,"line_end":87,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3692}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":378596,"byte_end":378602,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3698},{"krate":0,"index":3699}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304448,"byte_end":8304460,"line_start":19,"line_end":19,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6150}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304565,"byte_end":8304577,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304608,"byte_end":8304620,"line_start":27,"line_end":27,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6155}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304743,"byte_end":8304755,"line_start":33,"line_end":33,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6158}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304925,"byte_end":8304937,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7006}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304994,"byte_end":8305006,"line_start":44,"line_end":44,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6163},{"krate":0,"index":6164}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307617,"byte_end":8307631,"line_start":101,"line_end":101,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307657,"byte_end":8307671,"line_start":103,"line_end":103,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6176},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6179}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8309295,"byte_end":8309309,"line_start":147,"line_end":147,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6182}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8309427,"byte_end":8309441,"line_start":153,"line_end":153,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6185},{"krate":0,"index":6186},{"krate":0,"index":6187}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8310625,"byte_end":8310639,"line_start":191,"line_end":191,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6190}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8310805,"byte_end":8310819,"line_start":197,"line_end":197,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6193}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/abort.rs","byte_start":8336887,"byte_end":8336898,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6238}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8338070,"byte_end":8338080,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8338937,"byte_end":8338947,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8338995,"byte_end":8339002,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6256},{"krate":0,"index":6257},{"krate":0,"index":6258}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8339266,"byte_end":8339273,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8339314,"byte_end":8339324,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6264},{"krate":0,"index":6265},{"krate":0,"index":6266}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8340241,"byte_end":8340251,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8340299,"byte_end":8340303,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6272},{"krate":0,"index":6273},{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8340559,"byte_end":8340563,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/task.rs","byte_start":8342052,"byte_end":8342056,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/task.rs","byte_start":8342091,"byte_end":8342095,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/task.rs","byte_start":8342127,"byte_end":8342131,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6314}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/task.rs","byte_start":8343208,"byte_end":8343212,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6317},{"krate":0,"index":6319}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/task.rs","byte_start":8344224,"byte_end":8344228,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6322}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8345678,"byte_end":8345693,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6354},{"krate":0,"index":6355},{"krate":0,"index":6356}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8347543,"byte_end":8347558,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6359}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8314104,"byte_end":8314120,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8314161,"byte_end":8314177,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8314206,"byte_end":8314222,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8314247,"byte_end":8314263,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6376}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8314460,"byte_end":8314476,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6378}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8316191,"byte_end":8316207,"line_start":124,"line_end":124,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6381}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8317407,"byte_end":8317423,"line_start":156,"line_end":156,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6384}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8317526,"byte_end":8317542,"line_start":162,"line_end":162,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6387},{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8328042,"byte_end":8328058,"line_start":413,"line_end":413,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6411}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8332455,"byte_end":8332459,"line_start":513,"line_end":513,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6410}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8334797,"byte_end":8334813,"line_start":575,"line_end":575,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6414}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8334960,"byte_end":8334976,"line_start":581,"line_end":581,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6417}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8336424,"byte_end":8336440,"line_start":610,"line_end":610,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6420}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8336696,"byte_end":8336712,"line_start":620,"line_end":620,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6425}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349375,"byte_end":8349384,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349529,"byte_end":8349538,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452},{"krate":0,"index":6453},{"krate":0,"index":6454}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350588,"byte_end":8350597,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6457}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350710,"byte_end":8350719,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6460},{"krate":0,"index":6461}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8351526,"byte_end":8351535,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6464}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8352511,"byte_end":8352520,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6469}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380493,"byte_end":380495,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380550,"byte_end":380552,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408373,"byte_end":408383,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408820,"byte_end":408830,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3784},{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":409347,"byte_end":409357,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":409897,"byte_end":409907,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":410656,"byte_end":410666,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3806},{"krate":0,"index":3807}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":411386,"byte_end":411396,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3810},{"krate":0,"index":3811}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":411984,"byte_end":411994,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3814}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":412133,"byte_end":412143,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":412381,"byte_end":412391,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3820},{"krate":0,"index":3821}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":412602,"byte_end":412612,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3824},{"krate":0,"index":3825}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414310,"byte_end":414319,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6556},{"krate":0,"index":6559},{"krate":0,"index":6561}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414445,"byte_end":414454,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":416451,"byte_end":416460,"line_start":108,"line_end":108,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3870},{"krate":0,"index":3871}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":418050,"byte_end":418059,"line_start":152,"line_end":152,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3875},{"krate":0,"index":3876}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":418973,"byte_end":418982,"line_start":177,"line_end":177,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":419680,"byte_end":419689,"line_start":203,"line_end":203,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3885}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":420002,"byte_end":420011,"line_start":212,"line_end":212,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3888}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423846,"byte_end":423855,"line_start":38,"line_end":38,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6563},{"krate":0,"index":6566}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423950,"byte_end":423959,"line_start":43,"line_end":43,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3920},{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3923},{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3926},{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":426304,"byte_end":426313,"line_start":120,"line_end":120,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3933},{"krate":0,"index":3934}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":427688,"byte_end":427697,"line_start":163,"line_end":163,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3937},{"krate":0,"index":3938}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":428354,"byte_end":428363,"line_start":187,"line_end":187,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3941},{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":428661,"byte_end":428670,"line_start":200,"line_end":200,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":429029,"byte_end":429038,"line_start":210,"line_end":210,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3948}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":429891,"byte_end":429896,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":429953,"byte_end":429958,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6568},{"krate":0,"index":6571},{"krate":0,"index":6574},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3978},{"krate":0,"index":3979},{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":431458,"byte_end":431463,"line_start":74,"line_end":74,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":431793,"byte_end":431798,"line_start":88,"line_end":88,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3988},{"krate":0,"index":3989}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":433133,"byte_end":433138,"line_start":134,"line_end":134,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3994},{"krate":0,"index":3995}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/close.rs","byte_start":434410,"byte_end":434415,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/close.rs","byte_start":434468,"byte_end":434473,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/close.rs","byte_start":434616,"byte_end":434621,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4014}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":436325,"byte_end":436329,"line_start":51,"line_end":51,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":436420,"byte_end":436424,"line_start":53,"line_end":53,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6594}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":436559,"byte_end":436563,"line_start":57,"line_end":57,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4045},{"krate":0,"index":4046}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":438197,"byte_end":438204,"line_start":53,"line_end":53,"column_start":37,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":438246,"byte_end":438253,"line_start":55,"line_end":55,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4069}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":438547,"byte_end":438554,"line_start":64,"line_end":64,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4073},{"krate":0,"index":4074}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440379,"byte_end":440385,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4094},{"krate":0,"index":4095},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443613,"byte_end":443619,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4102}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443906,"byte_end":443912,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4105},{"krate":0,"index":4106}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":444544,"byte_end":444550,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4109},{"krate":0,"index":4110}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":445699,"byte_end":445705,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":445780,"byte_end":445786,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6625},{"krate":0,"index":6626},{"krate":0,"index":6627},{"krate":0,"index":6628}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":445864,"byte_end":445870,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6629},{"krate":0,"index":6630},{"krate":0,"index":6631},{"krate":0,"index":6632}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":445943,"byte_end":445949,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6633},{"krate":0,"index":6634},{"krate":0,"index":6635},{"krate":0,"index":6636}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446932,"byte_end":446937,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":447285,"byte_end":447290,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4133},{"krate":0,"index":4134}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":447522,"byte_end":447527,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4136}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/flush.rs","byte_start":448013,"byte_end":448018,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/flush.rs","byte_start":448071,"byte_end":448076,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4153}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/flush.rs","byte_start":448190,"byte_end":448195,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4156},{"krate":0,"index":4157}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/lines.rs","byte_start":448873,"byte_end":448878,"line_start":19,"line_end":19,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/lines.rs","byte_start":448908,"byte_end":448913,"line_start":21,"line_end":21,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4173}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/lines.rs","byte_start":449133,"byte_end":449138,"line_start":32,"line_end":32,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4176},{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read.rs","byte_start":450192,"byte_end":450196,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read.rs","byte_start":450248,"byte_end":450252,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4192}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read.rs","byte_start":450417,"byte_end":450421,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4195},{"krate":0,"index":4196}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_vectored.rs","byte_start":451109,"byte_end":451121,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_vectored.rs","byte_start":451173,"byte_end":451185,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4213}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_vectored.rs","byte_start":451364,"byte_end":451376,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4216},{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_exact.rs","byte_start":452046,"byte_end":452055,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_exact.rs","byte_start":452107,"byte_end":452116,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_exact.rs","byte_start":452286,"byte_end":452295,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4236},{"krate":0,"index":4237}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_line.rs","byte_start":453412,"byte_end":453420,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_line.rs","byte_start":453475,"byte_end":453483,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4255}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_line.rs","byte_start":454518,"byte_end":454526,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4261},{"krate":0,"index":4262}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":455256,"byte_end":455265,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":455317,"byte_end":455326,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4278}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":455607,"byte_end":455612,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4284}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":457162,"byte_end":457171,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4289},{"krate":0,"index":4290}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_string.rs","byte_start":458019,"byte_end":458031,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_string.rs","byte_start":458083,"byte_end":458095,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4310}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_string.rs","byte_start":459137,"byte_end":459149,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4316},{"krate":0,"index":4317}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_until.rs","byte_start":459944,"byte_end":459953,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_until.rs","byte_start":460008,"byte_end":460017,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4333}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_until.rs","byte_start":460989,"byte_end":460998,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4338},{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":462197,"byte_end":462203,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4355},{"krate":0,"index":4356}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":462983,"byte_end":462989,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/seek.rs","byte_start":463503,"byte_end":463507,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/seek.rs","byte_start":463559,"byte_end":463563,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4377}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/seek.rs","byte_start":463720,"byte_end":463724,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4380},{"krate":0,"index":4381}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464853,"byte_end":464857,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4400},{"krate":0,"index":4401}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":465575,"byte_end":465579,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4403}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/split.rs","byte_start":466587,"byte_end":466595,"line_start":35,"line_end":35,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4428},{"krate":0,"index":4430}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/split.rs","byte_start":467060,"byte_end":467069,"line_start":49,"line_end":49,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4434},{"krate":0,"index":4436},{"krate":0,"index":4438},{"krate":0,"index":4440}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468336,"byte_end":468340,"line_start":18,"line_end":18,"column_start":26,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468368,"byte_end":468372,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6752},{"krate":0,"index":6755},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472673,"byte_end":472677,"line_start":167,"line_end":167,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4472}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":473314,"byte_end":473318,"line_start":189,"line_end":189,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4475},{"krate":0,"index":4476}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475227,"byte_end":475233,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":477336,"byte_end":477342,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4495}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":477489,"byte_end":477495,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4498}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write.rs","byte_start":478016,"byte_end":478021,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write.rs","byte_start":478074,"byte_end":478079,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4513}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write.rs","byte_start":478241,"byte_end":478246,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4516},{"krate":0,"index":4517}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_vectored.rs","byte_start":478930,"byte_end":478943,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_vectored.rs","byte_start":478996,"byte_end":479009,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_vectored.rs","byte_start":479182,"byte_end":479195,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4537},{"krate":0,"index":4538}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_all.rs","byte_start":479862,"byte_end":479870,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_all.rs","byte_start":479923,"byte_end":479931,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4554}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_all.rs","byte_start":480097,"byte_end":480105,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4557},{"krate":0,"index":4558}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397276,"byte_end":397277,"line_start":377,"line_end":377,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401372,"byte_end":401373,"line_start":508,"line_end":508,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401907,"byte_end":401908,"line_start":524,"line_end":524,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":407437,"byte_end":407438,"line_start":675,"line_end":675,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8353978,"byte_end":8353983,"line_start":18,"line_end":18,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6820}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8354316,"byte_end":8354321,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6823}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8354414,"byte_end":8354419,"line_start":34,"line_end":34,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6826}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8354557,"byte_end":8354563,"line_start":45,"line_end":45,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6834},{"krate":0,"index":6835}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355107,"byte_end":8355112,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6840},{"krate":0,"index":6841}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355688,"byte_end":8355693,"line_start":90,"line_end":90,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6844},{"krate":0,"index":6845},{"krate":0,"index":6846},{"krate":0,"index":6847},{"krate":0,"index":6848}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8358842,"byte_end":8358857,"line_start":181,"line_end":181,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6857}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8359367,"byte_end":8359382,"line_start":197,"line_end":197,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6860}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8359499,"byte_end":8359514,"line_start":203,"line_end":203,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6864},{"krate":0,"index":6865}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8360743,"byte_end":8360758,"line_start":239,"line_end":239,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6868}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361360,"byte_end":8361370,"line_start":258,"line_end":258,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6876}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8362360,"byte_end":8362370,"line_start":288,"line_end":288,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6881}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8362615,"byte_end":8362625,"line_start":297,"line_end":297,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6884}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8362723,"byte_end":8362733,"line_start":303,"line_end":303,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6887},{"krate":0,"index":6888}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8362874,"byte_end":8362884,"line_start":310,"line_end":310,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6891}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363298,"byte_end":8363314,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6902}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8364422,"byte_end":8364438,"line_start":354,"line_end":354,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6908}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8364703,"byte_end":8364719,"line_start":363,"line_end":363,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6912}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8364831,"byte_end":8364847,"line_start":369,"line_end":369,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6916},{"krate":0,"index":6917}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8364990,"byte_end":8365006,"line_start":376,"line_end":376,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6921}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365283,"byte_end":8365288,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365334,"byte_end":8365339,"line_start":385,"line_end":385,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365506,"byte_end":8365521,"line_start":389,"line_end":389,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365625,"byte_end":8365640,"line_start":391,"line_end":391,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365844,"byte_end":8365854,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365904,"byte_end":8365914,"line_start":396,"line_end":396,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365975,"byte_end":8365991,"line_start":397,"line_end":397,"column_start":51,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8366055,"byte_end":8366071,"line_start":398,"line_end":398,"column_start":51,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8368075,"byte_end":8368080,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8368117,"byte_end":8368122,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8368138,"byte_end":8368144,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6965},{"krate":0,"index":6966},{"krate":0,"index":6967}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8373840,"byte_end":8373845,"line_start":193,"line_end":193,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6970}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8375102,"byte_end":8375113,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6973},{"krate":0,"index":6974}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8375276,"byte_end":8375287,"line_start":241,"line_end":241,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6977}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8375425,"byte_end":8375436,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6980}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8375788,"byte_end":8375799,"line_start":256,"line_end":256,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6983}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3226,"byte_end":3232,"line_start":94,"line_end":94,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3308,"byte_end":3314,"line_start":97,"line_end":97,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1431}},{"kind":"Mod","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":148847,"byte_end":148864,"line_start":87,"line_end":87,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":6197}},{"kind":"Mod","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3500,"byte_end":3504,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3706}},{"kind":"Mod","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3515,"byte_end":3520,"line_start":107,"line_end":107,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3745}},{"kind":"Mod","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3622,"byte_end":3624,"line_start":114,"line_end":114,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3747}},{"kind":"Mod","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3837,"byte_end":3841,"line_start":121,"line_end":121,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6791}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24876,"byte_end":24883,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25160,"byte_end":25167,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25441,"byte_end":25448,"line_start":40,"line_end":40,"column_start":27,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":47},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25601,"byte_end":25608,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26268,"byte_end":26281,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":76},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26510,"byte_end":26523,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":76},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26955,"byte_end":26960,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27659,"byte_end":27672,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":76},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27954,"byte_end":27967,"line_start":69,"line_end":69,"column_start":22,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":76},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29033,"byte_end":29037,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30920,"byte_end":30924,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4624},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":31038,"byte_end":31042,"line_start":78,"line_end":78,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4624},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31819,"byte_end":31829,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32041,"byte_end":32051,"line_start":25,"line_end":25,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4633},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32376,"byte_end":32386,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4633},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32855,"byte_end":32858,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33098,"byte_end":33101,"line_start":24,"line_end":24,"column_start":31,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4642},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33146,"byte_end":33149,"line_start":26,"line_end":26,"column_start":33,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4642},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33309,"byte_end":33312,"line_start":33,"line_end":33,"column_start":28,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4642},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34144,"byte_end":34148,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34473,"byte_end":34477,"line_start":28,"line_end":28,"column_start":37,"column_end":41},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4656},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34687,"byte_end":34691,"line_start":36,"line_end":36,"column_start":32,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4656},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35409,"byte_end":35416,"line_start":14,"line_end":14,"column_start":44,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35679,"byte_end":35686,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4669},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35728,"byte_end":35735,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4669},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35904,"byte_end":35911,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4669},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36637,"byte_end":36646,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36808,"byte_end":36817,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4683},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36866,"byte_end":36875,"line_start":23,"line_end":23,"column_start":40,"column_end":49},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4683},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36978,"byte_end":36987,"line_start":27,"line_end":27,"column_start":25,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4683},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37578,"byte_end":37588,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37752,"byte_end":37762,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4692},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37811,"byte_end":37821,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4692},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37924,"byte_end":37934,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4692},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/catch_unwind.rs","byte_start":38575,"byte_end":38586,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/catch_unwind.rs","byte_start":38777,"byte_end":38788,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4701},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":39935,"byte_end":39941,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":39984,"byte_end":39990,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":40248,"byte_end":40253,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":322},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":40480,"byte_end":40485,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":322},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":40581,"byte_end":40586,"line_start":59,"line_end":59,"column_start":27,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":322},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":40854,"byte_end":40860,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":41326,"byte_end":41332,"line_start":90,"line_end":90,"column_start":11,"column_end":17},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":43873,"byte_end":43878,"line_start":161,"line_end":161,"column_start":11,"column_end":16},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":44270,"byte_end":44276,"line_start":176,"line_end":176,"column_start":27,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":318},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":44428,"byte_end":44434,"line_start":186,"line_end":186,"column_start":22,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":45692,"byte_end":45697,"line_start":227,"line_end":227,"column_start":23,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":47742,"byte_end":47748,"line_start":293,"line_end":293,"column_start":21,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":47942,"byte_end":47948,"line_start":305,"line_end":305,"column_start":20,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/shared.rs","byte_start":48376,"byte_end":48384,"line_start":322,"line_end":322,"column_start":18,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":326},"to":{"krate":17,"index":260}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":49125,"byte_end":49130,"line_start":13,"line_end":13,"column_start":48,"column_end":53},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4710},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":49176,"byte_end":49181,"line_start":15,"line_end":15,"column_start":24,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":49342,"byte_end":49347,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8823,"byte_end":8824,"line_start":81,"line_end":81,"column_start":31,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":413},"to":{"krate":0,"index":414}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8955,"byte_end":8961,"line_start":85,"line_end":85,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":8075},"to":{"krate":0,"index":414}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":68836,"byte_end":68843,"line_start":14,"line_end":14,"column_start":21,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":69194,"byte_end":69201,"line_start":28,"line_end":28,"column_start":37,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4728},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":69450,"byte_end":69457,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4728},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70408,"byte_end":70415,"line_start":15,"line_end":15,"column_start":31,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4741},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70441,"byte_end":70448,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70669,"byte_end":70676,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4741},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":70853,"byte_end":70860,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4741},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":71592,"byte_end":71601,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4753},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":71627,"byte_end":71636,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":71893,"byte_end":71902,"line_start":29,"line_end":29,"column_start":30,"column_end":39},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4753},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":72085,"byte_end":72094,"line_start":39,"line_end":39,"column_start":25,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4753},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":72931,"byte_end":72941,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4767},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":72967,"byte_end":72977,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":73237,"byte_end":73247,"line_start":29,"line_end":29,"column_start":30,"column_end":40},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4767},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":73433,"byte_end":73443,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4767},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":74225,"byte_end":74235,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":74437,"byte_end":74447,"line_start":22,"line_end":22,"column_start":52,"column_end":62},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4781},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":74558,"byte_end":74568,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4781},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":75189,"byte_end":75195,"line_start":14,"line_end":14,"column_start":14,"column_end":20},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":75444,"byte_end":75450,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4790},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":75495,"byte_end":75501,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4790},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":75663,"byte_end":75669,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4790},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":76586,"byte_end":76591,"line_start":14,"line_end":14,"column_start":14,"column_end":19},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":76837,"byte_end":76842,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4804},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":76887,"byte_end":76892,"line_start":26,"line_end":26,"column_start":33,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4804},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":77063,"byte_end":77068,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4804},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":78028,"byte_end":78039,"line_start":15,"line_end":15,"column_start":17,"column_end":28},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":78341,"byte_end":78352,"line_start":26,"line_end":26,"column_start":34,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4818},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":78403,"byte_end":78414,"line_start":28,"line_end":28,"column_start":36,"column_end":47},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4818},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":78649,"byte_end":78660,"line_start":38,"line_end":38,"column_start":31,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4818},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":79783,"byte_end":79789,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":80138,"byte_end":80144,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4837},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":80390,"byte_end":80396,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4837},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":81462,"byte_end":81478,"line_start":20,"line_end":20,"column_start":22,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":81763,"byte_end":81779,"line_start":34,"line_end":34,"column_start":26,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":82055,"byte_end":82071,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":745},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":82266,"byte_end":82282,"line_start":56,"line_end":56,"column_start":22,"column_end":38},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":745},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":83749,"byte_end":83761,"line_start":15,"line_end":15,"column_start":14,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":84028,"byte_end":84040,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":84082,"byte_end":84094,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4853},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":84271,"byte_end":84283,"line_start":36,"line_end":36,"column_start":25,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":85222,"byte_end":85239,"line_start":18,"line_end":18,"column_start":21,"column_end":38},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":804},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":85329,"byte_end":85346,"line_start":25,"line_end":25,"column_start":26,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":804},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":85607,"byte_end":85624,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":86059,"byte_end":86064,"line_start":60,"line_end":60,"column_start":14,"column_end":19},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":86797,"byte_end":86802,"line_start":75,"line_end":75,"column_start":11,"column_end":16},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":87659,"byte_end":87676,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":804},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":88013,"byte_end":88030,"line_start":114,"line_end":114,"column_start":22,"column_end":39},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":804},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":90667,"byte_end":90675,"line_start":13,"line_end":13,"column_start":48,"column_end":56},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4885},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":90851,"byte_end":90859,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52776,"byte_end":52779,"line_start":77,"line_end":77,"column_start":48,"column_end":51},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":862}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52862,"byte_end":52871,"line_start":80,"line_end":80,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":32},"to":{"krate":0,"index":862}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":93879,"byte_end":93883,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4903},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94456,"byte_end":94460,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4903},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":94592,"byte_end":94596,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4903},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95143,"byte_end":95150,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4909},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95701,"byte_end":95708,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4909},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95853,"byte_end":95860,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4909},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":95887,"byte_end":95894,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4909},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":96642,"byte_end":96651,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4915},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":97230,"byte_end":97239,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":98445,"byte_end":98454,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4915},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":98670,"byte_end":98679,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4915},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":99989,"byte_end":100001,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":100076,"byte_end":100088,"line_start":35,"line_end":35,"column_start":28,"column_end":40},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4928},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":100418,"byte_end":100430,"line_start":49,"line_end":49,"column_start":38,"column_end":50},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4928},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":100618,"byte_end":100630,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4928},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101043,"byte_end":101049,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101719,"byte_end":101725,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":101867,"byte_end":101873,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102350,"byte_end":102355,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102534,"byte_end":102539,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4940},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102571,"byte_end":102576,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4940},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":102673,"byte_end":102678,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4940},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":109420,"byte_end":109429,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":110146,"byte_end":110155,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5116},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":110818,"byte_end":110825,"line_start":68,"line_end":68,"column_start":24,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1124},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":112491,"byte_end":112498,"line_start":124,"line_end":124,"column_start":20,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1124},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join_all.rs","byte_start":113394,"byte_end":113401,"line_start":155,"line_end":155,"column_start":37,"column_end":44},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1124},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":113871,"byte_end":113877,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5127},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":115240,"byte_end":115246,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5127},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":115949,"byte_end":115955,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5127},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":116492,"byte_end":116501,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5135},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":117481,"byte_end":117490,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5135},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_all.rs","byte_start":118196,"byte_end":118205,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5135},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":126554,"byte_end":126563,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":127279,"byte_end":127288,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5285},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":128026,"byte_end":128036,"line_start":72,"line_end":72,"column_start":24,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":129796,"byte_end":129806,"line_start":134,"line_end":134,"column_start":20,"column_end":30},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join_all.rs","byte_start":131210,"byte_end":131220,"line_start":175,"line_end":175,"column_start":40,"column_end":50},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":131702,"byte_end":131711,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5296},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":133417,"byte_end":133426,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5296},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":134779,"byte_end":134787,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":135757,"byte_end":135765,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select_ok.rs","byte_start":137209,"byte_end":137217,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5304},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":137794,"byte_end":137800,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138185,"byte_end":138191,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138572,"byte_end":138578,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":138819,"byte_end":138825,"line_start":52,"line_end":52,"column_start":23,"column_end":29},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5310},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":139254,"byte_end":139260,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5310},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":139536,"byte_end":139542,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5310},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":139984,"byte_end":139990,"line_start":99,"line_end":99,"column_start":28,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5310},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":142112,"byte_end":142118,"line_start":169,"line_end":169,"column_start":30,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5310},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":143375,"byte_end":143381,"line_start":209,"line_end":209,"column_start":31,"column_end":37},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5310},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":145092,"byte_end":145098,"line_start":259,"line_end":259,"column_start":30,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5310},"to":{"krate":19,"index":25}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":145629,"byte_end":145635,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5310},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277057,"byte_end":8277066,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":5364},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8277086,"byte_end":8277095,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8278431,"byte_end":8278442,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8280318,"byte_end":8280325,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5389},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8280508,"byte_end":8280515,"line_start":135,"line_end":135,"column_start":28,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":5389},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8280541,"byte_end":8280550,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5364},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/abortable.rs","byte_start":8281516,"byte_end":8281527,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":190997,"byte_end":191002,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":191345,"byte_end":191350,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5402},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":191555,"byte_end":191560,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5402},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":193091,"byte_end":193098,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5417},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":193139,"byte_end":193146,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":193532,"byte_end":193539,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5417},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":193715,"byte_end":193722,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5417},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":194607,"byte_end":194613,"line_start":15,"line_end":15,"column_start":36,"column_end":42},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5431},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":194631,"byte_end":194637,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":194992,"byte_end":194998,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5431},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":195795,"byte_end":195801,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5431},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196472,"byte_end":196481,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5443},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":196507,"byte_end":196516,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":197909,"byte_end":197918,"line_start":62,"line_end":62,"column_start":48,"column_end":57},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5443},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":198036,"byte_end":198045,"line_start":68,"line_end":68,"column_start":29,"column_end":38},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5443},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":199361,"byte_end":199367,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1580},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":199462,"byte_end":199468,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1580},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":199860,"byte_end":199866,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201495,"byte_end":201501,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1580},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":201769,"byte_end":201775,"line_start":104,"line_end":104,"column_start":29,"column_end":35},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1580},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":203974,"byte_end":203983,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1632},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204069,"byte_end":204078,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1632},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":204375,"byte_end":204384,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":205879,"byte_end":205888,"line_start":83,"line_end":83,"column_start":37,"column_end":46},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1632},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":206159,"byte_end":206168,"line_start":93,"line_end":93,"column_start":32,"column_end":41},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1632},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208123,"byte_end":208130,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5473},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208200,"byte_end":208207,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":208324,"byte_end":208331,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209632,"byte_end":209639,"line_start":76,"line_end":76,"column_start":26,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5473},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":209821,"byte_end":209828,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5473},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":211252,"byte_end":211256,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1713},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":211311,"byte_end":211315,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1713},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":211671,"byte_end":211675,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":212150,"byte_end":212154,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1713},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":212401,"byte_end":212405,"line_start":64,"line_end":64,"column_start":32,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1713},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":213862,"byte_end":213869,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1768},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":213955,"byte_end":213962,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1768},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":214255,"byte_end":214262,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":214658,"byte_end":214665,"line_start":53,"line_end":53,"column_start":34,"column_end":41},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1768},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":214916,"byte_end":214923,"line_start":63,"line_end":63,"column_start":29,"column_end":36},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1768},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216089,"byte_end":216093,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5504},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":216111,"byte_end":216115,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217774,"byte_end":217778,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5504},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":217876,"byte_end":217880,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5504},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219100,"byte_end":219112,"line_start":15,"line_end":15,"column_start":27,"column_end":39},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":219146,"byte_end":219158,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221691,"byte_end":221703,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5516},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":221823,"byte_end":221835,"line_start":83,"line_end":83,"column_start":37,"column_end":49},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":222665,"byte_end":222672,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1871},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":222711,"byte_end":222718,"line_start":18,"line_end":18,"column_start":28,"column_end":35},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1871},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":222937,"byte_end":222944,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":224331,"byte_end":224338,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1871},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":224657,"byte_end":224664,"line_start":89,"line_end":89,"column_start":24,"column_end":31},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1871},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":225777,"byte_end":225780,"line_start":16,"line_end":16,"column_start":30,"column_end":33},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1920},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":225819,"byte_end":225822,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1920},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":226040,"byte_end":226043,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":227429,"byte_end":227432,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1920},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":227613,"byte_end":227616,"line_start":82,"line_end":82,"column_start":27,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1920},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":228731,"byte_end":228735,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5535},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":228786,"byte_end":228790,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":228941,"byte_end":228945,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5535},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":229084,"byte_end":229088,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5535},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":229737,"byte_end":229751,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":229912,"byte_end":229926,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5543},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":230070,"byte_end":230084,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5543},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231297,"byte_end":231305,"line_start":24,"line_end":24,"column_start":36,"column_end":44},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5551},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":231331,"byte_end":231339,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":234560,"byte_end":234568,"line_start":114,"line_end":114,"column_start":34,"column_end":42},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5551},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":234710,"byte_end":234718,"line_start":120,"line_end":120,"column_start":28,"column_end":36},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5551},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":235855,"byte_end":235859,"line_start":159,"line_end":159,"column_start":28,"column_end":32},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2043},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":235896,"byte_end":235900,"line_start":161,"line_end":161,"column_start":25,"column_end":29},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2043},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":236171,"byte_end":236175,"line_start":173,"line_end":173,"column_start":34,"column_end":38},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2043},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":236286,"byte_end":236290,"line_start":179,"line_end":179,"column_start":25,"column_end":29},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2043},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237273,"byte_end":237277,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5563},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":237303,"byte_end":237307,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238699,"byte_end":238703,"line_start":62,"line_end":62,"column_start":39,"column_end":43},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5563},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":238821,"byte_end":238825,"line_start":68,"line_end":68,"column_start":29,"column_end":33},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5563},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":240430,"byte_end":240439,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2105},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":240488,"byte_end":240497,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2105},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":240949,"byte_end":240958,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242682,"byte_end":242691,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2105},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":242951,"byte_end":242960,"line_start":102,"line_end":102,"column_start":29,"column_end":38},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2105},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245255,"byte_end":245259,"line_start":17,"line_end":17,"column_start":27,"column_end":31},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5587},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":245285,"byte_end":245289,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":246663,"byte_end":246667,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5587},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":247650,"byte_end":247654,"line_start":102,"line_end":102,"column_start":26,"column_end":30},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5587},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":248602,"byte_end":248611,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2188},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":248660,"byte_end":248669,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2188},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":249125,"byte_end":249134,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":249370,"byte_end":249379,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":250892,"byte_end":250901,"line_start":94,"line_end":94,"column_start":29,"column_end":38},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2188},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":252472,"byte_end":252481,"line_start":146,"line_end":146,"column_start":34,"column_end":43},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2188},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253463,"byte_end":253467,"line_start":18,"line_end":18,"column_start":42,"column_end":46},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2245},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253516,"byte_end":253520,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2245},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253810,"byte_end":253814,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":253950,"byte_end":253954,"line_start":39,"line_end":39,"column_start":18,"column_end":22},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":255354,"byte_end":255358,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2245},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":255596,"byte_end":255600,"line_start":94,"line_end":94,"column_start":29,"column_end":33},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2245},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":257545,"byte_end":257548,"line_start":19,"line_end":19,"column_start":26,"column_end":29},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5619},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":257678,"byte_end":257681,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":259613,"byte_end":259616,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5619},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":259807,"byte_end":259810,"line_start":86,"line_end":86,"column_start":27,"column_end":30},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5619},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":262501,"byte_end":262507,"line_start":20,"line_end":20,"column_start":36,"column_end":42},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5640},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":262533,"byte_end":262539,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":264270,"byte_end":264276,"line_start":74,"line_end":74,"column_start":29,"column_end":35},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5640},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chunks.rs","byte_start":265898,"byte_end":265904,"line_start":121,"line_end":121,"column_start":39,"column_end":45},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5640},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":266829,"byte_end":266833,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2375},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":266888,"byte_end":266892,"line_start":25,"line_end":25,"column_start":36,"column_end":40},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2375},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":267378,"byte_end":267382,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":267674,"byte_end":267678,"line_start":53,"line_end":53,"column_start":24,"column_end":28},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":269236,"byte_end":269240,"line_start":103,"line_end":103,"column_start":35,"column_end":39},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2375},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":270458,"byte_end":270462,"line_start":145,"line_end":145,"column_start":40,"column_end":44},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2375},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8282796,"byte_end":8282811,"line_start":23,"line_end":23,"column_start":20,"column_end":35},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5678},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8282874,"byte_end":8282889,"line_start":28,"line_end":28,"column_start":25,"column_end":40},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5678},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8283221,"byte_end":8283236,"line_start":41,"line_end":41,"column_start":10,"column_end":25},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8284888,"byte_end":8284903,"line_start":94,"line_end":94,"column_start":21,"column_end":36},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5678},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffer_unordered.rs","byte_start":8286367,"byte_end":8286382,"line_start":140,"line_end":140,"column_start":26,"column_end":41},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5678},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8287400,"byte_end":8287408,"line_start":23,"line_end":23,"column_start":20,"column_end":28},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5719},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8287493,"byte_end":8287501,"line_start":29,"line_end":29,"column_start":25,"column_end":33},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5719},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8287848,"byte_end":8287856,"line_start":43,"line_end":43,"column_start":10,"column_end":18},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/buffered.rs","byte_start":8289430,"byte_end":8289438,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5719},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8291727,"byte_end":8291744,"line_start":20,"line_end":20,"column_start":28,"column_end":45},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5759},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8291828,"byte_end":8291845,"line_start":25,"line_end":25,"column_start":33,"column_end":50},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5759},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8292191,"byte_end":8292208,"line_start":39,"line_end":39,"column_start":18,"column_end":35},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8292853,"byte_end":8292870,"line_start":60,"line_end":60,"column_start":34,"column_end":51},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5759},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each_concurrent.rs","byte_start":8293112,"byte_end":8293129,"line_start":70,"line_end":70,"column_start":29,"column_end":46},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5759},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/catch_unwind.rs","byte_start":271437,"byte_end":271448,"line_start":16,"line_end":16,"column_start":31,"column_end":42},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/catch_unwind.rs","byte_start":271689,"byte_end":271700,"line_start":25,"line_end":25,"column_start":42,"column_end":53},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5794},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/catch_unwind.rs","byte_start":272584,"byte_end":272595,"line_start":58,"line_end":58,"column_start":52,"column_end":63},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5794},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154049,"byte_end":154050,"line_start":161,"line_end":161,"column_start":31,"column_end":32},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":2461}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":154193,"byte_end":154199,"line_start":165,"line_end":165,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":15,"index":68},"to":{"krate":0,"index":2461}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":302783,"byte_end":302790,"line_start":18,"line_end":18,"column_start":42,"column_end":49},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2585},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":302839,"byte_end":302846,"line_start":20,"line_end":20,"column_start":33,"column_end":40},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2585},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303139,"byte_end":303146,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":303282,"byte_end":303289,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":304673,"byte_end":304680,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2585},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":305860,"byte_end":305867,"line_start":118,"line_end":118,"column_start":34,"column_end":41},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2585},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":306810,"byte_end":306817,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5814},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":306841,"byte_end":306848,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":308157,"byte_end":308164,"line_start":59,"line_end":59,"column_start":29,"column_end":36},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5814},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":308343,"byte_end":308350,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":5814},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309464,"byte_end":309473,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309512,"byte_end":309521,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309742,"byte_end":309751,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":309836,"byte_end":309845,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":311153,"byte_end":311162,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2676},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":311340,"byte_end":311349,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2676},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312531,"byte_end":312541,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2727},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312580,"byte_end":312590,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2727},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312812,"byte_end":312822,"line_start":30,"line_end":30,"column_start":13,"column_end":23},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":312907,"byte_end":312917,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":314228,"byte_end":314238,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2727},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":314419,"byte_end":314429,"line_start":87,"line_end":87,"column_start":24,"column_end":34},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2727},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":315533,"byte_end":315543,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316866,"byte_end":316876,"line_start":56,"line_end":56,"column_start":51,"column_end":61},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":5836},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":316997,"byte_end":317007,"line_start":62,"line_end":62,"column_start":32,"column_end":42},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":5836},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":317962,"byte_end":317967,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2803},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318006,"byte_end":318011,"line_start":18,"line_end":18,"column_start":28,"column_end":33},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2803},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":318228,"byte_end":318233,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319587,"byte_end":319592,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2803},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":319777,"byte_end":319782,"line_start":81,"line_end":81,"column_start":27,"column_end":32},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2803},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":320902,"byte_end":320908,"line_start":16,"line_end":16,"column_start":30,"column_end":36},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":320947,"byte_end":320953,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2852},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":321171,"byte_end":321177,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322533,"byte_end":322539,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2852},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":322727,"byte_end":322733,"line_start":81,"line_end":81,"column_start":27,"column_end":33},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":2852},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":323937,"byte_end":323943,"line_start":18,"line_end":18,"column_start":42,"column_end":48},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":323992,"byte_end":323998,"line_start":20,"line_end":20,"column_start":33,"column_end":39},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324290,"byte_end":324296,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":2902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":324432,"byte_end":324438,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":2902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":325819,"byte_end":325825,"line_start":81,"line_end":81,"column_start":29,"column_end":35},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":2902},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":327070,"byte_end":327076,"line_start":119,"line_end":119,"column_start":34,"column_end":40},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":2902},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":327992,"byte_end":327999,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5863},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":328053,"byte_end":328060,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":328226,"byte_end":328233,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5863},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":328375,"byte_end":328382,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5863},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":329104,"byte_end":329114,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":2983},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":329163,"byte_end":329173,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":2983},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":329469,"byte_end":329479,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":2983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":329895,"byte_end":329905,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":2983},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":331251,"byte_end":331260,"line_start":22,"line_end":22,"column_start":28,"column_end":37},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":3025},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":331354,"byte_end":331363,"line_start":26,"line_end":26,"column_start":33,"column_end":42},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":3025},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":331759,"byte_end":331768,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":3025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":333322,"byte_end":333331,"line_start":91,"line_end":91,"column_start":34,"column_end":43},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":3025},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":333600,"byte_end":333609,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":3025},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":335823,"byte_end":335835,"line_start":19,"line_end":19,"column_start":28,"column_end":40},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":3079},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":335917,"byte_end":335929,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":3079},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":336229,"byte_end":336241,"line_start":36,"line_end":36,"column_start":18,"column_end":30},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":3079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337640,"byte_end":337652,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":3079},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":337942,"byte_end":337954,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":3079},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":339952,"byte_end":339962,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5897},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340033,"byte_end":340043,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":340161,"byte_end":340171,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341527,"byte_end":341537,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5897},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":341783,"byte_end":341793,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5897},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":343437,"byte_end":343447,"line_start":16,"line_end":16,"column_start":33,"column_end":43},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":343822,"byte_end":343832,"line_start":32,"line_end":32,"column_start":42,"column_end":52},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5910},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":343872,"byte_end":343882,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5910},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":344070,"byte_end":344080,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5910},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":345016,"byte_end":345025,"line_start":15,"line_end":15,"column_start":39,"column_end":48},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5924},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":345043,"byte_end":345052,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":345396,"byte_end":345405,"line_start":33,"line_end":33,"column_start":21,"column_end":30},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5924},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":346693,"byte_end":346700,"line_start":17,"line_end":17,"column_start":45,"column_end":52},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":3215},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":346755,"byte_end":346762,"line_start":19,"line_end":19,"column_start":36,"column_end":43},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":3215},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":347121,"byte_end":347128,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":347628,"byte_end":347635,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3215},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":347901,"byte_end":347908,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3215},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":352149,"byte_end":352158,"line_start":77,"line_end":77,"column_start":34,"column_end":43},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":3271},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":352205,"byte_end":352214,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3271},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":352498,"byte_end":352507,"line_start":92,"line_end":92,"column_start":17,"column_end":26},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":3271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":352663,"byte_end":352672,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":3271},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":354420,"byte_end":354432,"line_start":21,"line_end":21,"column_start":54,"column_end":66},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":3315},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":354481,"byte_end":354493,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":3315},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":354949,"byte_end":354961,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":3315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":355053,"byte_end":355065,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":3315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":356775,"byte_end":356787,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":3315},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":358419,"byte_end":358431,"line_start":146,"line_end":146,"column_start":34,"column_end":46},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":3315},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8295845,"byte_end":8295863,"line_start":23,"line_end":23,"column_start":20,"column_end":38},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6052},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8295913,"byte_end":8295931,"line_start":27,"line_end":27,"column_start":10,"column_end":28},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8297596,"byte_end":8297614,"line_start":75,"line_end":75,"column_start":21,"column_end":39},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6052},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8299738,"byte_end":8299758,"line_start":22,"line_end":22,"column_start":28,"column_end":48},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6017},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8299842,"byte_end":8299862,"line_start":27,"line_end":27,"column_start":33,"column_end":53},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6017},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8300227,"byte_end":8300247,"line_start":41,"line_end":41,"column_start":34,"column_end":54},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6017},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8300498,"byte_end":8300518,"line_start":51,"line_end":51,"column_start":18,"column_end":38},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8301184,"byte_end":8301204,"line_start":72,"line_end":72,"column_start":29,"column_end":49},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6017},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":359496,"byte_end":359509,"line_start":21,"line_end":21,"column_start":20,"column_end":33},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6060},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":359725,"byte_end":359738,"line_start":35,"line_end":35,"column_start":10,"column_end":23},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":359992,"byte_end":360005,"line_start":48,"line_end":48,"column_start":24,"column_end":37},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6060},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":361873,"byte_end":361886,"line_start":103,"line_end":103,"column_start":25,"column_end":38},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6060},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_async_read.rs","byte_start":362548,"byte_end":362561,"line_start":131,"line_end":131,"column_start":27,"column_end":40},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6060},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276170,"byte_end":276171,"line_start":109,"line_end":109,"column_start":46,"column_end":47},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":3393},"to":{"krate":0,"index":3394}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":276252,"byte_end":276261,"line_start":112,"line_end":112,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":97},"to":{"krate":0,"index":3394}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":364671,"byte_end":364675,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6079},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":365281,"byte_end":365285,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6079},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366419,"byte_end":366425,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6085},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366452,"byte_end":366458,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6085},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":366765,"byte_end":366771,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6085},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367383,"byte_end":367388,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6091},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367420,"byte_end":367425,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6091},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":367510,"byte_end":367515,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6091},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368566,"byte_end":368570,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":6097},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368590,"byte_end":368594,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":6097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":368675,"byte_end":368679,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":6097},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":369262,"byte_end":369266,"line_start":59,"line_end":59,"column_start":35,"column_end":39},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":6097},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369876,"byte_end":369883,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6106},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":369915,"byte_end":369922,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6106},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":370007,"byte_end":370014,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":6106},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370539,"byte_end":370545,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":3591},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":370576,"byte_end":370582,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":3591},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":371324,"byte_end":371330,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":3591},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":371927,"byte_end":371933,"line_start":15,"line_end":15,"column_start":40,"column_end":46},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":6112},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":372678,"byte_end":372684,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":6112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":374207,"byte_end":374213,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":6112},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":374431,"byte_end":374437,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6112},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377857,"byte_end":377863,"line_start":66,"line_end":66,"column_start":34,"column_end":40},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":3667},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":377910,"byte_end":377916,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":3667},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":378197,"byte_end":378203,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":3667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":378364,"byte_end":378370,"line_start":87,"line_end":87,"column_start":39,"column_end":45},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":3667},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":378596,"byte_end":378602,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":3667},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304448,"byte_end":8304460,"line_start":19,"line_end":19,"column_start":23,"column_end":35},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":7009},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304565,"byte_end":8304577,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":7009},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304608,"byte_end":8304620,"line_start":27,"line_end":27,"column_start":24,"column_end":36},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7009},"to":{"krate":2,"index":1655}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304743,"byte_end":8304755,"line_start":33,"line_end":33,"column_start":17,"column_end":29},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7009},"to":{"krate":2,"index":1644}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304925,"byte_end":8304937,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8304994,"byte_end":8305006,"line_start":44,"line_end":44,"column_start":20,"column_end":32},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":7009},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307617,"byte_end":8307631,"line_start":101,"line_end":101,"column_start":27,"column_end":41},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":6166},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8307657,"byte_end":8307671,"line_start":103,"line_end":103,"column_start":19,"column_end":33},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8309295,"byte_end":8309309,"line_start":147,"line_end":147,"column_start":31,"column_end":45},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6166},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8309427,"byte_end":8309441,"line_start":153,"line_end":153,"column_start":30,"column_end":44},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6166},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8310625,"byte_end":8310639,"line_start":191,"line_end":191,"column_start":29,"column_end":43},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6166},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_ordered.rs","byte_start":8310805,"byte_end":8310819,"line_start":197,"line_end":197,"column_start":41,"column_end":55},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6166},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/abort.rs","byte_start":8336887,"byte_end":8336898,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6235},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8338070,"byte_end":8338080,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6474},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8338937,"byte_end":8338947,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6474},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8338995,"byte_end":8339002,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6484},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8339266,"byte_end":8339273,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6484},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8339314,"byte_end":8339324,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6493},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8340241,"byte_end":8340251,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6493},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8340299,"byte_end":8340303,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6504},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/iter.rs","byte_start":8340559,"byte_end":8340563,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6504},"to":{"krate":2,"index":4727}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/task.rs","byte_start":8342052,"byte_end":8342056,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6299},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/task.rs","byte_start":8342091,"byte_end":8342095,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6299},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/task.rs","byte_start":8342127,"byte_end":8342131,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6299},"to":{"krate":17,"index":260}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/task.rs","byte_start":8343208,"byte_end":8343212,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/task.rs","byte_start":8344224,"byte_end":8344228,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":6299},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8345678,"byte_end":8345693,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8347543,"byte_end":8347558,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6346},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8314104,"byte_end":8314120,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6364},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8314161,"byte_end":8314177,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6364},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8314206,"byte_end":8314222,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6364},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8314247,"byte_end":8314263,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":6364},"to":{"krate":17,"index":10}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8314460,"byte_end":8314476,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":6364},"to":{"krate":17,"index":13}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8316191,"byte_end":8316207,"line_start":124,"line_end":124,"column_start":19,"column_end":35},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8317407,"byte_end":8317423,"line_start":156,"line_end":156,"column_start":31,"column_end":47},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6364},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8317526,"byte_end":8317542,"line_start":162,"line_end":162,"column_start":11,"column_end":27},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8328042,"byte_end":8328058,"line_start":413,"line_end":413,"column_start":30,"column_end":46},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6364},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8332455,"byte_end":8332459,"line_start":513,"line_end":513,"column_start":32,"column_end":36},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6403},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8334797,"byte_end":8334813,"line_start":575,"line_end":575,"column_start":21,"column_end":37},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6364},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8334960,"byte_end":8334976,"line_start":581,"line_end":581,"column_start":20,"column_end":36},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6364},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8336424,"byte_end":8336440,"line_start":610,"line_end":610,"column_start":41,"column_end":57},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6364},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/futures_unordered/mod.rs","byte_start":8336696,"byte_end":8336712,"line_start":620,"line_end":620,"column_start":35,"column_end":51},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6364},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349375,"byte_end":8349384,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6443},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8349529,"byte_end":8349538,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350588,"byte_end":8350597,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6443},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8350710,"byte_end":8350719,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6443},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8351526,"byte_end":8351535,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6443},"to":{"krate":15,"index":82}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select_all.rs","byte_start":8352511,"byte_end":8352520,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6443},"to":{"krate":2,"index":4675}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380493,"byte_end":380495,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":3718},"to":{"krate":0,"index":3721}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380550,"byte_end":380552,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":3720},"to":{"krate":0,"index":3724}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":380631,"byte_end":380636,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":17,"index":10},"to":{"krate":0,"index":3721}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":383291,"byte_end":383301,"line_start":95,"line_end":95,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":17,"index":13},"to":{"krate":0,"index":3724}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408373,"byte_end":408383,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6519},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":408820,"byte_end":408830,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":409347,"byte_end":409357,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":6519},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":409897,"byte_end":409907,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6519},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":410656,"byte_end":410666,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6519},"to":{"krate":1,"index":2861}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":411386,"byte_end":411396,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6519},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":411984,"byte_end":411994,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6519},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":412133,"byte_end":412143,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6519},"to":{"krate":19,"index":25}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":412381,"byte_end":412391,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6519},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/allow_std.rs","byte_start":412602,"byte_end":412612,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":6519},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414310,"byte_end":414319,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":3850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":414445,"byte_end":414454,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":3850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":416451,"byte_end":416460,"line_start":108,"line_end":108,"column_start":34,"column_end":43},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":3850},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":418050,"byte_end":418059,"line_start":152,"line_end":152,"column_start":37,"column_end":46},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":3850},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":418973,"byte_end":418982,"line_start":177,"line_end":177,"column_start":36,"column_end":45},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":3850},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":419680,"byte_end":419689,"line_start":203,"line_end":203,"column_start":36,"column_end":45},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":3850},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_reader.rs","byte_start":420002,"byte_end":420011,"line_start":212,"line_end":212,"column_start":46,"column_end":55},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":3850},"to":{"krate":19,"index":25}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423846,"byte_end":423855,"line_start":38,"line_end":38,"column_start":9,"column_end":18},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":3911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":423950,"byte_end":423959,"line_start":43,"line_end":43,"column_start":21,"column_end":30},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":3911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":426304,"byte_end":426313,"line_start":120,"line_end":120,"column_start":36,"column_end":45},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":3911},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":427688,"byte_end":427697,"line_start":163,"line_end":163,"column_start":34,"column_end":43},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":3911},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":428354,"byte_end":428363,"line_start":187,"line_end":187,"column_start":40,"column_end":49},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":3911},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":428661,"byte_end":428670,"line_start":200,"line_end":200,"column_start":36,"column_end":45},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":3911},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/buf_writer.rs","byte_start":429029,"byte_end":429038,"line_start":210,"line_end":210,"column_start":47,"column_end":56},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":3911},"to":{"krate":19,"index":25}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":429891,"byte_end":429896,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":429953,"byte_end":429958,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":3964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":431458,"byte_end":431463,"line_start":74,"line_end":74,"column_start":27,"column_end":32},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":431793,"byte_end":431798,"line_start":88,"line_end":88,"column_start":26,"column_end":31},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":3964},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/chain.rs","byte_start":433133,"byte_end":433138,"line_start":134,"line_end":134,"column_start":29,"column_end":34},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":3964},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/close.rs","byte_start":434410,"byte_end":434415,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6576},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/close.rs","byte_start":434468,"byte_end":434473,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/close.rs","byte_start":434616,"byte_end":434621,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6576},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":436325,"byte_end":436329,"line_start":51,"line_end":51,"column_start":45,"column_end":49},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6584},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":436420,"byte_end":436424,"line_start":53,"line_end":53,"column_start":35,"column_end":39},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy.rs","byte_start":436559,"byte_end":436563,"line_start":57,"line_end":57,"column_start":63,"column_end":67},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6584},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":438197,"byte_end":438204,"line_start":53,"line_end":53,"column_start":37,"column_end":44},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6597},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":438246,"byte_end":438253,"line_start":55,"line_end":55,"column_start":28,"column_end":35},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/copy_buf.rs","byte_start":438547,"byte_end":438554,"line_start":64,"line_end":64,"column_start":23,"column_end":30},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6597},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":440379,"byte_end":440385,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443613,"byte_end":443619,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6609},"to":{"krate":19,"index":25}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":443906,"byte_end":443912,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6609},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":444544,"byte_end":444550,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6609},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":445699,"byte_end":445705,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6609},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":445780,"byte_end":445786,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6609},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":445864,"byte_end":445870,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6609},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/cursor.rs","byte_start":445943,"byte_end":445949,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6609},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":446932,"byte_end":446937,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":4127},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":447285,"byte_end":447290,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":4127},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/empty.rs","byte_start":447522,"byte_end":447527,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":4127},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/flush.rs","byte_start":448013,"byte_end":448018,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6637},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/flush.rs","byte_start":448071,"byte_end":448076,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/flush.rs","byte_start":448190,"byte_end":448195,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6637},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/lines.rs","byte_start":448873,"byte_end":448878,"line_start":19,"line_end":19,"column_start":26,"column_end":31},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6645},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/lines.rs","byte_start":448908,"byte_end":448913,"line_start":21,"line_end":21,"column_start":23,"column_end":28},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/lines.rs","byte_start":449133,"byte_end":449138,"line_start":32,"line_end":32,"column_start":34,"column_end":39},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6645},"to":{"krate":15,"index":68}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read.rs","byte_start":450192,"byte_end":450196,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6654},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read.rs","byte_start":450248,"byte_end":450252,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read.rs","byte_start":450417,"byte_end":450421,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6654},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_vectored.rs","byte_start":451109,"byte_end":451121,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6663},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_vectored.rs","byte_start":451173,"byte_end":451185,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_vectored.rs","byte_start":451364,"byte_end":451376,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6663},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_exact.rs","byte_start":452046,"byte_end":452055,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6672},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_exact.rs","byte_start":452107,"byte_end":452116,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_exact.rs","byte_start":452286,"byte_end":452295,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6672},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_line.rs","byte_start":453412,"byte_end":453420,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_line.rs","byte_start":453475,"byte_end":453483,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_line.rs","byte_start":454518,"byte_end":454526,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":455256,"byte_end":455265,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6692},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":455317,"byte_end":455326,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":455607,"byte_end":455612,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":4279},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_end.rs","byte_start":457162,"byte_end":457171,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6692},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_string.rs","byte_start":458019,"byte_end":458031,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6702},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_string.rs","byte_start":458083,"byte_end":458095,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_to_string.rs","byte_start":459137,"byte_end":459149,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6702},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_until.rs","byte_start":459944,"byte_end":459953,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6713},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_until.rs","byte_start":460008,"byte_end":460017,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/read_until.rs","byte_start":460989,"byte_end":460998,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6713},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":462197,"byte_end":462203,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":4351},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/repeat.rs","byte_start":462983,"byte_end":462989,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":4351},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/seek.rs","byte_start":463503,"byte_end":463507,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6724},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/seek.rs","byte_start":463559,"byte_end":463563,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/seek.rs","byte_start":463720,"byte_end":463724,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6724},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":464853,"byte_end":464857,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":4393},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/sink.rs","byte_start":465575,"byte_end":465579,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":4393},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/split.rs","byte_start":466587,"byte_end":466595,"line_start":35,"line_end":35,"column_start":34,"column_end":42},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6733},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/split.rs","byte_start":467060,"byte_end":467069,"line_start":49,"line_end":49,"column_start":36,"column_end":45},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6739},"to":{"krate":19,"index":20}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468336,"byte_end":468340,"line_start":18,"line_end":18,"column_start":26,"column_end":30},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6745},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":468368,"byte_end":468372,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":472673,"byte_end":472677,"line_start":167,"line_end":167,"column_start":34,"column_end":38},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6745},"to":{"krate":19,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/take.rs","byte_start":473314,"byte_end":473318,"line_start":189,"line_end":189,"column_start":40,"column_end":44},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6745},"to":{"krate":19,"index":27}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":475227,"byte_end":475233,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":477336,"byte_end":477342,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6757},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/window.rs","byte_start":477489,"byte_end":477495,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6757},"to":{"krate":2,"index":1800}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write.rs","byte_start":478016,"byte_end":478021,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6764},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write.rs","byte_start":478074,"byte_end":478079,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write.rs","byte_start":478241,"byte_end":478246,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6764},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_vectored.rs","byte_start":478930,"byte_end":478943,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6773},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_vectored.rs","byte_start":478996,"byte_end":479009,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_vectored.rs","byte_start":479182,"byte_end":479195,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6773},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_all.rs","byte_start":479862,"byte_end":479870,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6782},"to":{"krate":2,"index":1921}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_all.rs","byte_start":479923,"byte_end":479931,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/write_all.rs","byte_start":480097,"byte_end":480105,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6782},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":389294,"byte_end":389303,"line_start":128,"line_end":128,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":19,"index":17},"to":{"krate":0,"index":4560}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397276,"byte_end":397277,"line_start":377,"line_end":377,"column_start":46,"column_end":47},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":4576},"to":{"krate":0,"index":4560}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":397380,"byte_end":397390,"line_start":380,"line_end":380,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":19,"index":20},"to":{"krate":0,"index":4577}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401372,"byte_end":401373,"line_start":508,"line_end":508,"column_start":48,"column_end":49},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":4587},"to":{"krate":0,"index":4577}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401474,"byte_end":401483,"line_start":511,"line_end":511,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":19,"index":25},"to":{"krate":0,"index":4588}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":401907,"byte_end":401908,"line_start":524,"line_end":524,"column_start":46,"column_end":47},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":4591},"to":{"krate":0,"index":4588}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":402015,"byte_end":402027,"line_start":527,"line_end":527,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":19,"index":27},"to":{"krate":0,"index":4592}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/io/mod.rs","byte_start":407437,"byte_end":407438,"line_start":675,"line_end":675,"column_start":52,"column_end":53},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":4599},"to":{"krate":0,"index":4592}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8353978,"byte_end":8353983,"line_start":18,"line_end":18,"column_start":32,"column_end":37},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6813},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8354316,"byte_end":8354321,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6813},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8354414,"byte_end":8354419,"line_start":34,"line_end":34,"column_start":30,"column_end":35},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":6813},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8354557,"byte_end":8354563,"line_start":45,"line_end":45,"column_start":6,"column_end":12},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":6827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355107,"byte_end":8355112,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":6813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8355688,"byte_end":8355693,"line_start":90,"line_end":90,"column_start":17,"column_end":22},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":6813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8358842,"byte_end":8358857,"line_start":181,"line_end":181,"column_start":32,"column_end":47},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":6850},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8359367,"byte_end":8359382,"line_start":197,"line_end":197,"column_start":33,"column_end":48},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":6850},"to":{"krate":15,"index":17}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8359499,"byte_end":8359514,"line_start":203,"line_end":203,"column_start":32,"column_end":47},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":6850},"to":{"krate":2,"index":8075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8360743,"byte_end":8360758,"line_start":239,"line_end":239,"column_start":26,"column_end":41},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":6850},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8361360,"byte_end":8361370,"line_start":258,"line_end":258,"column_start":21,"column_end":31},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":6869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8362360,"byte_end":8362370,"line_start":288,"line_end":288,"column_start":45,"column_end":55},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":6869},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8362615,"byte_end":8362625,"line_start":297,"line_end":297,"column_start":26,"column_end":36},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":6869},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8362723,"byte_end":8362733,"line_start":303,"line_end":303,"column_start":27,"column_end":37},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":6869},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8362874,"byte_end":8362884,"line_start":310,"line_end":310,"column_start":30,"column_end":40},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":6869},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8363298,"byte_end":8363314,"line_start":323,"line_end":323,"column_start":32,"column_end":48},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":6892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8364422,"byte_end":8364438,"line_start":354,"line_end":354,"column_start":56,"column_end":72},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":6892},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8364703,"byte_end":8364719,"line_start":363,"line_end":363,"column_start":37,"column_end":53},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":6892},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8364831,"byte_end":8364847,"line_start":369,"line_end":369,"column_start":38,"column_end":54},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":6892},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8364990,"byte_end":8365006,"line_start":376,"line_end":376,"column_start":41,"column_end":57},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":6892},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365283,"byte_end":8365288,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":6813},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365334,"byte_end":8365339,"line_start":385,"line_end":385,"column_start":40,"column_end":45},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":6813},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365506,"byte_end":8365521,"line_start":389,"line_end":389,"column_start":40,"column_end":55},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":6850},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365625,"byte_end":8365640,"line_start":391,"line_end":391,"column_start":33,"column_end":48},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":6850},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365844,"byte_end":8365854,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":6869},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365904,"byte_end":8365914,"line_start":396,"line_end":396,"column_start":40,"column_end":50},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":6869},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8365975,"byte_end":8365991,"line_start":397,"line_end":397,"column_start":51,"column_end":67},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":6892},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/mutex.rs","byte_start":8366055,"byte_end":8366071,"line_start":398,"line_end":398,"column_start":51,"column_end":67},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":6892},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8368075,"byte_end":8368080,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":6991},"to":{"krate":2,"index":1882}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8368117,"byte_end":8368122,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":6991},"to":{"krate":2,"index":1894}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8368138,"byte_end":8368144,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":6985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8373840,"byte_end":8373845,"line_start":193,"line_end":193,"column_start":18,"column_end":23},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":6991},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8375102,"byte_end":8375113,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":6998},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8375276,"byte_end":8375287,"line_start":241,"line_end":241,"column_start":29,"column_end":40},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":6998},"to":{"krate":2,"index":2064}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8375425,"byte_end":8375436,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":6998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lock/bilock.rs","byte_start":8375788,"byte_end":8375799,"line_start":256,"line_end":256,"column_start":18,"column_end":29},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":6998},"to":{"krate":2,"index":2075}}]}