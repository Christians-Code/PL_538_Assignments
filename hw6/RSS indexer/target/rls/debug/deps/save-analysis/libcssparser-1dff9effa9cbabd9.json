{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9","program":"/home/vpatil/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cssparser","/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=1dff9effa9cbabd9","-C","extra-filename=-1dff9effa9cbabd9","--out-dir","/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps","-L","dependency=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps","--extern","cssparser_macros=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libcssparser_macros-8732a2c853390ccf.so","--extern","dtoa_short=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libdtoa_short-083a56164977a231.rmeta","--extern","itoa=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libitoa-92b517a589650457.rmeta","--extern","matches=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libmatches-66c6ece3f0ec3a7c.rmeta","--extern","phf=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libphf-deb1e8dbe2b4cc46.rmeta","--extern","procedural_masquerade=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libprocedural_masquerade-34112a69b4c6587b.rmeta","--extern","smallvec=/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libsmallvec-635eca0cf843772a.rmeta","--cap-lints","allow","--cfg","rustc_has_pr45225","--cfg","has_std__mem__MaybeUninit","--error-format=json","--sysroot","/home/vpatil/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/deps/libcssparser-1dff9effa9cbabd9.rmeta"},"prelude":{"crate_id":{"name":"cssparser","disambiguator":[3152784443533119535,725103667080454399]},"crate_root":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src","external_crates":[{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15682290646506683676,14718567046286836371]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[13518982493124233533,12391336102434922224]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7248215118149796407,5784829660206374225]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17708477222956396348,13233362623726710952]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8402686647371542786,4893528090212846480]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12429915295247123903,16936150619785298801]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3561444793845825560,808161116134598189]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15626283292208498598,10979253865745053481]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9878202165149462890,17449959146959421140]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[749461474745232681,11698756817203002328]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3051499033766592682,13434072314992821142]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5967091660134880975,16425511823645009085]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10102111148853945701,5773407069226950463]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7496764460755907832,13683447438519276603]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":15,"id":{"name":"dtoa_short","disambiguator":[2619487040686798797,5561096513040915941]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":16,"id":{"name":"dtoa","disambiguator":[10366299344659620280,12508627786928450820]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":17,"id":{"name":"itoa","disambiguator":[15969073660972747993,1926777547729464651]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":18,"id":{"name":"cssparser_macros","disambiguator":[11085474143591215886,2527508660170235237]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":19,"id":{"name":"matches","disambiguator":[8724539314964635124,3117568813519857338]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":20,"id":{"name":"procedural_masquerade","disambiguator":[15569159203381160164,16873314305313611695]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":21,"id":{"name":"phf","disambiguator":[14144927252999909079,6456577984733983259]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":22,"id":{"name":"phf_shared","disambiguator":[13563702956460296270,16047430913949180279]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":23,"id":{"name":"siphasher","disambiguator":[3066190384416421071,15654573325586097817]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":24,"id":{"name":"smallvec","disambiguator":[2164621668374336569,10046089598261013622]}},{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","num":25,"id":{"name":"maybe_uninit","disambiguator":[13787388561393359241,12153365983509401142]}}],"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":206,"byte_end":4385,"line_start":5,"line_end":146,"column_start":1,"column_end":11}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":2874,"byte_end":2875,"line_start":93,"line_end":93,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":2899,"byte_end":2918,"line_start":96,"line_end":96,"column_start":5,"column_end":24},"alias_span":null,"name":"parse_color_keyword","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":2920,"byte_end":2933,"line_start":96,"line_end":96,"column_start":26,"column_end":39},"alias_span":null,"name":"AngleOrNumber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1366},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":2935,"byte_end":2940,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":248},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":2942,"byte_end":2962,"line_start":96,"line_end":96,"column_start":48,"column_end":68},"alias_span":null,"name":"ColorComponentParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":2964,"byte_end":2982,"line_start":96,"line_end":96,"column_start":70,"column_end":88},"alias_span":null,"name":"NumberOrPercentage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1352},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":2984,"byte_end":2988,"line_start":96,"line_end":96,"column_start":90,"column_end":94},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3013,"byte_end":3021,"line_start":98,"line_end":98,"column_start":21,"column_end":29},"alias_span":null,"name":"CowRcStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3044,"byte_end":3063,"line_start":99,"line_end":99,"column_start":22,"column_end":41},"alias_span":null,"name":"stylesheet_encoding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":375},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3065,"byte_end":3080,"line_start":99,"line_end":99,"column_start":43,"column_end":58},"alias_span":null,"name":"EncodingSupport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3096,"byte_end":3105,"line_start":100,"line_end":100,"column_start":14,"column_end":23},"alias_span":null,"name":"parse_nth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1459},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3124,"byte_end":3139,"line_start":101,"line_end":101,"column_start":18,"column_end":33},"alias_span":null,"name":"BasicParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1433},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3141,"byte_end":3160,"line_start":101,"line_end":101,"column_start":35,"column_end":54},"alias_span":null,"name":"BasicParseErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1500},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3162,"byte_end":3172,"line_start":101,"line_end":101,"column_start":56,"column_end":66},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3174,"byte_end":3188,"line_start":101,"line_end":101,"column_start":68,"column_end":82},"alias_span":null,"name":"ParseErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":462},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3208,"byte_end":3217,"line_start":102,"line_end":102,"column_start":18,"column_end":27},"alias_span":null,"name":"Delimiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1539},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3219,"byte_end":3229,"line_start":102,"line_end":102,"column_start":29,"column_end":39},"alias_span":null,"name":"Delimiters","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3231,"byte_end":3237,"line_start":102,"line_end":102,"column_start":41,"column_end":47},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3239,"byte_end":3250,"line_start":102,"line_end":102,"column_start":49,"column_end":60},"alias_span":null,"name":"ParserInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1424},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3252,"byte_end":3263,"line_start":102,"line_end":102,"column_start":62,"column_end":73},"alias_span":null,"name":"ParserState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3298,"byte_end":3313,"line_start":103,"line_end":103,"column_start":33,"column_end":48},"alias_span":null,"name":"parse_important","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3348,"byte_end":3369,"line_start":104,"line_end":104,"column_start":34,"column_end":55},"alias_span":null,"name":"parse_one_declaration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3371,"byte_end":3392,"line_start":104,"line_end":104,"column_start":57,"column_end":78},"alias_span":null,"name":"DeclarationListParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3394,"byte_end":3411,"line_start":104,"line_end":104,"column_start":80,"column_end":97},"alias_span":null,"name":"DeclarationParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3447,"byte_end":3461,"line_start":105,"line_end":105,"column_start":34,"column_end":48},"alias_span":null,"name":"parse_one_rule","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":151},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3463,"byte_end":3477,"line_start":105,"line_end":105,"column_start":50,"column_end":64},"alias_span":null,"name":"RuleListParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3513,"byte_end":3525,"line_start":106,"line_end":106,"column_start":34,"column_end":46},"alias_span":null,"name":"AtRuleParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3527,"byte_end":3537,"line_start":106,"line_end":106,"column_start":48,"column_end":58},"alias_span":null,"name":"AtRuleType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3539,"byte_end":3558,"line_start":106,"line_end":106,"column_start":60,"column_end":79},"alias_span":null,"name":"QualifiedRuleParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":629},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3587,"byte_end":3607,"line_start":108,"line_end":108,"column_start":5,"column_end":25},"alias_span":null,"name":"serialize_identifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":631},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3609,"byte_end":3623,"line_start":108,"line_end":108,"column_start":27,"column_end":41},"alias_span":null,"name":"serialize_name","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":635},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3625,"byte_end":3641,"line_start":108,"line_end":108,"column_start":43,"column_end":59},"alias_span":null,"name":"serialize_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":637},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3643,"byte_end":3658,"line_start":108,"line_end":108,"column_start":61,"column_end":76},"alias_span":null,"name":"CssStringWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":613},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3660,"byte_end":3665,"line_start":108,"line_end":108,"column_start":78,"column_end":83},"alias_span":null,"name":"ToCss","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1675},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3671,"byte_end":3693,"line_start":109,"line_end":109,"column_start":5,"column_end":27},"alias_span":null,"name":"TokenSerializationType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1337},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3718,"byte_end":3732,"line_start":111,"line_end":111,"column_start":21,"column_end":35},"alias_span":null,"name":"SourceLocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1314},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3734,"byte_end":3748,"line_start":111,"line_end":111,"column_start":37,"column_end":51},"alias_span":null,"name":"SourcePosition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1191},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3750,"byte_end":3755,"line_start":111,"line_end":111,"column_start":53,"column_end":58},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1752},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3781,"byte_end":3793,"line_start":112,"line_end":112,"column_start":24,"column_end":36},"alias_span":null,"name":"UnicodeRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":3841,"byte_end":3864,"line_start":116,"line_end":116,"column_start":17,"column_end":40},"alias_span":null,"name":"_internal__to_lowercase","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":206,"byte_end":4385,"line_start":5,"line_end":146,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":28},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":69},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":297},{"krate":0,"index":374},{"krate":0,"index":383},{"krate":0,"index":401},{"krate":0,"index":602},{"krate":0,"index":660}],"decl_id":null,"docs":"Implementation of [CSS Syntax Module Level 3](https://drafts.csswg.org/css-syntax/) for Rust.","sig":null,"attributes":[{"value":"crate_name = \"cssparser\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":206,"byte_end":234,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"crate_type = \"rlib\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":235,"byte_end":258,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":306,"byte_end":328,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"!\n\nImplementation of [CSS Syntax Module Level 3](https://drafts.csswg.org/css-syntax/) for Rust.\n\n# Input\n\nEverything is based on `Parser` objects, which borrow a `&str` input.\nIf you have bytes (from a file, the network, or something)\nand want to support character encodings other than UTF-8,\nsee the `stylesheet_encoding` function,\nwhich can be used together with rust-encoding or encoding-rs.\n\n# Conventions for parsing functions\n\n* Take (at least) a `input: &mut cssparser::Parser` parameter\n* Return `Result<_, ()>`\n* When returning `Ok(_)`,\n  the function must have consumed exactly the amount of input that represents the parsed value.\n* When returning `Err(())`, any amount of input may have been consumed.\n\nAs a consequence, when calling another parsing function, either:\n\n* Any `Err(())` return value must be propagated.\n  This happens by definition for tail calls,\n  and can otherwise be done with the `?` operator.\n* Or the call must be wrapped in a `Parser::try` call.\n  `try` takes a closure that takes a `Parser` and returns a `Result`,\n  calls it once,\n  and returns itself that same result.\n  If the result is `Err`,\n  it restores the position inside the input to the one saved before calling the closure.\n\nExamples:\n\n```{rust,ignore}\n// 'none' | <image>\nfn parse_background_image(context: &ParserContext, input: &mut Parser)\n                                    -> Result<Option<Image>, ()> {\n    if input.try_parse(|input| input.expect_ident_matching(\"none\")).is_ok() {\n        Ok(None)\n    } else {\n        Image::parse(context, input).map(Some)  // tail call\n    }\n}\n```\n\n```{rust,ignore}\n// [ <length> | <percentage> ] [ <length> | <percentage> ]?\nfn parse_border_spacing(_context: &ParserContext, input: &mut Parser)\n                          -> Result<(LengthOrPercentage, LengthOrPercentage), ()> {\n    let first = LengthOrPercentage::parse?;\n    let second = input.try_parse(LengthOrPercentage::parse).unwrap_or(first);\n    (first, second)\n}\n```\n\n*/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":330,"byte_end":2306,"line_start":10,"line_end":66,"column_start":1,"column_end":3}},{"value":"recursion_limit = \"200\"","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/lib.rs","byte_start":2308,"byte_end":2335,"line_start":68,"line_end":68,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":66},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":10167,"byte_end":10190,"line_start":157,"line_end":157,"column_start":8,"column_end":31},"name":"_internal__to_lowercase","qualname":"::macros::_internal__to_lowercase","value":"fn <'a> (buffer: &'a mut [u8], input: &'a str) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail of match_ignore_ascii_case! and ascii_case_insensitive_phf_map! macros.","sig":null,"attributes":[{"value":"/ Implementation detail of match_ignore_ascii_case! and ascii_case_insensitive_phf_map! macros.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":9762,"byte_end":9859,"line_start":149,"line_end":149,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":9860,"byte_end":9863,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ **This function is not part of the public API. It can change or be removed between any verisons.**","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":9864,"byte_end":9966,"line_start":151,"line_end":151,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":9967,"byte_end":9970,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ If `input` is larger than buffer, return `None`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":9971,"byte_end":10023,"line_start":153,"line_end":153,"column_start":1,"column_end":53}},{"value":"/ Otherwise, return `input` ASCII-lowercased, using `buffer` as temporary space if necessary.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":10024,"byte_end":10119,"line_start":154,"line_end":154,"column_start":1,"column_end":96}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/macros.rs","byte_start":10135,"byte_end":10159,"line_start":156,"line_end":156,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":11891,"byte_end":11906,"line_start":16,"line_end":16,"column_start":8,"column_end":23},"name":"parse_important","qualname":"::rules_and_declarations::parse_important","value":"fn <'i, 't> (input: &mut Parser<'i, 't>) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse `!important`.","sig":null,"attributes":[{"value":"/ Parse `!important`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":11723,"byte_end":11746,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":11747,"byte_end":11750,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Typical usage is `input.try_parse(parse_important).is_ok()`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":11751,"byte_end":11814,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ at the end of a `DeclarationParser::parse_value` implementation.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":11815,"byte_end":11883,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":91},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12465,"byte_end":12477,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"WithoutBlock","qualname":"::rules_and_declarations::AtRuleType::WithoutBlock","value":"AtRuleType::WithoutBlock(P)","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" The at-rule is expected to end with a `;` semicolon. Example: `@import`.","sig":null,"attributes":[{"value":"/ The at-rule is expected to end with a `;` semicolon. Example: `@import`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12258,"byte_end":12334,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12339,"byte_end":12342,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The value is the representation of all data of the rule which would be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12347,"byte_end":12421,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ handled in rule_without_block.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12426,"byte_end":12460,"line_start":28,"line_end":28,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":94},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12655,"byte_end":12664,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"WithBlock","qualname":"::rules_and_declarations::AtRuleType::WithBlock","value":"AtRuleType::WithBlock(PB)","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" The at-rule is expected to have a a `{ /* ... */ }` block. Example: `@media`","sig":null,"attributes":[{"value":"/ The at-rule is expected to have a a `{ /* ... */ }` block. Example: `@media`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12487,"byte_end":12567,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12572,"byte_end":12575,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The value is the representation of the \"prelude\" part of the rule.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12580,"byte_end":12650,"line_start":33,"line_end":33,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":88},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12234,"byte_end":12244,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"name":"AtRuleType","qualname":"::rules_and_declarations::AtRuleType","value":"AtRuleType::{WithoutBlock, WithBlock}","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":94}],"decl_id":null,"docs":" The return value for `AtRuleParser::parse_prelude`.\n Indicates whether the at-rule is expected to have a `{ /* ... */ }` block\n or end with a `;` semicolon.\n","sig":null,"attributes":[{"value":"/ The return value for `AtRuleParser::parse_prelude`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12058,"byte_end":12113,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/ Indicates whether the at-rule is expected to have a `{ /* ... */ }` block","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12114,"byte_end":12191,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ or end with a `;` semicolon.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12192,"byte_end":12224,"line_start":23,"line_end":23,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12895,"byte_end":12912,"line_start":41,"line_end":41,"column_start":11,"column_end":28},"name":"DeclarationParser","qualname":"::rules_and_declarations::DeclarationParser","value":"DeclarationParser<'i>","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":" A trait to provide various parsing of declaration values.","sig":null,"attributes":[{"value":"/ A trait to provide various parsing of declaration values.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12673,"byte_end":12734,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12735,"byte_end":12738,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ For example, there could be different implementations for property declarations in style rules","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12739,"byte_end":12837,"line_start":39,"line_end":39,"column_start":1,"column_end":99}},{"value":"/ and for descriptors in `@font-face` rules.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12838,"byte_end":12884,"line_start":40,"line_end":40,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12982,"byte_end":12993,"line_start":43,"line_end":43,"column_start":10,"column_end":21},"name":"Declaration","qualname":"::rules_and_declarations::DeclarationParser::Declaration","value":"type Declaration;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" The finished representation of a declaration.\n","sig":null,"attributes":[{"value":"/ The finished representation of a declaration.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":12923,"byte_end":12972,"line_start":42,"line_end":42,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":100},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13091,"byte_end":13096,"line_start":46,"line_end":46,"column_start":10,"column_end":15},"name":"Error","qualname":"::rules_and_declarations::DeclarationParser::Error","value":"type Error: 'i;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" The error type that is included in the ParseError value that can be returned.\n","sig":null,"attributes":[{"value":"/ The error type that is included in the ParseError value that can be returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13000,"byte_end":13081,"line_start":45,"line_end":45,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14024,"byte_end":14035,"line_start":65,"line_end":65,"column_start":8,"column_end":19},"name":"parse_value","qualname":"::rules_and_declarations::DeclarationParser::parse_value","value":"fn <'t> (&mut self, name: CowRcStr<'i>, input: &mut Parser<'i, 't>) -> Result<Self::Declaration, ParseError<'i, Self::Error>>","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Parse the value of a declaration with the given `name`.","sig":null,"attributes":[{"value":"/ Parse the value of a declaration with the given `name`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13107,"byte_end":13166,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13171,"byte_end":13174,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Return the finished representation for the declaration","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13179,"byte_end":13237,"line_start":50,"line_end":50,"column_start":5,"column_end":63}},{"value":"/ as returned by `DeclarationListParser::next`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13242,"byte_end":13291,"line_start":51,"line_end":51,"column_start":5,"column_end":54}},{"value":"/ or `Err(())` to ignore the entire declaration as invalid.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13296,"byte_end":13357,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13362,"byte_end":13365,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Declaration name matching should be case-insensitive in the ASCII range.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13370,"byte_end":13446,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ This can be done with `std::ascii::Ascii::eq_ignore_ascii_case`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13451,"byte_end":13519,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ or with the `match_ignore_ascii_case!` macro.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13524,"byte_end":13573,"line_start":56,"line_end":56,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13578,"byte_end":13581,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The given `input` is a \"delimited\" parser","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13586,"byte_end":13631,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/ that ends wherever the declaration value should end.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13636,"byte_end":13692,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/ (In declaration lists, before the next semicolon or end of the current block.)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13697,"byte_end":13779,"line_start":60,"line_end":60,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13784,"byte_end":13787,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ If `!important` can be used in a given context,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13792,"byte_end":13843,"line_start":62,"line_end":62,"column_start":5,"column_end":56}},{"value":"/ `input.try_parse(parse_important).is_ok()` should be used at the end","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13848,"byte_end":13920,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ of the implementation of this method and the result should be part of the return value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":13925,"byte_end":14016,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14647,"byte_end":14659,"line_start":81,"line_end":81,"column_start":11,"column_end":23},"name":"AtRuleParser","qualname":"::rules_and_declarations::AtRuleParser","value":"AtRuleParser<'i>","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" A trait to provide various parsing of at-rules.","sig":null,"attributes":[{"value":"/ A trait to provide various parsing of at-rules.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14192,"byte_end":14243,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14244,"byte_end":14247,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, there could be different implementations for top-level at-rules","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14248,"byte_end":14328,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ (`@media`, `@font-face`, …)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14329,"byte_end":14362,"line_start":75,"line_end":75,"column_start":1,"column_end":32}},{"value":"/ and for page-margin rules inside `@page`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14363,"byte_end":14408,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14409,"byte_end":14412,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Default implementations that reject all at-rules are provided,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14413,"byte_end":14479,"line_start":78,"line_end":78,"column_start":1,"column_end":67}},{"value":"/ so that `impl AtRuleParser<(), ()> for ... {}` can be used","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14480,"byte_end":14542,"line_start":79,"line_end":79,"column_start":1,"column_end":63}},{"value":"/ for using `DeclarationListParser` to parse a declarations list with only qualified rules.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14543,"byte_end":14636,"line_start":80,"line_end":80,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":105},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14755,"byte_end":14769,"line_start":83,"line_end":83,"column_start":10,"column_end":24},"name":"PreludeNoBlock","qualname":"::rules_and_declarations::AtRuleParser::PreludeNoBlock","value":"type PreludeNoBlock;","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The intermediate representation of prelude of an at-rule without block;\n","sig":null,"attributes":[{"value":"/ The intermediate representation of prelude of an at-rule without block;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14670,"byte_end":14745,"line_start":82,"line_end":82,"column_start":5,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":106},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14858,"byte_end":14870,"line_start":86,"line_end":86,"column_start":10,"column_end":22},"name":"PreludeBlock","qualname":"::rules_and_declarations::AtRuleParser::PreludeBlock","value":"type PreludeBlock;","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The intermediate representation of prelude of an at-rule with block;\n","sig":null,"attributes":[{"value":"/ The intermediate representation of prelude of an at-rule with block;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14776,"byte_end":14848,"line_start":85,"line_end":85,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":107},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14933,"byte_end":14939,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"AtRule","qualname":"::rules_and_declarations::AtRuleParser::AtRule","value":"type AtRule;","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The finished representation of an at-rule.\n","sig":null,"attributes":[{"value":"/ The finished representation of an at-rule.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14877,"byte_end":14923,"line_start":88,"line_end":88,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":108},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15037,"byte_end":15042,"line_start":92,"line_end":92,"column_start":10,"column_end":15},"name":"Error","qualname":"::rules_and_declarations::AtRuleParser::Error","value":"type Error: 'i;","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" The error type that is included in the ParseError value that can be returned.\n","sig":null,"attributes":[{"value":"/ The error type that is included in the ParseError value that can be returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":14946,"byte_end":15027,"line_start":91,"line_end":91,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15865,"byte_end":15878,"line_start":111,"line_end":111,"column_start":8,"column_end":21},"name":"parse_prelude","qualname":"::rules_and_declarations::AtRuleParser::parse_prelude","value":"fn <'t> (&mut self, name: CowRcStr<'i>, input: &mut Parser<'i, 't>) -> Result<AtRuleType<Self::PreludeNoBlock, Self::PreludeBlock>,\n       ParseError<'i, Self::Error>>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Parse the prelude of an at-rule with the given `name`.","sig":null,"attributes":[{"value":"/ Parse the prelude of an at-rule with the given `name`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15053,"byte_end":15111,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15116,"byte_end":15119,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Return the representation of the prelude and the type of at-rule,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15124,"byte_end":15193,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ or `Err(())` to ignore the entire at-rule as invalid.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15198,"byte_end":15255,"line_start":97,"line_end":97,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15260,"byte_end":15263,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ See `AtRuleType`’s documentation for the return value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15268,"byte_end":15328,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15333,"byte_end":15336,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The prelude is the part after the at-keyword","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15341,"byte_end":15389,"line_start":101,"line_end":101,"column_start":5,"column_end":53}},{"value":"/ and before the `;` semicolon or `{ /* ... */ }` block.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15394,"byte_end":15452,"line_start":102,"line_end":102,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15457,"byte_end":15460,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ At-rule name matching should be case-insensitive in the ASCII range.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15465,"byte_end":15537,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ This can be done with `std::ascii::Ascii::eq_ignore_ascii_case`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15542,"byte_end":15610,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ or with the `match_ignore_ascii_case!` macro.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15615,"byte_end":15664,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15669,"byte_end":15672,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The given `input` is a \"delimited\" parser","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15677,"byte_end":15722,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ that ends wherever the prelude should end.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15727,"byte_end":15773,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"/ (Before the next semicolon, the next `{`, or the end of the current block.)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":15778,"byte_end":15857,"line_start":110,"line_end":110,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":16590,"byte_end":16608,"line_start":130,"line_end":130,"column_start":8,"column_end":26},"name":"rule_without_block","qualname":"::rules_and_declarations::AtRuleParser::rule_without_block","value":"fn (&mut self, prelude: Self::PreludeNoBlock, location: SourceLocation) -> Self::AtRule","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" End an at-rule which doesn't have block. Return the finished\n representation of the at-rule.","sig":null,"attributes":[{"value":"/ End an at-rule which doesn't have block. Return the finished","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":16199,"byte_end":16263,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ representation of the at-rule.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":16268,"byte_end":16302,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":16307,"byte_end":16310,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The location passed in is source location of the start of the prelude.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":16315,"byte_end":16389,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":16394,"byte_end":16397,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This is only called when `parse_prelude` returned `WithoutBlock`, and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":16402,"byte_end":16475,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ either the `;` semicolon indeed follows the prelude, or parser is at","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":16480,"byte_end":16552,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ the end of the input.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":16557,"byte_end":16582,"line_start":129,"line_end":129,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17500,"byte_end":17511,"line_start":153,"line_end":153,"column_start":8,"column_end":19},"name":"parse_block","qualname":"::rules_and_declarations::AtRuleParser::parse_block","value":"fn <'t> (&mut self, prelude: Self::PreludeBlock, location: SourceLocation, input: &mut Parser<'i, 't>) -> Result<Self::AtRule, ParseError<'i, Self::Error>>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Parse the content of a `{ /* ... */ }` block for the body of the at-rule.","sig":null,"attributes":[{"value":"/ Parse the content of a `{ /* ... */ }` block for the body of the at-rule.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":16981,"byte_end":17058,"line_start":143,"line_end":143,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17063,"byte_end":17066,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The location passed in is source location of the start of the prelude.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17071,"byte_end":17145,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17150,"byte_end":17153,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Return the finished representation of the at-rule","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17158,"byte_end":17211,"line_start":147,"line_end":147,"column_start":5,"column_end":58}},{"value":"/ as returned by `RuleListParser::next` or `DeclarationListParser::next`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17216,"byte_end":17291,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ or `Err(())` to ignore the entire at-rule as invalid.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17296,"byte_end":17353,"line_start":149,"line_end":149,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17358,"byte_end":17361,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This is only called when `parse_prelude` returned `WithBlock`, and a block","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17366,"byte_end":17444,"line_start":151,"line_end":151,"column_start":5,"column_end":83}},{"value":"/ was indeed found following the prelude.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17449,"byte_end":17492,"line_start":152,"line_end":152,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18443,"byte_end":18462,"line_start":176,"line_end":176,"column_start":11,"column_end":30},"name":"QualifiedRuleParser","qualname":"::rules_and_declarations::QualifiedRuleParser","value":"QualifiedRuleParser<'i>","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121}],"decl_id":null,"docs":" A trait to provide various parsing of qualified rules.","sig":null,"attributes":[{"value":"/ A trait to provide various parsing of qualified rules.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17856,"byte_end":17914,"line_start":166,"line_end":166,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17915,"byte_end":17918,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ For example, there could be different implementations","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17919,"byte_end":17976,"line_start":168,"line_end":168,"column_start":1,"column_end":58}},{"value":"/ for top-level qualified rules (i.e. style rules with Selectors as prelude)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":17977,"byte_end":18055,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ and for qualified rules inside `@keyframes` (keyframe rules with keyframe selectors as prelude).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18056,"byte_end":18156,"line_start":170,"line_end":170,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18157,"byte_end":18160,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Default implementations that reject all qualified rules are provided,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18161,"byte_end":18234,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ so that `impl QualifiedRuleParser<(), ()> for ... {}` can be used","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18235,"byte_end":18304,"line_start":173,"line_end":173,"column_start":1,"column_end":70}},{"value":"/ for example for using `RuleListParser` to parse a rule list with only at-rules","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18305,"byte_end":18387,"line_start":174,"line_end":174,"column_start":1,"column_end":83}},{"value":"/ (such as inside `@font-feature-values`).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18388,"byte_end":18432,"line_start":175,"line_end":175,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":116},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18547,"byte_end":18554,"line_start":178,"line_end":178,"column_start":10,"column_end":17},"name":"Prelude","qualname":"::rules_and_declarations::QualifiedRuleParser::Prelude","value":"type Prelude;","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" The intermediate representation of a qualified rule prelude.\n","sig":null,"attributes":[{"value":"/ The intermediate representation of a qualified rule prelude.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18473,"byte_end":18537,"line_start":177,"line_end":177,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":117},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18623,"byte_end":18636,"line_start":181,"line_end":181,"column_start":10,"column_end":23},"name":"QualifiedRule","qualname":"::rules_and_declarations::QualifiedRuleParser::QualifiedRule","value":"type QualifiedRule;","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" The finished representation of a qualified rule.\n","sig":null,"attributes":[{"value":"/ The finished representation of a qualified rule.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18561,"byte_end":18613,"line_start":180,"line_end":180,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":118},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18734,"byte_end":18739,"line_start":184,"line_end":184,"column_start":10,"column_end":15},"name":"Error","qualname":"::rules_and_declarations::QualifiedRuleParser::Error","value":"type Error: 'i;","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" The error type that is included in the ParseError value that can be returned.\n","sig":null,"attributes":[{"value":"/ The error type that is included in the ParseError value that can be returned.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18643,"byte_end":18724,"line_start":183,"line_end":183,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19165,"byte_end":19178,"line_start":195,"line_end":195,"column_start":8,"column_end":21},"name":"parse_prelude","qualname":"::rules_and_declarations::QualifiedRuleParser::parse_prelude","value":"fn <'t> (&mut self, input: &mut Parser<'i, 't>) -> Result<Self::Prelude, ParseError<'i, Self::Error>>","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Parse the prelude of a qualified rule. For style rules, this is as Selector list.","sig":null,"attributes":[{"value":"/ Parse the prelude of a qualified rule. For style rules, this is as Selector list.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18750,"byte_end":18835,"line_start":186,"line_end":186,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18840,"byte_end":18843,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Return the representation of the prelude,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18848,"byte_end":18893,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/ or `Err(())` to ignore the entire at-rule as invalid.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18898,"byte_end":18955,"line_start":189,"line_end":189,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18960,"byte_end":18963,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The prelude is the part before the `{ /* ... */ }` block.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":18968,"byte_end":19029,"line_start":191,"line_end":191,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19034,"byte_end":19037,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The given `input` is a \"delimited\" parser","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19042,"byte_end":19087,"line_start":193,"line_end":193,"column_start":5,"column_end":50}},{"value":"/ that ends where the prelude should end (before the next `{`).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19092,"byte_end":19157,"line_start":194,"line_end":194,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19768,"byte_end":19779,"line_start":210,"line_end":210,"column_start":8,"column_end":19},"name":"parse_block","qualname":"::rules_and_declarations::QualifiedRuleParser::parse_block","value":"fn <'t> (&mut self, prelude: Self::Prelude, location: SourceLocation, input: &mut Parser<'i, 't>) -> Result<Self::QualifiedRule, ParseError<'i, Self::Error>>","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Parse the content of a `{ /* ... */ }` block for the body of the qualified rule.","sig":null,"attributes":[{"value":"/ Parse the content of a `{ /* ... */ }` block for the body of the qualified rule.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19407,"byte_end":19491,"line_start":203,"line_end":203,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19496,"byte_end":19499,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The location passed in is source location of the start of the prelude.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19504,"byte_end":19578,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19583,"byte_end":19586,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Return the finished representation of the qualified rule","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19591,"byte_end":19651,"line_start":207,"line_end":207,"column_start":5,"column_end":65}},{"value":"/ as returned by `RuleListParser::next`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19656,"byte_end":19698,"line_start":208,"line_end":208,"column_start":5,"column_end":47}},{"value":"/ or `Err(())` to ignore the entire at-rule as invalid.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":19703,"byte_end":19760,"line_start":209,"line_end":209,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":123},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20195,"byte_end":20216,"line_start":224,"line_end":224,"column_start":12,"column_end":33},"name":"DeclarationListParser","qualname":"::rules_and_declarations::DeclarationListParser","value":"DeclarationListParser { input, parser }","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"decl_id":null,"docs":" Provides an iterator for declaration list parsing.\n","sig":null,"attributes":[{"value":"/ Provides an iterator for declaration list parsing.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20129,"byte_end":20183,"line_start":223,"line_end":223,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":128},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20306,"byte_end":20311,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"name":"input","qualname":"::rules_and_declarations::DeclarationListParser::input","value":"&'a mut parser::Parser<'i, 't>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" The input given to `DeclarationListParser::new`\n","sig":null,"attributes":[{"value":"/ The input given to `DeclarationListParser::new`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20246,"byte_end":20297,"line_start":225,"line_end":225,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":129},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20403,"byte_end":20409,"line_start":229,"line_end":229,"column_start":9,"column_end":15},"name":"parser","qualname":"::rules_and_declarations::DeclarationListParser::parser","value":"P","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" The parser given to `DeclarationListParser::new`\n","sig":null,"attributes":[{"value":"/ The parser given to `DeclarationListParser::new`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20342,"byte_end":20394,"line_start":228,"line_end":228,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":21381,"byte_end":21384,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"new","qualname":"<DeclarationListParser>::new","value":"fn (input: &'a mut Parser<'i, 't>, parser: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DeclarationListParser` for the given `input` and `parser`.","sig":null,"attributes":[{"value":"/ Create a new `DeclarationListParser` for the given `input` and `parser`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20604,"byte_end":20680,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20685,"byte_end":20688,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that all CSS declaration lists can on principle contain at-rules.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20693,"byte_end":20767,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ Even if no such valid at-rule exists (yet),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20772,"byte_end":20819,"line_start":239,"line_end":239,"column_start":5,"column_end":52}},{"value":"/ this affects error handling: at-rules end at `{}` blocks, not just semicolons.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20824,"byte_end":20906,"line_start":240,"line_end":240,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20911,"byte_end":20914,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The given `parser` therefore needs to implement","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20919,"byte_end":20970,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/ both `DeclarationParser` and `AtRuleParser` traits.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20975,"byte_end":21030,"line_start":243,"line_end":243,"column_start":5,"column_end":60}},{"value":"/ However, the latter can be an empty `impl`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":21035,"byte_end":21081,"line_start":244,"line_end":244,"column_start":5,"column_end":51}},{"value":"/ since `AtRuleParser` provides default implementations of its methods.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":21086,"byte_end":21159,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":21164,"byte_end":21167,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The return type for finished declarations and at-rules also needs to be the same,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":21172,"byte_end":21257,"line_start":247,"line_end":247,"column_start":5,"column_end":90}},{"value":"/ since `<DeclarationListParser as Iterator>::next` can return either.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":21262,"byte_end":21334,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ It could be a custom enum.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":21339,"byte_end":21369,"line_start":249,"line_end":249,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":151},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24045,"byte_end":24059,"line_start":314,"line_end":314,"column_start":12,"column_end":26},"name":"RuleListParser","qualname":"::rules_and_declarations::RuleListParser","value":"RuleListParser { input, parser }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" Provides an iterator for rule list parsing.\n","sig":null,"attributes":[{"value":"/ Provides an iterator for rule list parsing.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":23986,"byte_end":24033,"line_start":313,"line_end":313,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":156},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24142,"byte_end":24147,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"input","qualname":"::rules_and_declarations::RuleListParser::input","value":"&'a mut parser::Parser<'i, 't>","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" The input given to `RuleListParser::new`\n","sig":null,"attributes":[{"value":"/ The input given to `RuleListParser::new`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24089,"byte_end":24133,"line_start":315,"line_end":315,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":157},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24232,"byte_end":24238,"line_start":319,"line_end":319,"column_start":9,"column_end":15},"name":"parser","qualname":"::rules_and_declarations::RuleListParser::parser","value":"P","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" The parser given to `RuleListParser::new`\n","sig":null,"attributes":[{"value":"/ The parser given to `RuleListParser::new`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24178,"byte_end":24223,"line_start":318,"line_end":318,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":25067,"byte_end":25085,"line_start":340,"line_end":340,"column_start":12,"column_end":30},"name":"new_for_stylesheet","qualname":"<RuleListParser>::new_for_stylesheet","value":"fn (input: &'a mut Parser<'i, 't>, parser: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `RuleListParser` for the given `input` at the top-level of a stylesheet\n and the given `parser`.","sig":null,"attributes":[{"value":"/ Create a new `RuleListParser` for the given `input` at the top-level of a stylesheet","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24491,"byte_end":24579,"line_start":330,"line_end":330,"column_start":5,"column_end":93}},{"value":"/ and the given `parser`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24584,"byte_end":24611,"line_start":331,"line_end":331,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24616,"byte_end":24619,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ The given `parser` needs to implement both `QualifiedRuleParser` and `AtRuleParser` traits.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24624,"byte_end":24719,"line_start":333,"line_end":333,"column_start":5,"column_end":100}},{"value":"/ However, either of them can be an empty `impl`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24724,"byte_end":24774,"line_start":334,"line_end":334,"column_start":5,"column_end":55}},{"value":"/ since the traits provide default implementations of their methods.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24779,"byte_end":24849,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24854,"byte_end":24857,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ The return type for finished qualified rules and at-rules also needs to be the same,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24862,"byte_end":24950,"line_start":337,"line_end":337,"column_start":5,"column_end":93}},{"value":"/ since `<RuleListParser as Iterator>::next` can return either.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24955,"byte_end":25020,"line_start":338,"line_end":338,"column_start":5,"column_end":70}},{"value":"/ It could be a custom enum.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":25025,"byte_end":25055,"line_start":339,"line_end":339,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":25655,"byte_end":25674,"line_start":355,"line_end":355,"column_start":12,"column_end":31},"name":"new_for_nested_rule","qualname":"<RuleListParser>::new_for_nested_rule","value":"fn (input: &'a mut Parser<'i, 't>, parser: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same is `new_for_stylesheet`, but should be used for rule lists inside a block\n such as the body of an `@media` rule.","sig":null,"attributes":[{"value":"/ Same is `new_for_stylesheet`, but should be used for rule lists inside a block","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":25307,"byte_end":25389,"line_start":349,"line_end":349,"column_start":5,"column_end":87}},{"value":"/ such as the body of an `@media` rule.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":25394,"byte_end":25435,"line_start":350,"line_end":350,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":25440,"byte_end":25443,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This differs in that `<!--` and `-->` tokens","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":25448,"byte_end":25496,"line_start":352,"line_end":352,"column_start":5,"column_end":53}},{"value":"/ should only be ignored at the stylesheet top-level.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":25501,"byte_end":25556,"line_start":353,"line_end":353,"column_start":5,"column_end":60}},{"value":"/ (This is to deal with legacy work arounds for `<style>` HTML element parsing.)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":25561,"byte_end":25643,"line_start":354,"line_end":354,"column_start":5,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":28320,"byte_end":28341,"line_start":423,"line_end":423,"column_start":8,"column_end":29},"name":"parse_one_declaration","qualname":"::rules_and_declarations::parse_one_declaration","value":"fn <'i, 't, P, E> (input: &mut Parser<'i, 't>, parser: &mut P) -> Result<<P as DeclarationParser<'i>>::Declaration,\n       (ParseError<'i, E>, &'i str)>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single declaration, such as an `( /* ... */ )` parenthesis in an `@supports` prelude.\n","sig":null,"attributes":[{"value":"/ Parse a single declaration, such as an `( /* ... */ )` parenthesis in an `@supports` prelude.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":28215,"byte_end":28312,"line_start":422,"line_end":422,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":28919,"byte_end":28933,"line_start":441,"line_end":441,"column_start":8,"column_end":22},"name":"parse_one_rule","qualname":"::rules_and_declarations::parse_one_rule","value":"fn <'i, 't, R, P, E> (input: &mut Parser<'i, 't>, parser: &mut P) -> Result<R, ParseError<'i, E>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single rule, such as for CSSOM’s `CSSStyleSheet.insertRule`.\n","sig":null,"attributes":[{"value":"/ Parse a single rule, such as for CSSOM’s `CSSStyleSheet.insertRule`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":28837,"byte_end":28911,"line_start":440,"line_end":440,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1193},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7905595,"byte_end":7905600,"line_start":2,"line_end":2,"column_start":94,"column_end":99},"name":"Ident","qualname":"::tokenizer::Token::Ident","value":"Token::Ident(CowRcStr<'a>)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<ident-token>`](https://drafts.csswg.org/css-syntax/#ident-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1196},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7905799,"byte_end":7905808,"line_start":2,"line_end":2,"column_start":298,"column_end":307},"name":"AtKeyword","qualname":"::tokenizer::Token::AtKeyword","value":"Token::AtKeyword(CowRcStr<'a>)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<at-keyword-token>`](https://drafts.csswg.org/css-syntax/#at-keyword-token-diagram)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1199},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7906038,"byte_end":7906042,"line_start":2,"line_end":2,"column_start":537,"column_end":541},"name":"Hash","qualname":"::tokenizer::Token::Hash","value":"Token::Hash(CowRcStr<'a>)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<hash-token>`](https://drafts.csswg.org/css-syntax/#hash-token-diagram) with the type flag set to \"unrestricted\"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1202},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7906262,"byte_end":7906268,"line_start":2,"line_end":2,"column_start":761,"column_end":767},"name":"IDHash","qualname":"::tokenizer::Token::IDHash","value":"Token::IDHash(CowRcStr<'a>)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<hash-token>`](https://drafts.csswg.org/css-syntax/#hash-token-diagram) with the type flag set to \"id\"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1205},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7906455,"byte_end":7906467,"line_start":2,"line_end":2,"column_start":954,"column_end":966},"name":"QuotedString","qualname":"::tokenizer::Token::QuotedString","value":"Token::QuotedString(CowRcStr<'a>)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<string-token>`](https://drafts.csswg.org/css-syntax/#string-token-diagram)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1208},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7906748,"byte_end":7906759,"line_start":2,"line_end":2,"column_start":1247,"column_end":1258},"name":"UnquotedUrl","qualname":"::tokenizer::Token::UnquotedUrl","value":"Token::UnquotedUrl(CowRcStr<'a>)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<url-token>`](https://drafts.csswg.org/css-syntax/#url-token-diagram)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1211},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7906815,"byte_end":7906820,"line_start":2,"line_end":2,"column_start":1314,"column_end":1319},"name":"Delim","qualname":"::tokenizer::Token::Delim","value":"Token::Delim(char)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `<delim-token>`\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1214},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7906927,"byte_end":7906933,"line_start":2,"line_end":2,"column_start":1426,"column_end":1432},"name":"Number","qualname":"::tokenizer::Token::Number","value":"Token::Number { has_sign, value, int_value }","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<number-token>`](https://drafts.csswg.org/css-syntax/#number-token-diagram)\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1218},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7907412,"byte_end":7907422,"line_start":4,"line_end":4,"column_start":108,"column_end":118},"name":"Percentage","qualname":"::tokenizer::Token::Percentage","value":"Token::Percentage { has_sign, unit_value, int_value }","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<percentage-token>`](https://drafts.csswg.org/css-syntax/#percentage-token-diagram)\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1222},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7907887,"byte_end":7907896,"line_start":6,"line_end":6,"column_start":106,"column_end":115},"name":"Dimension","qualname":"::tokenizer::Token::Dimension","value":"Token::Dimension { has_sign, value, int_value, unit }","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<dimension-token>`](https://drafts.csswg.org/css-syntax/#dimension-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7908447,"byte_end":7908457,"line_start":8,"line_end":8,"column_start":108,"column_end":118},"name":"WhiteSpace","qualname":"::tokenizer::Token::WhiteSpace","value":"Token::WhiteSpace(&'a str)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<whitespace-token>`](https://drafts.csswg.org/css-syntax/#whitespace-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1230},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7908741,"byte_end":7908748,"line_start":8,"line_end":8,"column_start":402,"column_end":409},"name":"Comment","qualname":"::tokenizer::Token::Comment","value":"Token::Comment(&'a str)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A comment.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1233},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7908801,"byte_end":7908806,"line_start":8,"line_end":8,"column_start":462,"column_end":467},"name":"Colon","qualname":"::tokenizer::Token::Colon","value":"Token::Colon","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `:` `<colon-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1235},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7908850,"byte_end":7908859,"line_start":8,"line_end":8,"column_start":511,"column_end":520},"name":"Semicolon","qualname":"::tokenizer::Token::Semicolon","value":"Token::Semicolon","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `;` `<semicolon-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1237},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7908899,"byte_end":7908904,"line_start":8,"line_end":8,"column_start":560,"column_end":565},"name":"Comma","qualname":"::tokenizer::Token::Comma","value":"Token::Comma","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `,` `<comma-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1239},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7909021,"byte_end":7909033,"line_start":8,"line_end":8,"column_start":682,"column_end":694},"name":"IncludeMatch","qualname":"::tokenizer::Token::IncludeMatch","value":"Token::IncludeMatch","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `~=` [`<include-match-token>`](https://drafts.csswg.org/css-syntax/#include-match-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1241},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7909144,"byte_end":7909153,"line_start":8,"line_end":8,"column_start":805,"column_end":814},"name":"DashMatch","qualname":"::tokenizer::Token::DashMatch","value":"Token::DashMatch","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `|=` [`<dash-match-token>`](https://drafts.csswg.org/css-syntax/#dash-match-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1243},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7909268,"byte_end":7909279,"line_start":8,"line_end":8,"column_start":929,"column_end":940},"name":"PrefixMatch","qualname":"::tokenizer::Token::PrefixMatch","value":"Token::PrefixMatch","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `^=` [`<prefix-match-token>`](https://drafts.csswg.org/css-syntax/#prefix-match-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1245},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7909394,"byte_end":7909405,"line_start":8,"line_end":8,"column_start":1055,"column_end":1066},"name":"SuffixMatch","qualname":"::tokenizer::Token::SuffixMatch","value":"Token::SuffixMatch","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `$=` [`<suffix-match-token>`](https://drafts.csswg.org/css-syntax/#suffix-match-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1247},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7909526,"byte_end":7909540,"line_start":8,"line_end":8,"column_start":1187,"column_end":1201},"name":"SubstringMatch","qualname":"::tokenizer::Token::SubstringMatch","value":"Token::SubstringMatch","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `*=` [`<substring-match-token>`](https://drafts.csswg.org/css-syntax/#substring-match-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1249},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7909639,"byte_end":7909642,"line_start":8,"line_end":8,"column_start":1300,"column_end":1303},"name":"CDO","qualname":"::tokenizer::Token::CDO","value":"Token::CDO","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `<!--` [`<CDO-token>`](https://drafts.csswg.org/css-syntax/#CDO-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1251},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7909740,"byte_end":7909743,"line_start":8,"line_end":8,"column_start":1401,"column_end":1404},"name":"CDC","qualname":"::tokenizer::Token::CDC","value":"Token::CDC","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `-->` [`<CDC-token>`](https://drafts.csswg.org/css-syntax/#CDC-token-diagram)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1253},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7909925,"byte_end":7909933,"line_start":8,"line_end":8,"column_start":1586,"column_end":1594},"name":"Function","qualname":"::tokenizer::Token::Function","value":"Token::Function(CowRcStr<'a>)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A [`<function-token>`](https://drafts.csswg.org/css-syntax/#function-token-diagram)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1256},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7909985,"byte_end":7910001,"line_start":8,"line_end":8,"column_start":1646,"column_end":1662},"name":"ParenthesisBlock","qualname":"::tokenizer::Token::ParenthesisBlock","value":"Token::ParenthesisBlock","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `<(-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1258},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7910033,"byte_end":7910051,"line_start":8,"line_end":8,"column_start":1694,"column_end":1712},"name":"SquareBracketBlock","qualname":"::tokenizer::Token::SquareBracketBlock","value":"Token::SquareBracketBlock","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `<[-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1260},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7910083,"byte_end":7910100,"line_start":8,"line_end":8,"column_start":1744,"column_end":1761},"name":"CurlyBracketBlock","qualname":"::tokenizer::Token::CurlyBracketBlock","value":"Token::CurlyBracketBlock","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `<{-token>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1262},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7910211,"byte_end":7910217,"line_start":8,"line_end":8,"column_start":1872,"column_end":1878},"name":"BadUrl","qualname":"::tokenizer::Token::BadUrl","value":"Token::BadUrl(CowRcStr<'a>)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `<bad-url-token>`","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1265},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7910351,"byte_end":7910360,"line_start":8,"line_end":8,"column_start":2012,"column_end":2021},"name":"BadString","qualname":"::tokenizer::Token::BadString","value":"Token::BadString(CowRcStr<'a>)","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `<bad-string-token>`","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7910572,"byte_end":7910588,"line_start":8,"line_end":8,"column_start":2233,"column_end":2249},"name":"CloseParenthesis","qualname":"::tokenizer::Token::CloseParenthesis","value":"Token::CloseParenthesis","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `<)-token>`","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1270},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7910780,"byte_end":7910798,"line_start":8,"line_end":8,"column_start":2441,"column_end":2459},"name":"CloseSquareBracket","qualname":"::tokenizer::Token::CloseSquareBracket","value":"Token::CloseSquareBracket","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `<]-token>`","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7910990,"byte_end":7911007,"line_start":8,"line_end":8,"column_start":2651,"column_end":2668},"name":"CloseCurlyBracket","qualname":"::tokenizer::Token::CloseCurlyBracket","value":"Token::CloseCurlyBracket","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":" A `<}-token>`","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1191},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7905487,"byte_end":7905492,"line_start":1,"line_end":1,"column_start":424,"column_end":429},"name":"Token","qualname":"::tokenizer::Token","value":"Token::{Ident, AtKeyword, Hash, IDHash, QuotedString, UnquotedUrl, Delim, Number, Percentage, Dimension, WhiteSpace, Comment, Colon, Semicolon, Comma, IncludeMatch, DashMatch, PrefixMatch, SuffixMatch, SubstringMatch, CDO, CDC, Function, ParenthesisBlock, SquareBracketBlock, CurlyBracketBlock, BadUrl, BadString, CloseParenthesis, CloseSquareBracket, CloseCurlyBracket}","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1218},{"krate":0,"index":1222},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1272}],"decl_id":null,"docs":" One of the pieces the CSS input is broken into.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7911409,"byte_end":7911423,"line_start":10,"line_end":10,"column_start":371,"column_end":385},"name":"is_parse_error","qualname":"<Token>::is_parse_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether this token represents a parse error.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1314},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7927488,"byte_end":7927502,"line_start":177,"line_end":177,"column_start":167,"column_end":181},"name":"SourcePosition","qualname":"::tokenizer::SourcePosition","value":"","parent":null,"children":[],"decl_id":null,"docs":" A position from the start of the input, counted in UTF-8 bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7927640,"byte_end":7927650,"line_start":178,"line_end":178,"column_start":90,"column_end":100},"name":"byte_index","qualname":"<SourcePosition>::byte_index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current byte index in the original input.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7927620,"byte_end":7927632,"line_start":178,"line_end":178,"column_start":70,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1337},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7927833,"byte_end":7927847,"line_start":181,"line_end":181,"column_start":150,"column_end":164},"name":"SourceLocation","qualname":"::tokenizer::SourceLocation","value":"SourceLocation { line, column }","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339}],"decl_id":null,"docs":" The line and column number for a given position within the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1338},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7927962,"byte_end":7927966,"line_start":182,"line_end":182,"column_start":113,"column_end":117},"name":"line","qualname":"::tokenizer::SourceLocation::line","value":"u32","parent":{"krate":0,"index":1337},"children":[],"decl_id":null,"docs":" The line number, starting at 0 for the first line, unless `with_first_line_number` was used.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1339},"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7928142,"byte_end":7928148,"line_start":182,"line_end":182,"column_start":293,"column_end":299},"name":"column","qualname":"::tokenizer::SourceLocation::column","value":"u32","parent":{"krate":0,"index":1337},"children":[],"decl_id":null,"docs":" The column number within a line, starting at 1 for first the character of the line.\n Column numbers are counted in UTF-16 code units.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1352},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33594,"byte_end":33598,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"RGBA","qualname":"::color::RGBA","value":"RGBA { red, green, blue, alpha }","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356}],"decl_id":null,"docs":" A color with red, green, blue, and alpha components, in a byte each.\n","sig":null,"attributes":[{"value":"/ A color with red, green, blue, and alpha components, in a byte each.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33458,"byte_end":33530,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"repr(C)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33572,"byte_end":33582,"line_start":15,"line_end":15,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1353},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33636,"byte_end":33639,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"name":"red","qualname":"::color::RGBA::red","value":"u8","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" The red component.\n","sig":null,"attributes":[{"value":"/ The red component.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33605,"byte_end":33627,"line_start":17,"line_end":17,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1354},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33682,"byte_end":33687,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"green","qualname":"::color::RGBA::green","value":"u8","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" The green component.\n","sig":null,"attributes":[{"value":"/ The green component.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33649,"byte_end":33673,"line_start":19,"line_end":19,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1355},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33729,"byte_end":33733,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"blue","qualname":"::color::RGBA::blue","value":"u8","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" The blue component.\n","sig":null,"attributes":[{"value":"/ The blue component.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33697,"byte_end":33720,"line_start":21,"line_end":21,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1356},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33776,"byte_end":33781,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"name":"alpha","qualname":"::color::RGBA::alpha","value":"u8","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" The alpha component.\n","sig":null,"attributes":[{"value":"/ The alpha component.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33743,"byte_end":33767,"line_start":23,"line_end":23,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34025,"byte_end":34036,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"from_floats","qualname":"<RGBA>::from_floats","value":"fn (red: f32, green: f32, blue: f32, alpha: f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new RGBA value from float components. It expects the red,\n green, blue and alpha channels in that order, and all values will be\n clamped to the 0.0 ... 1.0 range.\n","sig":null,"attributes":[{"value":"/ Constructs a new RGBA value from float components. It expects the red,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33806,"byte_end":33880,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/ green, blue and alpha channels in that order, and all values will be","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33885,"byte_end":33957,"line_start":29,"line_end":29,"column_start":5,"column_end":77}},{"value":"/ clamped to the 0.0 ... 1.0 range.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33962,"byte_end":33999,"line_start":30,"line_end":30,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34004,"byte_end":34013,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34327,"byte_end":34338,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"transparent","qualname":"<RGBA>::transparent","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transparent color.\n","sig":null,"attributes":[{"value":"/ Returns a transparent color.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34269,"byte_end":34301,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34306,"byte_end":34315,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34493,"byte_end":34496,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<RGBA>::new","value":"fn (red: u8, green: u8, blue: u8, alpha: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same thing, but with `u8` values instead of floats in the 0 to 1 range.\n","sig":null,"attributes":[{"value":"/ Same thing, but with `u8` values instead of floats in the 0 to 1 range.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34392,"byte_end":34467,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34472,"byte_end":34481,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34781,"byte_end":34788,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"red_f32","qualname":"<RGBA>::red_f32","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the red channel in a floating point number form, from 0 to 1.\n","sig":null,"attributes":[{"value":"/ Returns the red channel in a floating point number form, from 0 to 1.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34682,"byte_end":34755,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34760,"byte_end":34769,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34949,"byte_end":34958,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"green_f32","qualname":"<RGBA>::green_f32","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the green channel in a floating point number form, from 0 to 1.\n","sig":null,"attributes":[{"value":"/ Returns the green channel in a floating point number form, from 0 to 1.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34848,"byte_end":34923,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":34928,"byte_end":34937,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":35120,"byte_end":35128,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"blue_f32","qualname":"<RGBA>::blue_f32","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the blue channel in a floating point number form, from 0 to 1.\n","sig":null,"attributes":[{"value":"/ Returns the blue channel in a floating point number form, from 0 to 1.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":35020,"byte_end":35094,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":35099,"byte_end":35108,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":35290,"byte_end":35299,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"alpha_f32","qualname":"<RGBA>::alpha_f32","value":"fn (&self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns the alpha channel in a floating point number form, from 0 to 1.\n","sig":null,"attributes":[{"value":"/ Returns the alpha channel in a floating point number form, from 0 to 1.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":35189,"byte_end":35264,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":35269,"byte_end":35278,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":36914,"byte_end":36926,"line_start":139,"line_end":139,"column_start":5,"column_end":17},"name":"CurrentColor","qualname":"::color::Color::CurrentColor","value":"Color::CurrentColor","parent":{"krate":0,"index":1366},"children":[],"decl_id":null,"docs":" The 'currentcolor' keyword\n","sig":null,"attributes":[{"value":"/ The 'currentcolor' keyword","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":36879,"byte_end":36909,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1369},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":36994,"byte_end":36998,"line_start":141,"line_end":141,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::color::Color::RGBA","value":"Color::RGBA(RGBA)","parent":{"krate":0,"index":1366},"children":[],"decl_id":null,"docs":" Everything else gets converted to RGBA during parsing\n","sig":null,"attributes":[{"value":"/ Everything else gets converted to RGBA during parsing","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":36932,"byte_end":36989,"line_start":140,"line_end":140,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":1366},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":36867,"byte_end":36872,"line_start":137,"line_end":137,"column_start":10,"column_end":15},"name":"Color","qualname":"::color::Color","value":"Color::{CurrentColor, RGBA}","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1369}],"decl_id":null,"docs":" A <color> value.\n","sig":null,"attributes":[{"value":"/ A <color> value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":36796,"byte_end":36816,"line_start":135,"line_end":135,"column_start":1,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":235},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37437,"byte_end":37443,"line_start":162,"line_end":162,"column_start":5,"column_end":11},"name":"Number","qualname":"::color::NumberOrPercentage::Number","value":"NumberOrPercentage::Number { value }","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" `<number>`.\n","sig":null,"attributes":[{"value":"/ `<number>`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37417,"byte_end":37432,"line_start":161,"line_end":161,"column_start":5,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":237},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37550,"byte_end":37560,"line_start":167,"line_end":167,"column_start":5,"column_end":15},"name":"Percentage","qualname":"::color::NumberOrPercentage::Percentage","value":"NumberOrPercentage::Percentage { unit_value }","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" `<percentage>`\n","sig":null,"attributes":[{"value":"/ `<percentage>`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37527,"byte_end":37545,"line_start":166,"line_end":166,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":234},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37392,"byte_end":37410,"line_start":160,"line_end":160,"column_start":10,"column_end":28},"name":"NumberOrPercentage","qualname":"::color::NumberOrPercentage","value":"NumberOrPercentage::{Number, Percentage}","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":237}],"decl_id":null,"docs":" Either a number or a percentage.\n","sig":null,"attributes":[{"value":"/ Either a number or a percentage.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37346,"byte_end":37382,"line_start":159,"line_end":159,"column_start":1,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":242},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38015,"byte_end":38021,"line_start":186,"line_end":186,"column_start":5,"column_end":11},"name":"Number","qualname":"::color::AngleOrNumber::Number","value":"AngleOrNumber::Number { value }","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" `<number>`.\n","sig":null,"attributes":[{"value":"/ `<number>`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37995,"byte_end":38010,"line_start":185,"line_end":185,"column_start":5,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":244},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38123,"byte_end":38128,"line_start":191,"line_end":191,"column_start":5,"column_end":10},"name":"Angle","qualname":"::color::AngleOrNumber::Angle","value":"AngleOrNumber::Angle { degrees }","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" `<angle>`\n","sig":null,"attributes":[{"value":"/ `<angle>`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38105,"byte_end":38118,"line_start":190,"line_end":190,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":241},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37975,"byte_end":37988,"line_start":184,"line_end":184,"column_start":10,"column_end":23},"name":"AngleOrNumber","qualname":"::color::AngleOrNumber","value":"AngleOrNumber::{Number, Angle}","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":244}],"decl_id":null,"docs":" Either an angle or a number.\n","sig":null,"attributes":[{"value":"/ Either an angle or a number.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37933,"byte_end":37965,"line_start":183,"line_end":183,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":248},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38643,"byte_end":38663,"line_start":210,"line_end":210,"column_start":11,"column_end":31},"name":"ColorComponentParser","qualname":"::color::ColorComponentParser","value":"ColorComponentParser<'i>","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257}],"decl_id":null,"docs":" A trait that can be used to hook into how `cssparser` parses color\n components, with the intention of implementing more complicated behavior.","sig":null,"attributes":[{"value":"/ A trait that can be used to hook into how `cssparser` parses color","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38413,"byte_end":38483,"line_start":206,"line_end":206,"column_start":1,"column_end":71}},{"value":"/ components, with the intention of implementing more complicated behavior.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38484,"byte_end":38561,"line_start":207,"line_end":207,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38562,"byte_end":38565,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ For example, this is used by Servo to support calc() in color.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38566,"byte_end":38632,"line_start":209,"line_end":209,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":250},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38756,"byte_end":38761,"line_start":212,"line_end":212,"column_start":10,"column_end":15},"name":"Error","qualname":"::color::ColorComponentParser::Error","value":"type Error: 'i;","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" A custom error type that can be returned from the parsing functions.\n","sig":null,"attributes":[{"value":"/ A custom error type that can be returned from the parsing functions.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38674,"byte_end":38746,"line_start":211,"line_end":211,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38864,"byte_end":38885,"line_start":217,"line_end":217,"column_start":8,"column_end":29},"name":"parse_angle_or_number","qualname":"::color::ColorComponentParser::parse_angle_or_number","value":"fn <'t> (&self, input: &mut Parser<'i, 't>) -> Result<AngleOrNumber, ParseError<'i, Self::Error>>","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" Parse an `<angle>` or `<number>`.","sig":null,"attributes":[{"value":"/ Parse an `<angle>` or `<number>`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38772,"byte_end":38809,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38814,"byte_end":38817,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Returns the result in degrees.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38822,"byte_end":38856,"line_start":216,"line_end":216,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":39887,"byte_end":39903,"line_start":244,"line_end":244,"column_start":8,"column_end":24},"name":"parse_percentage","qualname":"::color::ColorComponentParser::parse_percentage","value":"fn <'t> (&self, input: &mut Parser<'i, 't>) -> Result<f32, ParseError<'i, Self::Error>>","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" Parse a `<percentage>` value.","sig":null,"attributes":[{"value":"/ Parse a `<percentage>` value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":39782,"byte_end":39815,"line_start":241,"line_end":241,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":39820,"byte_end":39823,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Returns the result in a number from 0.0 to 1.0.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":39828,"byte_end":39879,"line_start":243,"line_end":243,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":40114,"byte_end":40126,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"parse_number","qualname":"::color::ColorComponentParser::parse_number","value":"fn <'t> (&self, input: &mut Parser<'i, 't>) -> Result<f32, ParseError<'i, Self::Error>>","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" Parse a `<number>` value.\n","sig":null,"attributes":[{"value":"/ Parse a `<number>` value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":40077,"byte_end":40106,"line_start":251,"line_end":251,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":40359,"byte_end":40385,"line_start":260,"line_end":260,"column_start":8,"column_end":34},"name":"parse_number_or_percentage","qualname":"::color::ColorComponentParser::parse_number_or_percentage","value":"fn <'t> (&self, input: &mut Parser<'i, 't>) -> Result<NumberOrPercentage, ParseError<'i, Self::Error>>","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" Parse a `<number>` value or a `<percentage>` value.\n","sig":null,"attributes":[{"value":"/ Parse a `<number>` value or a `<percentage>` value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":40296,"byte_end":40351,"line_start":259,"line_end":259,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":41162,"byte_end":41172,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"parse_with","qualname":"<Color>::parse_with","value":"fn <'i, 't, ComponentParser> (component_parser: &ComponentParser, input: &mut Parser<'i, 't>) -> Result<Color, ParseError<'i, ComponentParser::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <color> value, per CSS Color Module Level 3.","sig":null,"attributes":[{"value":"/ Parse a <color> value, per CSS Color Module Level 3.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":41015,"byte_end":41071,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":41076,"byte_end":41079,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ FIXME(#2) Deprecated CSS2 System Colors are not supported yet.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":41084,"byte_end":41150,"line_start":281,"line_end":281,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":42193,"byte_end":42198,"line_start":308,"line_end":308,"column_start":12,"column_end":17},"name":"parse","qualname":"<Color>::parse","value":"fn <'i, 't> (input: &mut Parser<'i, 't>) -> Result<Color, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <color> value, per CSS Color Module Level 3.\n","sig":null,"attributes":[{"value":"/ Parse a <color> value, per CSS Color Module Level 3.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":42125,"byte_end":42181,"line_start":307,"line_end":307,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":42503,"byte_end":42513,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"parse_hash","qualname":"<Color>::parse_hash","value":"fn (value: &[u8]) -> Result<Self, ()>","parent":null,"children":[],"decl_id":null,"docs":" Parse a color hash, without the leading '#' character.\n","sig":null,"attributes":[{"value":"/ Parse a color hash, without the leading '#' character.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":42419,"byte_end":42477,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":42482,"byte_end":42491,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":44009,"byte_end":44028,"line_start":360,"line_end":360,"column_start":8,"column_end":27},"name":"parse_color_keyword","qualname":"::color::parse_color_keyword","value":"fn (ident: &str) -> Result<Color, ()>","parent":null,"children":[],"decl_id":null,"docs":" Return the named color with the given name.","sig":null,"attributes":[{"value":"/ Return the named color with the given name.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":43749,"byte_end":43796,"line_start":354,"line_end":354,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":43797,"byte_end":43800,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ Matching is case-insensitive in the ASCII range.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":43801,"byte_end":43853,"line_start":356,"line_end":356,"column_start":1,"column_end":53}},{"value":"/ CSS escaping (if relevant) should be resolved before calling this function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":43854,"byte_end":43933,"line_start":357,"line_end":357,"column_start":1,"column_end":80}},{"value":"/ (For example, the value of an `Ident` token is fine.)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":43934,"byte_end":43991,"line_start":358,"line_end":358,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":43992,"byte_end":44001,"line_start":359,"line_end":359,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":57738,"byte_end":57746,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"CowRcStr","qualname":"::cow_rc_str::CowRcStr","value":"CowRcStr {  }","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" A string that is either shared (heap-allocated and reference-counted) or borrowed.","sig":null,"attributes":[{"value":"/ A string that is either shared (heap-allocated and reference-counted) or borrowed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":57402,"byte_end":57488,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":57489,"byte_end":57492,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `enum { Borrowed(&'a str), Shared(Rc<String>) }`, but stored more compactly.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":57493,"byte_end":57587,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":57588,"byte_end":57591,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ FIXME(https://github.com/rust-lang/rfcs/issues/1230): use an actual enum if/when","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":57592,"byte_end":57676,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ the compiler can do this layout optimization.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":57677,"byte_end":57726,"line_start":22,"line_end":22,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":375},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62461,"byte_end":62476,"line_start":6,"line_end":6,"column_start":11,"column_end":26},"name":"EncodingSupport","qualname":"::from_bytes::EncodingSupport","value":"EncodingSupport","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379}],"decl_id":null,"docs":" Abstraction for avoiding a dependency from cssparser to an encoding library\n","sig":null,"attributes":[{"value":"/ Abstraction for avoiding a dependency from cssparser to an encoding library","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62371,"byte_end":62450,"line_start":5,"line_end":5,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":376},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62519,"byte_end":62527,"line_start":8,"line_end":8,"column_start":10,"column_end":18},"name":"Encoding","qualname":"::from_bytes::EncodingSupport::Encoding","value":"type Encoding;","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" One character encoding\n","sig":null,"attributes":[{"value":"/ One character encoding","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62483,"byte_end":62509,"line_start":7,"line_end":7,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62600,"byte_end":62610,"line_start":11,"line_end":11,"column_start":8,"column_end":18},"name":"from_label","qualname":"::from_bytes::EncodingSupport::from_label","value":"fn (ascii_label: &[u8]) -> Option<Self::Encoding>","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" https://encoding.spec.whatwg.org/#concept-encoding-get\n","sig":null,"attributes":[{"value":"/ https://encoding.spec.whatwg.org/#concept-encoding-get","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62534,"byte_end":62592,"line_start":10,"line_end":10,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62700,"byte_end":62704,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"utf8","qualname":"::from_bytes::EncodingSupport::utf8","value":"fn () -> Self::Encoding","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" Return the UTF-8 encoding\n","sig":null,"attributes":[{"value":"/ Return the UTF-8 encoding","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62663,"byte_end":62692,"line_start":13,"line_end":13,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62793,"byte_end":62810,"line_start":17,"line_end":17,"column_start":8,"column_end":25},"name":"is_utf16_be_or_le","qualname":"::from_bytes::EncodingSupport::is_utf16_be_or_le","value":"fn (encoding: &Self::Encoding) -> bool","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" Whether the given encoding is UTF-16BE or UTF-16LE\n","sig":null,"attributes":[{"value":"/ Whether the given encoding is UTF-16BE or UTF-16LE","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62731,"byte_end":62785,"line_start":16,"line_end":16,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":380},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":63447,"byte_end":63466,"line_start":32,"line_end":32,"column_start":8,"column_end":27},"name":"stylesheet_encoding","qualname":"::from_bytes::stylesheet_encoding","value":"fn <E> (css: &[u8], protocol_encoding_label: Option<&[u8]>, environment_encoding: Option<E::Encoding>) -> E::Encoding","parent":null,"children":[],"decl_id":null,"docs":" Determine the character encoding of a CSS stylesheet.","sig":null,"attributes":[{"value":"/ Determine the character encoding of a CSS stylesheet.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62850,"byte_end":62907,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62908,"byte_end":62911,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This is based on the presence of a BOM (Byte Order Mark), an `@charset` rule, and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62912,"byte_end":62997,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/ encoding meta-information.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":62998,"byte_end":63028,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":63029,"byte_end":63032,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `css_bytes`: A byte string.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":63033,"byte_end":63066,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ * `protocol_encoding`: The encoding label, if any, defined by HTTP or equivalent protocol.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":63067,"byte_end":63161,"line_start":26,"line_end":26,"column_start":1,"column_end":95}},{"value":"/     (e.g. via the `charset` parameter of the `Content-Type` header.)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":63162,"byte_end":63234,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ * `environment_encoding`: An optional `Encoding` object for the [environment encoding]","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":63235,"byte_end":63325,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/     (https://drafts.csswg.org/css-syntax/#environment-encoding), if any.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":63326,"byte_end":63402,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":63403,"byte_end":63406,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Returns the encoding to use.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/from_bytes.rs","byte_start":63407,"byte_end":63439,"line_start":31,"line_end":31,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":389},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs","byte_start":65077,"byte_end":65086,"line_start":11,"line_end":11,"column_start":8,"column_end":17},"name":"parse_nth","qualname":"::nth::parse_nth","value":"fn <'i, 't> (input: &mut Parser<'i, 't>) -> Result<(i32, i32), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the *An+B* notation, as found in the `:nth-child()` selector.\n The input is typically the arguments of a function,\n in which case the caller needs to check if the arguments’ parser is exhausted.\n Return `Ok((A, B))`, or `Err(())` for a syntax error.\n","sig":null,"attributes":[{"value":"/ Parse the *An+B* notation, as found in the `:nth-child()` selector.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs","byte_start":64799,"byte_end":64870,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ The input is typically the arguments of a function,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs","byte_start":64871,"byte_end":64926,"line_start":8,"line_end":8,"column_start":1,"column_end":56}},{"value":"/ in which case the caller needs to check if the arguments’ parser is exhausted.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs","byte_start":64927,"byte_end":65011,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ Return `Ok((A, B))`, or `Err(())` for a syntax error.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/nth.rs","byte_start":65012,"byte_end":65069,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1424},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":69927,"byte_end":69938,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"ParserState","qualname":"::parser::ParserState","value":"ParserState {  }","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428}],"decl_id":null,"docs":" A capture of the internal state of a `Parser` (including the position within the input),\n obtained from the `Parser::position` method.","sig":null,"attributes":[{"value":"/ A capture of the internal state of a `Parser` (including the position within the input),","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":69610,"byte_end":69702,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ obtained from the `Parser::position` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":69703,"byte_end":69751,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":69752,"byte_end":69755,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Can be used with the `Parser::reset` method to restore that state.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":69756,"byte_end":69826,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ Should only be used with the `Parser` instance it came from.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":69827,"byte_end":69891,"line_start":15,"line_end":15,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70233,"byte_end":70241,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"position","qualname":"<ParserState>::position","value":"fn (&self) -> SourcePosition","parent":null,"children":[],"decl_id":null,"docs":" The position from the start of the input, counted in UTF-8 bytes.\n","sig":null,"attributes":[{"value":"/ The position from the start of the input, counted in UTF-8 bytes.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70138,"byte_end":70207,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70212,"byte_end":70221,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70381,"byte_end":70396,"line_start":33,"line_end":33,"column_start":12,"column_end":27},"name":"source_location","qualname":"<ParserState>::source_location","value":"fn (&self) -> SourceLocation","parent":null,"children":[],"decl_id":null,"docs":" The line number and column number\n","sig":null,"attributes":[{"value":"/ The line number and column number","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70318,"byte_end":70355,"line_start":31,"line_end":31,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70360,"byte_end":70369,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1435},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70752,"byte_end":70767,"line_start":45,"line_end":45,"column_start":5,"column_end":20},"name":"UnexpectedToken","qualname":"::parser::BasicParseErrorKind::UnexpectedToken","value":"BasicParseErrorKind::UnexpectedToken(Token<'i>)","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" An unexpected token was encountered.\n","sig":null,"attributes":[{"value":"/ An unexpected token was encountered.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70707,"byte_end":70747,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1438},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70843,"byte_end":70853,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"name":"EndOfInput","qualname":"::parser::BasicParseErrorKind::EndOfInput","value":"BasicParseErrorKind::EndOfInput","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" The end of the input was encountered unexpectedly.\n","sig":null,"attributes":[{"value":"/ The end of the input was encountered unexpectedly.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70784,"byte_end":70838,"line_start":46,"line_end":46,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1440},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70913,"byte_end":70926,"line_start":49,"line_end":49,"column_start":5,"column_end":18},"name":"AtRuleInvalid","qualname":"::parser::BasicParseErrorKind::AtRuleInvalid","value":"BasicParseErrorKind::AtRuleInvalid(CowRcStr<'i>)","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" An `@` rule was encountered that was invalid.\n","sig":null,"attributes":[{"value":"/ An `@` rule was encountered that was invalid.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70859,"byte_end":70908,"line_start":48,"line_end":48,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1443},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70991,"byte_end":71008,"line_start":51,"line_end":51,"column_start":5,"column_end":22},"name":"AtRuleBodyInvalid","qualname":"::parser::BasicParseErrorKind::AtRuleBodyInvalid","value":"BasicParseErrorKind::AtRuleBodyInvalid","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" The body of an '@' rule was invalid.\n","sig":null,"attributes":[{"value":"/ The body of an '@' rule was invalid.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70946,"byte_end":70986,"line_start":50,"line_end":50,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1445},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71073,"byte_end":71093,"line_start":53,"line_end":53,"column_start":5,"column_end":25},"name":"QualifiedRuleInvalid","qualname":"::parser::BasicParseErrorKind::QualifiedRuleInvalid","value":"BasicParseErrorKind::QualifiedRuleInvalid","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" A qualified rule was encountered that was invalid.\n","sig":null,"attributes":[{"value":"/ A qualified rule was encountered that was invalid.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71014,"byte_end":71068,"line_start":52,"line_end":52,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":1433},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70677,"byte_end":70696,"line_start":43,"line_end":43,"column_start":10,"column_end":29},"name":"BasicParseErrorKind","qualname":"::parser::BasicParseErrorKind","value":"BasicParseErrorKind::{UnexpectedToken, EndOfInput, AtRuleInvalid, AtRuleBodyInvalid, QualifiedRuleInvalid}","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1443},{"krate":0,"index":1445}],"decl_id":null,"docs":" Details about a `BasicParseError`\n","sig":null,"attributes":[{"value":"/ Details about a `BasicParseError`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70595,"byte_end":70632,"line_start":41,"line_end":41,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1459},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71230,"byte_end":71245,"line_start":58,"line_end":58,"column_start":12,"column_end":27},"name":"BasicParseError","qualname":"::parser::BasicParseError","value":"BasicParseError { kind, location }","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1462}],"decl_id":null,"docs":" The funamental parsing errors that can be triggered by built-in parsing routines.\n","sig":null,"attributes":[{"value":"/ The funamental parsing errors that can be triggered by built-in parsing routines.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71098,"byte_end":71183,"line_start":56,"line_end":56,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1461},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71290,"byte_end":71294,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"name":"kind","qualname":"::parser::BasicParseError::kind","value":"parser::BasicParseErrorKind<'i>","parent":{"krate":0,"index":1459},"children":[],"decl_id":null,"docs":" Details of this error\n","sig":null,"attributes":[{"value":"/ Details of this error","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71256,"byte_end":71281,"line_start":59,"line_end":59,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1462},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71372,"byte_end":71380,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"name":"location","qualname":"::parser::BasicParseError::location","value":"tokenizer::SourceLocation","parent":{"krate":0,"index":1459},"children":[],"decl_id":null,"docs":" Location where this error occurred\n","sig":null,"attributes":[{"value":"/ Location where this error occurred","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71325,"byte_end":71363,"line_start":61,"line_end":61,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71793,"byte_end":71825,"line_start":78,"line_end":78,"column_start":12,"column_end":44},"name":"new_basic_unexpected_token_error","qualname":"<SourceLocation>::new_basic_unexpected_token_error","value":"fn <'i> (self, token: Token<'i>) -> BasicParseError<'i>","parent":null,"children":[],"decl_id":null,"docs":" Create a new BasicParseError at this location for an unexpected token\n","sig":null,"attributes":[{"value":"/ Create a new BasicParseError at this location for an unexpected token","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71694,"byte_end":71767,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71772,"byte_end":71781,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72111,"byte_end":72137,"line_start":87,"line_end":87,"column_start":12,"column_end":38},"name":"new_unexpected_token_error","qualname":"<SourceLocation>::new_unexpected_token_error","value":"fn <'i, E> (self, token: Token<'i>) -> ParseError<'i, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a new ParseError at this location for an unexpected token\n","sig":null,"attributes":[{"value":"/ Create a new ParseError at this location for an unexpected token","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72017,"byte_end":72085,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72090,"byte_end":72099,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72425,"byte_end":72441,"line_start":96,"line_end":96,"column_start":12,"column_end":28},"name":"new_custom_error","qualname":"<SourceLocation>::new_custom_error","value":"fn <'i, E1, E2> (self, error: E1) -> ParseError<'i, E2>","parent":null,"children":[],"decl_id":null,"docs":" Create a new custom ParseError at this location\n","sig":null,"attributes":[{"value":"/ Create a new custom ParseError at this location","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72348,"byte_end":72399,"line_start":94,"line_end":94,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72404,"byte_end":72413,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1478},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72802,"byte_end":72807,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"Basic","qualname":"::parser::ParseErrorKind::Basic","value":"ParseErrorKind::Basic(BasicParseErrorKind<'i>)","parent":{"krate":0,"index":1475},"children":[],"decl_id":null,"docs":" A fundamental parse error from a built-in parsing routine.\n","sig":null,"attributes":[{"value":"/ A fundamental parse error from a built-in parsing routine.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72735,"byte_end":72797,"line_start":107,"line_end":107,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1481},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72898,"byte_end":72904,"line_start":110,"line_end":110,"column_start":5,"column_end":11},"name":"Custom","qualname":"::parser::ParseErrorKind::Custom","value":"ParseErrorKind::Custom(T)","parent":{"krate":0,"index":1475},"children":[],"decl_id":null,"docs":" A parse error reported by downstream consumer code.\n","sig":null,"attributes":[{"value":"/ A parse error reported by downstream consumer code.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72838,"byte_end":72893,"line_start":109,"line_end":109,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":1475},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72703,"byte_end":72717,"line_start":106,"line_end":106,"column_start":10,"column_end":24},"name":"ParseErrorKind","qualname":"::parser::ParseErrorKind","value":"ParseErrorKind::{Basic, Custom}","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1481}],"decl_id":null,"docs":" Details of a `ParseError`\n","sig":null,"attributes":[{"value":"/ Details of a `ParseError`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72629,"byte_end":72658,"line_start":104,"line_end":104,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72999,"byte_end":73003,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"into","qualname":"<ParseErrorKind>::into","value":"fn <U> (self) -> ParseErrorKind<'i, U>","parent":null,"children":[],"decl_id":null,"docs":" Like `std::convert::Into::into`\n","sig":null,"attributes":[{"value":"/ Like `std::convert::Into::into`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72952,"byte_end":72987,"line_start":114,"line_end":114,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1500},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73406,"byte_end":73416,"line_start":128,"line_end":128,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::parser::ParseError","value":"ParseError { kind, location }","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504}],"decl_id":null,"docs":" Extensible parse errors that can be encountered by client parsing implementations.\n","sig":null,"attributes":[{"value":"/ Extensible parse errors that can be encountered by client parsing implementations.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73273,"byte_end":73359,"line_start":126,"line_end":126,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":1503},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73468,"byte_end":73472,"line_start":130,"line_end":130,"column_start":9,"column_end":13},"name":"kind","qualname":"::parser::ParseError::kind","value":"parser::ParseErrorKind<'i, E>","parent":{"krate":0,"index":1500},"children":[],"decl_id":null,"docs":" Details of this error\n","sig":null,"attributes":[{"value":"/ Details of this error","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73434,"byte_end":73459,"line_start":129,"line_end":129,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1504},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73548,"byte_end":73556,"line_start":132,"line_end":132,"column_start":9,"column_end":17},"name":"location","qualname":"::parser::ParseError::location","value":"tokenizer::SourceLocation","parent":{"krate":0,"index":1500},"children":[],"decl_id":null,"docs":" Location where this error occurred\n","sig":null,"attributes":[{"value":"/ Location where this error occurred","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73501,"byte_end":73539,"line_start":131,"line_end":131,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73690,"byte_end":73695,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"basic","qualname":"<ParseError>::basic","value":"fn (self) -> BasicParseError<'i>","parent":null,"children":[],"decl_id":null,"docs":" Extract the fundamental parse error from an extensible error.\n","sig":null,"attributes":[{"value":"/ Extract the fundamental parse error from an extensible error.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73613,"byte_end":73678,"line_start":136,"line_end":136,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":74042,"byte_end":74046,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"into","qualname":"<ParseError>::into","value":"fn <U> (self) -> ParseError<'i, U>","parent":null,"children":[],"decl_id":null,"docs":" Like `std::convert::Into::into`\n","sig":null,"attributes":[{"value":"/ Like `std::convert::Into::into`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73995,"byte_end":74030,"line_start":147,"line_end":147,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":439},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":74271,"byte_end":74282,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"ParserInput","qualname":"::parser::ParserInput","value":"ParserInput {  }","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"decl_id":null,"docs":" The owned input for a parser.\n","sig":null,"attributes":[{"value":"/ The owned input for a parser.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":74226,"byte_end":74259,"line_start":159,"line_end":159,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":74558,"byte_end":74561,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserInput>::new","value":"fn (input: &'i str) -> ParserInput<'i>","parent":null,"children":[],"decl_id":null,"docs":" Create a new input for a parser.\n","sig":null,"attributes":[{"value":"/ Create a new input for a parser.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":74510,"byte_end":74546,"line_start":172,"line_end":172,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":74834,"byte_end":74861,"line_start":182,"line_end":182,"column_start":12,"column_end":39},"name":"new_with_line_number_offset","qualname":"<ParserInput>::new_with_line_number_offset","value":"fn (input: &'i str, first_line_number: u32) -> ParserInput<'i>","parent":null,"children":[],"decl_id":null,"docs":" Create a new input for a parser.  Line numbers in locations\n are offset by the given value.\n","sig":null,"attributes":[{"value":"/ Create a new input for a parser.  Line numbers in locations","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":74720,"byte_end":74783,"line_start":180,"line_end":180,"column_start":5,"column_end":68}},{"value":"/ are offset by the given value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":74788,"byte_end":74822,"line_start":181,"line_end":181,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":75331,"byte_end":75337,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458}],"decl_id":null,"docs":" A CSS parser that borrows its `&str` input,\n yields `Token`s,\n and keeps track of nested blocks and functions.\n","sig":null,"attributes":[{"value":"/ A CSS parser that borrows its `&str` input,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":75199,"byte_end":75246,"line_start":195,"line_end":195,"column_start":1,"column_end":48}},{"value":"/ yields `Token`s,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":75247,"byte_end":75267,"line_start":196,"line_end":196,"column_start":1,"column_end":21}},{"value":"/ and keeps track of nested blocks and functions.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":75268,"byte_end":75319,"line_start":197,"line_end":197,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1539},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76732,"byte_end":76742,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"Delimiters","qualname":"::parser::Delimiters","value":"Delimiters {  }","parent":null,"children":[{"krate":0,"index":1540}],"decl_id":null,"docs":" A set of characters, to be used with the `Parser::parse_until*` methods.","sig":null,"attributes":[{"value":"/ A set of characters, to be used with the `Parser::parse_until*` methods.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76406,"byte_end":76482,"line_start":233,"line_end":233,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76483,"byte_end":76486,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ The union of two sets can be obtained with the `|` operator. Example:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76487,"byte_end":76560,"line_start":235,"line_end":235,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76561,"byte_end":76564,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```{rust,ignore}","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76565,"byte_end":76585,"line_start":237,"line_end":237,"column_start":1,"column_end":21}},{"value":"/ input.parse_until_before(Delimiter::CurlyBracketBlock | Delimiter::Semicolon)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76586,"byte_end":76667,"line_start":238,"line_end":238,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76668,"byte_end":76675,"line_start":239,"line_end":239,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":462},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76847,"byte_end":76856,"line_start":247,"line_end":247,"column_start":9,"column_end":18},"name":"Delimiter","qualname":"::parser::Delimiter","value":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"decl_id":null,"docs":" `Delimiters` constants.\n","sig":null,"attributes":[{"value":"/ `Delimiters` constants.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76762,"byte_end":76789,"line_start":245,"line_end":245,"column_start":1,"column_end":28}},{"value":"allow(non_upper_case_globals, non_snake_case)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76790,"byte_end":76838,"line_start":246,"line_end":246,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":464},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76933,"byte_end":76937,"line_start":251,"line_end":251,"column_start":15,"column_end":19},"name":"None","qualname":"::parser::Delimiter::None","value":"Delimiters","parent":null,"children":[],"decl_id":null,"docs":" The empty delimiter set\n","sig":null,"attributes":[{"value":"/ The empty delimiter set","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76891,"byte_end":76918,"line_start":250,"line_end":250,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":465},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":77056,"byte_end":77073,"line_start":253,"line_end":253,"column_start":15,"column_end":32},"name":"CurlyBracketBlock","qualname":"::parser::Delimiter::CurlyBracketBlock","value":"Delimiters","parent":null,"children":[],"decl_id":null,"docs":" The delimiter set with only the `{` opening curly bracket\n","sig":null,"attributes":[{"value":"/ The delimiter set with only the `{` opening curly bracket","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":76980,"byte_end":77041,"line_start":252,"line_end":252,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":466},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":77185,"byte_end":77194,"line_start":255,"line_end":255,"column_start":15,"column_end":24},"name":"Semicolon","qualname":"::parser::Delimiter::Semicolon","value":"Delimiters","parent":null,"children":[],"decl_id":null,"docs":" The delimiter set with only the `;` semicolon\n","sig":null,"attributes":[{"value":"/ The delimiter set with only the `;` semicolon","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":77121,"byte_end":77170,"line_start":254,"line_end":254,"column_start":5,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":467},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":77314,"byte_end":77318,"line_start":257,"line_end":257,"column_start":15,"column_end":19},"name":"Bang","qualname":"::parser::Delimiter::Bang","value":"Delimiters","parent":null,"children":[],"decl_id":null,"docs":" The delimiter set with only the `!` exclamation point\n","sig":null,"attributes":[{"value":"/ The delimiter set with only the `!` exclamation point","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":77242,"byte_end":77299,"line_start":256,"line_end":256,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":468},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":77426,"byte_end":77431,"line_start":259,"line_end":259,"column_start":15,"column_end":20},"name":"Comma","qualname":"::parser::Delimiter::Comma","value":"Delimiters","parent":null,"children":[],"decl_id":null,"docs":" The delimiter set with only the `,` comma\n","sig":null,"attributes":[{"value":"/ The delimiter set with only the `,` comma","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":77366,"byte_end":77411,"line_start":258,"line_end":258,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79189,"byte_end":79192,"line_start":321,"line_end":321,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"fn (input: &'t mut ParserInput<'i>) -> Parser<'i, 't>","parent":null,"children":[],"decl_id":null,"docs":" Create a new parser\n","sig":null,"attributes":[{"value":"/ Create a new parser","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79140,"byte_end":79163,"line_start":319,"line_end":319,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79168,"byte_end":79177,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79443,"byte_end":79455,"line_start":330,"line_end":330,"column_start":12,"column_end":24},"name":"current_line","qualname":"<Parser>::current_line","value":"fn (&self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Return the current line that is being parsed.\n","sig":null,"attributes":[{"value":"/ Return the current line that is being parsed.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79382,"byte_end":79431,"line_start":329,"line_end":329,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79703,"byte_end":79715,"line_start":338,"line_end":338,"column_start":12,"column_end":24},"name":"is_exhausted","qualname":"<Parser>::is_exhausted","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the input is exhausted. That is, if `.next()` would return a token.","sig":null,"attributes":[{"value":"/ Check whether the input is exhausted. That is, if `.next()` would return a token.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79538,"byte_end":79623,"line_start":334,"line_end":334,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79628,"byte_end":79631,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This ignores whitespace and comments.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79636,"byte_end":79677,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79682,"byte_end":79691,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":80045,"byte_end":80061,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"expect_exhausted","qualname":"<Parser>::expect_exhausted","value":"fn (&mut self) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the input is exhausted. That is, if `.next()` would return a token.\n Return a `Result` so that the `?` operator can be used: `input.expect_exhausted()?`","sig":null,"attributes":[{"value":"/ Check whether the input is exhausted. That is, if `.next()` would return a token.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79788,"byte_end":79873,"line_start":342,"line_end":342,"column_start":5,"column_end":90}},{"value":"/ Return a `Result` so that the `?` operator can be used: `input.expect_exhausted()?`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79878,"byte_end":79965,"line_start":343,"line_end":343,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79970,"byte_end":79973,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This ignores whitespace and comments.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79978,"byte_end":80019,"line_start":345,"line_end":345,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":80024,"byte_end":80033,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":80749,"byte_end":80757,"line_start":367,"line_end":367,"column_start":12,"column_end":20},"name":"position","qualname":"<Parser>::position","value":"fn (&self) -> SourcePosition","parent":null,"children":[],"decl_id":null,"docs":" Return the current position within the input.","sig":null,"attributes":[{"value":"/ Return the current position within the input.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":80590,"byte_end":80639,"line_start":363,"line_end":363,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":80644,"byte_end":80647,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This can be used with the `Parser::slice` and `slice_from` methods.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":80652,"byte_end":80723,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":80728,"byte_end":80737,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":80908,"byte_end":80931,"line_start":373,"line_end":373,"column_start":12,"column_end":35},"name":"current_source_location","qualname":"<Parser>::current_source_location","value":"fn (&self) -> SourceLocation","parent":null,"children":[],"decl_id":null,"docs":" The current line number and column number.\n","sig":null,"attributes":[{"value":"/ The current line number and column number.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":80836,"byte_end":80882,"line_start":371,"line_end":371,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":80887,"byte_end":80896,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81248,"byte_end":81270,"line_start":382,"line_end":382,"column_start":12,"column_end":34},"name":"current_source_map_url","qualname":"<Parser>::current_source_map_url","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" The source map URL, if known.","sig":null,"attributes":[{"value":"/ The source map URL, if known.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81025,"byte_end":81058,"line_start":377,"line_end":377,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81063,"byte_end":81066,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The source map URL is extracted from a specially formatted","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81071,"byte_end":81133,"line_start":379,"line_end":379,"column_start":5,"column_end":67}},{"value":"/ comment.  The last such comment is used, so this value may","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81138,"byte_end":81200,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/ change as parsing proceeds.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81205,"byte_end":81236,"line_start":381,"line_end":381,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81576,"byte_end":81594,"line_start":391,"line_end":391,"column_start":12,"column_end":30},"name":"current_source_url","qualname":"<Parser>::current_source_url","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" The source URL, if known.","sig":null,"attributes":[{"value":"/ The source URL, if known.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81361,"byte_end":81390,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81395,"byte_end":81398,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ The source URL is extracted from a specially formatted","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81403,"byte_end":81461,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ comment.  The last such comment is used, so this value may","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81466,"byte_end":81528,"line_start":389,"line_end":389,"column_start":5,"column_end":67}},{"value":"/ change as parsing proceeds.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81533,"byte_end":81564,"line_start":390,"line_end":390,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81763,"byte_end":81778,"line_start":397,"line_end":397,"column_start":12,"column_end":27},"name":"new_basic_error","qualname":"<Parser>::new_basic_error","value":"fn (&self, kind: BasicParseErrorKind<'i>) -> BasicParseError<'i>","parent":null,"children":[],"decl_id":null,"docs":" Create a new BasicParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new BasicParseError at the current location","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81681,"byte_end":81737,"line_start":395,"line_end":395,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81742,"byte_end":81751,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82050,"byte_end":82059,"line_start":406,"line_end":406,"column_start":12,"column_end":21},"name":"new_error","qualname":"<Parser>::new_error","value":"fn <E> (&self, kind: BasicParseErrorKind<'i>) -> ParseError<'i, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a new basic ParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new basic ParseError at the current location","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":81967,"byte_end":82024,"line_start":404,"line_end":404,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82029,"byte_end":82038,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82356,"byte_end":82372,"line_start":415,"line_end":415,"column_start":12,"column_end":28},"name":"new_custom_error","qualname":"<Parser>::new_custom_error","value":"fn <E1, E2> (&self, error: E1) -> ParseError<'i, E2>","parent":null,"children":[],"decl_id":null,"docs":" Create a new custom BasicParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new custom BasicParseError at the current location","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82267,"byte_end":82330,"line_start":413,"line_end":413,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82335,"byte_end":82344,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82606,"byte_end":82638,"line_start":421,"line_end":421,"column_start":12,"column_end":44},"name":"new_basic_unexpected_token_error","qualname":"<Parser>::new_basic_unexpected_token_error","value":"fn (&self, token: Token<'i>) -> BasicParseError<'i>","parent":null,"children":[],"decl_id":null,"docs":" Create a new unexpected token BasicParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new unexpected token BasicParseError at the current location","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82507,"byte_end":82580,"line_start":419,"line_end":419,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82585,"byte_end":82594,"line_start":420,"line_end":420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82868,"byte_end":82894,"line_start":427,"line_end":427,"column_start":12,"column_end":38},"name":"new_unexpected_token_error","qualname":"<Parser>::new_unexpected_token_error","value":"fn <E> (&self, token: Token<'i>) -> ParseError<'i, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a new unexpected token ParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new unexpected token ParseError at the current location","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82774,"byte_end":82842,"line_start":425,"line_end":425,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":82847,"byte_end":82856,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83126,"byte_end":83150,"line_start":433,"line_end":433,"column_start":12,"column_end":36},"name":"new_error_for_next_token","qualname":"<Parser>::new_error_for_next_token","value":"fn <E> (&mut self) -> ParseError<'i, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a new unexpected token or EOF ParseError at the current location\n","sig":null,"attributes":[{"value":"/ Create a new unexpected token or EOF ParseError at the current location","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83025,"byte_end":83100,"line_start":431,"line_end":431,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83105,"byte_end":83114,"line_start":432,"line_end":432,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83595,"byte_end":83600,"line_start":445,"line_end":445,"column_start":12,"column_end":17},"name":"state","qualname":"<Parser>::state","value":"fn (&self) -> ParserState","parent":null,"children":[],"decl_id":null,"docs":" Return the current internal state of the parser (including position within the input).","sig":null,"attributes":[{"value":"/ Return the current internal state of the parser (including position within the input).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83397,"byte_end":83487,"line_start":441,"line_end":441,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83492,"byte_end":83495,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This state can later be restored with the `Parser::reset` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83500,"byte_end":83569,"line_start":443,"line_end":443,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83574,"byte_end":83583,"line_start":444,"line_end":444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83860,"byte_end":83875,"line_start":454,"line_end":454,"column_start":12,"column_end":27},"name":"skip_whitespace","qualname":"<Parser>::skip_whitespace","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advance the input until the next token that’s not whitespace or a comment.\n","sig":null,"attributes":[{"value":"/ Advance the input until the next token that’s not whitespace or a comment.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83754,"byte_end":83834,"line_start":452,"line_end":452,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":83839,"byte_end":83848,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":84882,"byte_end":84887,"line_start":485,"line_end":485,"column_start":12,"column_end":17},"name":"reset","qualname":"<Parser>::reset","value":"fn (&mut self, state: &ParserState) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Restore the internal state of the parser (including position within the input)\n to what was previously saved by the `Parser::position` method.","sig":null,"attributes":[{"value":"/ Restore the internal state of the parser (including position within the input)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":84605,"byte_end":84687,"line_start":480,"line_end":480,"column_start":5,"column_end":87}},{"value":"/ to what was previously saved by the `Parser::position` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":84692,"byte_end":84758,"line_start":481,"line_end":481,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":84763,"byte_end":84766,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Should only be used with `SourcePosition` values from the same `Parser` instance.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":84771,"byte_end":84856,"line_start":483,"line_end":483,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":84861,"byte_end":84870,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85155,"byte_end":85184,"line_start":493,"line_end":493,"column_start":12,"column_end":41},"name":"look_for_var_or_env_functions","qualname":"<Parser>::look_for_var_or_env_functions","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Start looking for `var()` / `env()` functions. (See the\n `.seen_var_or_env_functions()` method.)\n","sig":null,"attributes":[{"value":"/ Start looking for `var()` / `env()` functions. (See the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85022,"byte_end":85081,"line_start":490,"line_end":490,"column_start":5,"column_end":64}},{"value":"/ `.seen_var_or_env_functions()` method.)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85086,"byte_end":85129,"line_start":491,"line_end":491,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85134,"byte_end":85143,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85466,"byte_end":85491,"line_start":501,"line_end":501,"column_start":12,"column_end":37},"name":"seen_var_or_env_functions","qualname":"<Parser>::seen_var_or_env_functions","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether a `var()` or `env()` function has been seen by the\n tokenizer since either `look_for_var_or_env_functions` was called, and\n stop looking.\n","sig":null,"attributes":[{"value":"/ Return whether a `var()` or `env()` function has been seen by the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85270,"byte_end":85339,"line_start":497,"line_end":497,"column_start":5,"column_end":74}},{"value":"/ tokenizer since either `look_for_var_or_env_functions` was called, and","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85344,"byte_end":85418,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ stop looking.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85423,"byte_end":85440,"line_start":499,"line_end":499,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85445,"byte_end":85454,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85696,"byte_end":85699,"line_start":507,"line_end":507,"column_start":12,"column_end":15},"name":"try","qualname":"<Parser>::try","value":"fn <F, T, E> (&mut self, thing: F) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" The old name of `try_parse`, which requires raw identifiers in the Rust 2018 edition.\n","sig":null,"attributes":[{"value":"/ The old name of `try_parse`, which requires raw identifiers in the Rust 2018 edition.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85581,"byte_end":85670,"line_start":505,"line_end":505,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85675,"byte_end":85684,"line_start":506,"line_end":506,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86123,"byte_end":86132,"line_start":519,"line_end":519,"column_start":12,"column_end":21},"name":"try_parse","qualname":"<Parser>::try_parse","value":"fn <F, T, E> (&mut self, thing: F) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure, passing it the parser.\n If the result (returned unchanged) is `Err`,\n the internal state of the parser  (including position within the input)\n is restored to what it was before the call.\n","sig":null,"attributes":[{"value":"/ Execute the given closure, passing it the parser.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85859,"byte_end":85912,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/ If the result (returned unchanged) is `Err`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85917,"byte_end":85965,"line_start":515,"line_end":515,"column_start":5,"column_end":53}},{"value":"/ the internal state of the parser  (including position within the input)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":85970,"byte_end":86045,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"/ is restored to what it was before the call.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86050,"byte_end":86097,"line_start":517,"line_end":517,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86102,"byte_end":86111,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86476,"byte_end":86481,"line_start":533,"line_end":533,"column_start":12,"column_end":17},"name":"slice","qualname":"<Parser>::slice","value":"fn (&self, range: Range<SourcePosition>) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Return a slice of the CSS input\n","sig":null,"attributes":[{"value":"/ Return a slice of the CSS input","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86415,"byte_end":86450,"line_start":531,"line_end":531,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86455,"byte_end":86464,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86691,"byte_end":86701,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"name":"slice_from","qualname":"<Parser>::slice_from","value":"fn (&self, start_position: SourcePosition) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Return a slice of the CSS input, from the given position to the current one.\n","sig":null,"attributes":[{"value":"/ Return a slice of the CSS input, from the given position to the current one.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86585,"byte_end":86665,"line_start":537,"line_end":537,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86670,"byte_end":86679,"line_start":538,"line_end":538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":87423,"byte_end":87427,"line_start":554,"line_end":554,"column_start":12,"column_end":16},"name":"next","qualname":"<Parser>::next","value":"fn (&mut self) -> Result<&Token<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Return the next token in the input that is neither whitespace or a comment,\n and advance the position accordingly.","sig":null,"attributes":[{"value":"/ Return the next token in the input that is neither whitespace or a comment,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86821,"byte_end":86900,"line_start":543,"line_end":543,"column_start":5,"column_end":84}},{"value":"/ and advance the position accordingly.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86905,"byte_end":86946,"line_start":544,"line_end":544,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86951,"byte_end":86954,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ After returning a `Function`, `ParenthesisBlock`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":86959,"byte_end":87012,"line_start":546,"line_end":546,"column_start":5,"column_end":58}},{"value":"/ `CurlyBracketBlock`, or `SquareBracketBlock` token,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":87017,"byte_end":87072,"line_start":547,"line_end":547,"column_start":5,"column_end":60}},{"value":"/ the next call will skip until after the matching `CloseParenthesis`,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":87077,"byte_end":87149,"line_start":548,"line_end":548,"column_start":5,"column_end":77}},{"value":"/ `CloseCurlyBracket`, or `CloseSquareBracket` token.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":87154,"byte_end":87209,"line_start":549,"line_end":549,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":87214,"byte_end":87217,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ See the `Parser::parse_nested_block` method to parse the content of functions or blocks.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":87222,"byte_end":87314,"line_start":551,"line_end":551,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":87319,"byte_end":87322,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This only returns a closing token when it is unmatched (and therefore an error).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":87327,"byte_end":87411,"line_start":553,"line_end":553,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":87657,"byte_end":87682,"line_start":560,"line_end":560,"column_start":12,"column_end":37},"name":"next_including_whitespace","qualname":"<Parser>::next_including_whitespace","value":"fn (&mut self) -> Result<&Token<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Parser::next`, but does not skip whitespace tokens.\n","sig":null,"attributes":[{"value":"/ Same as `Parser::next`, but does not skip whitespace tokens.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":87581,"byte_end":87645,"line_start":559,"line_end":559,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":88358,"byte_end":88396,"line_start":577,"line_end":577,"column_start":12,"column_end":50},"name":"next_including_whitespace_and_comments","qualname":"<Parser>::next_including_whitespace_and_comments","value":"fn (&mut self) -> Result<&Token<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Parser::next`, but does not skip whitespace or comment tokens.","sig":null,"attributes":[{"value":"/ Same as `Parser::next`, but does not skip whitespace or comment tokens.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":88011,"byte_end":88086,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":88091,"byte_end":88094,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ **Note**: This should only be used in contexts like a CSS pre-processor","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":88099,"byte_end":88174,"line_start":573,"line_end":573,"column_start":5,"column_end":80}},{"value":"/ where comments are preserved.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":88179,"byte_end":88212,"line_start":574,"line_end":574,"column_start":5,"column_end":38}},{"value":"/ When parsing higher-level values, per the CSS Syntax specification,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":88217,"byte_end":88288,"line_start":575,"line_end":575,"column_start":5,"column_end":76}},{"value":"/ comments should always be ignored between tokens.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":88293,"byte_end":88346,"line_start":576,"line_end":576,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90399,"byte_end":90413,"line_start":630,"line_end":630,"column_start":12,"column_end":26},"name":"parse_entirely","qualname":"<Parser>::parse_entirely","value":"fn <F, T, E> (&mut self, parse: F) -> Result<T, ParseError<'i, E>>","parent":null,"children":[],"decl_id":null,"docs":" Have the given closure parse something, then check the the input is exhausted.\n The result is overridden to `Err(())` if some input remains.","sig":null,"attributes":[{"value":"/ Have the given closure parse something, then check the the input is exhausted.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90141,"byte_end":90223,"line_start":625,"line_end":625,"column_start":5,"column_end":87}},{"value":"/ The result is overridden to `Err(())` if some input remains.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90228,"byte_end":90292,"line_start":626,"line_end":626,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90297,"byte_end":90300,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ This can help tell e.g. `color: green;` from `color: green 4px;`","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90305,"byte_end":90373,"line_start":628,"line_end":628,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90378,"byte_end":90387,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":91234,"byte_end":91255,"line_start":650,"line_end":650,"column_start":12,"column_end":33},"name":"parse_comma_separated","qualname":"<Parser>::parse_comma_separated","value":"fn <F, T, E> (&mut self, mut parse_one: F) -> Result<Vec<T>, ParseError<'i, E>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a list of comma-separated values, all with the same syntax.","sig":null,"attributes":[{"value":"/ Parse a list of comma-separated values, all with the same syntax.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90663,"byte_end":90732,"line_start":639,"line_end":639,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90737,"byte_end":90740,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ The given closure is called repeatedly with a \"delimited\" parser","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90745,"byte_end":90813,"line_start":641,"line_end":641,"column_start":5,"column_end":73}},{"value":"/ (see the `Parser::parse_until_before` method)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90818,"byte_end":90867,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/ so that it can over consume the input past a comma at this block/function nesting level.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90872,"byte_end":90964,"line_start":643,"line_end":643,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90969,"byte_end":90972,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Successful results are accumulated in a vector.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":90977,"byte_end":91028,"line_start":645,"line_end":645,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":91033,"byte_end":91036,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This method retuns `Err(())` the first time that a closure call does,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":91041,"byte_end":91114,"line_start":647,"line_end":647,"column_start":5,"column_end":78}},{"value":"/ or if a closure call leaves some input before the next comma or the end of the input.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":91119,"byte_end":91208,"line_start":648,"line_end":648,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":91213,"byte_end":91222,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92782,"byte_end":92800,"line_start":685,"line_end":685,"column_start":12,"column_end":30},"name":"parse_nested_block","qualname":"<Parser>::parse_nested_block","value":"fn <F, T, E> (&mut self, parse: F) -> Result<T, ParseError<'i, E>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the content of a block or function.","sig":null,"attributes":[{"value":"/ Parse the content of a block or function.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92176,"byte_end":92221,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92226,"byte_end":92229,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ This method panics if the last token yielded by this parser","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92234,"byte_end":92297,"line_start":675,"line_end":675,"column_start":5,"column_end":68}},{"value":"/ (from one of the `next*` methods)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92302,"byte_end":92339,"line_start":676,"line_end":676,"column_start":5,"column_end":42}},{"value":"/ is not a on that marks the start of a block or function:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92344,"byte_end":92404,"line_start":677,"line_end":677,"column_start":5,"column_end":65}},{"value":"/ a `Function`, `ParenthesisBlock`, `CurlyBracketBlock`, or `SquareBracketBlock`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92409,"byte_end":92492,"line_start":678,"line_end":678,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92497,"byte_end":92500,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ The given closure is called with a \"delimited\" parser","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92505,"byte_end":92562,"line_start":680,"line_end":680,"column_start":5,"column_end":62}},{"value":"/ that stops at the end of the block or function (at the matching closing token).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92567,"byte_end":92650,"line_start":681,"line_end":681,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92655,"byte_end":92658,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The result is overridden to `Err(())` if the closure leaves some input before that point.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92663,"byte_end":92756,"line_start":683,"line_end":683,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":92761,"byte_end":92770,"line_start":684,"line_end":684,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93493,"byte_end":93511,"line_start":701,"line_end":701,"column_start":12,"column_end":30},"name":"parse_until_before","qualname":"<Parser>::parse_until_before","value":"fn <F, T, E> (&mut self, delimiters: Delimiters, parse: F) -> Result<T, ParseError<'i, E>>","parent":null,"children":[],"decl_id":null,"docs":" Limit parsing to until a given delimiter or the end of the input. (E.g.\n a semicolon for a property value.)","sig":null,"attributes":[{"value":"/ Limit parsing to until a given delimiter or the end of the input. (E.g.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93012,"byte_end":93087,"line_start":692,"line_end":692,"column_start":5,"column_end":80}},{"value":"/ a semicolon for a property value.)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93092,"byte_end":93130,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93135,"byte_end":93138,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ The given closure is called with a \"delimited\" parser","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93143,"byte_end":93200,"line_start":695,"line_end":695,"column_start":5,"column_end":62}},{"value":"/ that stops before the first character at this block/function nesting level","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93205,"byte_end":93283,"line_start":696,"line_end":696,"column_start":5,"column_end":83}},{"value":"/ that matches the given set of delimiters, or at the end of the input.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93288,"byte_end":93361,"line_start":697,"line_end":697,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93366,"byte_end":93369,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ The result is overridden to `Err(())` if the closure leaves some input before that point.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93374,"byte_end":93467,"line_start":699,"line_end":699,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93472,"byte_end":93481,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":94106,"byte_end":94123,"line_start":718,"line_end":718,"column_start":12,"column_end":29},"name":"parse_until_after","qualname":"<Parser>::parse_until_after","value":"fn <F, T, E> (&mut self, delimiters: Delimiters, parse: F) -> Result<T, ParseError<'i, E>>","parent":null,"children":[],"decl_id":null,"docs":" Like `parse_until_before`, but also consume the delimiter token.","sig":null,"attributes":[{"value":"/ Like `parse_until_before`, but also consume the delimiter token.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93790,"byte_end":93858,"line_start":712,"line_end":712,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93863,"byte_end":93866,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you don’t need to know which delimiter it was","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93871,"byte_end":93946,"line_start":714,"line_end":714,"column_start":5,"column_end":78}},{"value":"/ (e.g. if these is only one in the given set)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":93951,"byte_end":93999,"line_start":715,"line_end":715,"column_start":5,"column_end":53}},{"value":"/ or if it was there at all (as opposed to reaching the end of the input).","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":94004,"byte_end":94080,"line_start":716,"line_end":716,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":94085,"byte_end":94094,"line_start":717,"line_end":717,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":94479,"byte_end":94496,"line_start":731,"line_end":731,"column_start":12,"column_end":29},"name":"expect_whitespace","qualname":"<Parser>::expect_whitespace","value":"fn (&mut self) -> Result<&'i str, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <whitespace-token> and return its value.\n","sig":null,"attributes":[{"value":"/ Parse a <whitespace-token> and return its value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":94401,"byte_end":94453,"line_start":729,"line_end":729,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":94458,"byte_end":94467,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":94903,"byte_end":94915,"line_start":741,"line_end":741,"column_start":12,"column_end":24},"name":"expect_ident","qualname":"<Parser>::expect_ident","value":"fn (&mut self) -> Result<&CowRcStr<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <ident-token> and return the unescaped value.\n","sig":null,"attributes":[{"value":"/ Parse a <ident-token> and return the unescaped value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":94820,"byte_end":94877,"line_start":739,"line_end":739,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":94882,"byte_end":94891,"line_start":740,"line_end":740,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95135,"byte_end":95154,"line_start":749,"line_end":749,"column_start":12,"column_end":31},"name":"expect_ident_cloned","qualname":"<Parser>::expect_ident_cloned","value":"fn (&mut self) -> Result<CowRcStr<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" expect_ident, but clone the CowRcStr\n","sig":null,"attributes":[{"value":"/ expect_ident, but clone the CowRcStr","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95069,"byte_end":95109,"line_start":747,"line_end":747,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95114,"byte_end":95123,"line_start":748,"line_end":748,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95395,"byte_end":95416,"line_start":755,"line_end":755,"column_start":12,"column_end":33},"name":"expect_ident_matching","qualname":"<Parser>::expect_ident_matching","value":"fn (&mut self, expected_value: &str) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <ident-token> whose unescaped value is an ASCII-insensitive match for the given value.\n","sig":null,"attributes":[{"value":"/ Parse a <ident-token> whose unescaped value is an ASCII-insensitive match for the given value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95271,"byte_end":95369,"line_start":753,"line_end":753,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95374,"byte_end":95383,"line_start":754,"line_end":754,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95731,"byte_end":95744,"line_start":766,"line_end":766,"column_start":12,"column_end":25},"name":"expect_string","qualname":"<Parser>::expect_string","value":"fn (&mut self) -> Result<&CowRcStr<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <string-token> and return the unescaped value.\n","sig":null,"attributes":[{"value":"/ Parse a <string-token> and return the unescaped value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95647,"byte_end":95705,"line_start":764,"line_end":764,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95710,"byte_end":95719,"line_start":765,"line_end":765,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95972,"byte_end":95992,"line_start":774,"line_end":774,"column_start":12,"column_end":32},"name":"expect_string_cloned","qualname":"<Parser>::expect_string_cloned","value":"fn (&mut self) -> Result<CowRcStr<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" expect_string, but clone the CowRcStr\n","sig":null,"attributes":[{"value":"/ expect_string, but clone the CowRcStr","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95905,"byte_end":95946,"line_start":772,"line_end":772,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":95951,"byte_end":95960,"line_start":773,"line_end":773,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":96221,"byte_end":96243,"line_start":780,"line_end":780,"column_start":12,"column_end":34},"name":"expect_ident_or_string","qualname":"<Parser>::expect_ident_or_string","value":"fn (&mut self) -> Result<&CowRcStr<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse either a <ident-token> or a <string-token>, and return the unescaped value.\n","sig":null,"attributes":[{"value":"/ Parse either a <ident-token> or a <string-token>, and return the unescaped value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":96110,"byte_end":96195,"line_start":778,"line_end":778,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":96200,"byte_end":96209,"line_start":779,"line_end":779,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":96535,"byte_end":96545,"line_start":789,"line_end":789,"column_start":12,"column_end":22},"name":"expect_url","qualname":"<Parser>::expect_url","value":"fn (&mut self) -> Result<CowRcStr<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <url-token> and return the unescaped value.\n","sig":null,"attributes":[{"value":"/ Parse a <url-token> and return the unescaped value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":96454,"byte_end":96509,"line_start":787,"line_end":787,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":96514,"byte_end":96523,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":97146,"byte_end":97166,"line_start":803,"line_end":803,"column_start":12,"column_end":32},"name":"expect_url_or_string","qualname":"<Parser>::expect_url_or_string","value":"fn (&mut self) -> Result<CowRcStr<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse either a <url-token> or a <string-token>, and return the unescaped value.\n","sig":null,"attributes":[{"value":"/ Parse either a <url-token> or a <string-token>, and return the unescaped value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":97037,"byte_end":97120,"line_start":801,"line_end":801,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":97125,"byte_end":97134,"line_start":802,"line_end":802,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":97812,"byte_end":97825,"line_start":818,"line_end":818,"column_start":12,"column_end":25},"name":"expect_number","qualname":"<Parser>::expect_number","value":"fn (&mut self) -> Result<f32, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <number-token> and return the integer value.\n","sig":null,"attributes":[{"value":"/ Parse a <number-token> and return the integer value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":97730,"byte_end":97786,"line_start":816,"line_end":816,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":97791,"byte_end":97800,"line_start":817,"line_end":817,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98093,"byte_end":98107,"line_start":826,"line_end":826,"column_start":12,"column_end":26},"name":"expect_integer","qualname":"<Parser>::expect_integer","value":"fn (&mut self) -> Result<i32, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <number-token> that does not have a fractional part, and return the integer value.\n","sig":null,"attributes":[{"value":"/ Parse a <number-token> that does not have a fractional part, and return the integer value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":97973,"byte_end":98067,"line_start":824,"line_end":824,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98072,"byte_end":98081,"line_start":825,"line_end":825,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98434,"byte_end":98451,"line_start":835,"line_end":835,"column_start":12,"column_end":29},"name":"expect_percentage","qualname":"<Parser>::expect_percentage","value":"fn (&mut self) -> Result<f32, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <percentage-token> and return the value.\n `0%` and `100%` map to `0.0` and `1.0` (not `100.0`), respectively.\n","sig":null,"attributes":[{"value":"/ Parse a <percentage-token> and return the value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98280,"byte_end":98332,"line_start":832,"line_end":832,"column_start":5,"column_end":57}},{"value":"/ `0%` and `100%` map to `0.0` and `1.0` (not `100.0`), respectively.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98337,"byte_end":98408,"line_start":833,"line_end":833,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98413,"byte_end":98422,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98669,"byte_end":98681,"line_start":843,"line_end":843,"column_start":12,"column_end":24},"name":"expect_colon","qualname":"<Parser>::expect_colon","value":"fn (&mut self) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `:` <colon-token>.\n","sig":null,"attributes":[{"value":"/ Parse a `:` <colon-token>.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98613,"byte_end":98643,"line_start":841,"line_end":841,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98648,"byte_end":98657,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98870,"byte_end":98886,"line_start":851,"line_end":851,"column_start":12,"column_end":28},"name":"expect_semicolon","qualname":"<Parser>::expect_semicolon","value":"fn (&mut self) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `;` <semicolon-token>.\n","sig":null,"attributes":[{"value":"/ Parse a `;` <semicolon-token>.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98810,"byte_end":98844,"line_start":849,"line_end":849,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":98849,"byte_end":98858,"line_start":850,"line_end":850,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99075,"byte_end":99087,"line_start":859,"line_end":859,"column_start":12,"column_end":24},"name":"expect_comma","qualname":"<Parser>::expect_comma","value":"fn (&mut self) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `,` <comma-token>.\n","sig":null,"attributes":[{"value":"/ Parse a `,` <comma-token>.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99019,"byte_end":99049,"line_start":857,"line_end":857,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99054,"byte_end":99063,"line_start":858,"line_end":858,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99289,"byte_end":99301,"line_start":867,"line_end":867,"column_start":12,"column_end":24},"name":"expect_delim","qualname":"<Parser>::expect_delim","value":"fn (&mut self, expected_value: char) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <delim-token> with the given value.\n","sig":null,"attributes":[{"value":"/ Parse a <delim-token> with the given value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99216,"byte_end":99263,"line_start":865,"line_end":865,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99268,"byte_end":99277,"line_start":866,"line_end":866,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99659,"byte_end":99685,"line_start":877,"line_end":877,"column_start":12,"column_end":38},"name":"expect_curly_bracket_block","qualname":"<Parser>::expect_curly_bracket_block","value":"fn (&mut self) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `{ /* ... */ }` curly brackets block.","sig":null,"attributes":[{"value":"/ Parse a `{ /* ... */ }` curly brackets block.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99486,"byte_end":99535,"line_start":873,"line_end":873,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99540,"byte_end":99543,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok`, you can then call the `Parser::parse_nested_block` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99548,"byte_end":99633,"line_start":875,"line_end":875,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99638,"byte_end":99647,"line_start":876,"line_end":876,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100000,"byte_end":100027,"line_start":887,"line_end":887,"column_start":12,"column_end":39},"name":"expect_square_bracket_block","qualname":"<Parser>::expect_square_bracket_block","value":"fn (&mut self) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `[ /* ... */ ]` square brackets block.","sig":null,"attributes":[{"value":"/ Parse a `[ /* ... */ ]` square brackets block.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99826,"byte_end":99876,"line_start":883,"line_end":883,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99881,"byte_end":99884,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok`, you can then call the `Parser::parse_nested_block` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99889,"byte_end":99974,"line_start":885,"line_end":885,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":99979,"byte_end":99988,"line_start":886,"line_end":886,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100339,"byte_end":100363,"line_start":897,"line_end":897,"column_start":12,"column_end":36},"name":"expect_parenthesis_block","qualname":"<Parser>::expect_parenthesis_block","value":"fn (&mut self) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `( /* ... */ )` parenthesis block.","sig":null,"attributes":[{"value":"/ Parse a `( /* ... */ )` parenthesis block.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100169,"byte_end":100215,"line_start":893,"line_end":893,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100220,"byte_end":100223,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok`, you can then call the `Parser::parse_nested_block` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100228,"byte_end":100313,"line_start":895,"line_end":895,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100318,"byte_end":100327,"line_start":896,"line_end":896,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100676,"byte_end":100691,"line_start":907,"line_end":907,"column_start":12,"column_end":27},"name":"expect_function","qualname":"<Parser>::expect_function","value":"fn (&mut self) -> Result<&CowRcStr<'i>, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <function> token and return its name.","sig":null,"attributes":[{"value":"/ Parse a <function> token and return its name.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100503,"byte_end":100552,"line_start":903,"line_end":903,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100557,"byte_end":100560,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok`, you can then call the `Parser::parse_nested_block` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100565,"byte_end":100650,"line_start":905,"line_end":905,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100655,"byte_end":100664,"line_start":906,"line_end":906,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":101060,"byte_end":101084,"line_start":917,"line_end":917,"column_start":12,"column_end":36},"name":"expect_function_matching","qualname":"<Parser>::expect_function_matching","value":"fn (&mut self, expected_name: &str) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a <function> token whose name is an ASCII-insensitive match for the given value.","sig":null,"attributes":[{"value":"/ Parse a <function> token whose name is an ASCII-insensitive match for the given value.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100846,"byte_end":100936,"line_start":913,"line_end":913,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100941,"byte_end":100944,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ If the result is `Ok`, you can then call the `Parser::parse_nested_block` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":100949,"byte_end":101034,"line_start":915,"line_end":915,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":101039,"byte_end":101048,"line_start":916,"line_end":916,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":101528,"byte_end":101549,"line_start":930,"line_end":930,"column_start":12,"column_end":33},"name":"expect_no_error_token","qualname":"<Parser>::expect_no_error_token","value":"fn (&mut self) -> Result<(), BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the input until exhaustion and check that it contains no “error” token.","sig":null,"attributes":[{"value":"/ Parse the input until exhaustion and check that it contains no “error” token.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":101314,"byte_end":101399,"line_start":926,"line_end":926,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":101404,"byte_end":101407,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ See `Token::is_parse_error`. This also checks nested blocks and functions recursively.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":101412,"byte_end":101502,"line_start":928,"line_end":928,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":101507,"byte_end":101516,"line_start":929,"line_end":929,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":613},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":107114,"byte_end":107119,"line_start":14,"line_end":14,"column_start":11,"column_end":16},"name":"ToCss","qualname":"::serializer::ToCss","value":"ToCss","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":616}],"decl_id":null,"docs":" Trait for things the can serialize themselves in CSS syntax.\n","sig":null,"attributes":[{"value":"/ Trait for things the can serialize themselves in CSS syntax.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":107039,"byte_end":107103,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":107188,"byte_end":107194,"line_start":16,"line_end":16,"column_start":8,"column_end":14},"name":"to_css","qualname":"::serializer::ToCss::to_css","value":"fn <W> (&self, dest: &mut W) -> fmt::Result","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Serialize `self` in CSS syntax, writing to `dest`.\n","sig":null,"attributes":[{"value":"/ Serialize `self` in CSS syntax, writing to `dest`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":107126,"byte_end":107180,"line_start":15,"line_end":15,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":107449,"byte_end":107462,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"to_css_string","qualname":"::serializer::ToCss::to_css_string","value":"fn (&self) -> String","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Serialize `self` in CSS syntax and return a string.","sig":null,"attributes":[{"value":"/ Serialize `self` in CSS syntax and return a string.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":107272,"byte_end":107327,"line_start":20,"line_end":20,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":107332,"byte_end":107335,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ (This is a convenience wrapper for `to_css` and probably should not be overridden.)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":107340,"byte_end":107427,"line_start":22,"line_end":22,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":107432,"byte_end":107441,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":629},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":113230,"byte_end":113250,"line_start":192,"line_end":192,"column_start":8,"column_end":28},"name":"serialize_identifier","qualname":"::serializer::serialize_identifier","value":"fn <W> (mut value: &str, dest: &mut W) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Write a CSS identifier, escaping characters as necessary.\n","sig":null,"attributes":[{"value":"/ Write a CSS identifier, escaping characters as necessary.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":113161,"byte_end":113222,"line_start":191,"line_end":191,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":631},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":114046,"byte_end":114060,"line_start":222,"line_end":222,"column_start":8,"column_end":22},"name":"serialize_name","qualname":"::serializer::serialize_name","value":"fn <W> (value: &str, dest: &mut W) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Write a CSS name, like a custom property name.","sig":null,"attributes":[{"value":"/ Write a CSS name, like a custom property name.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":113864,"byte_end":113914,"line_start":218,"line_end":218,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":113915,"byte_end":113918,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ You should only use this when you know what you're doing, when in doubt,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":113919,"byte_end":113995,"line_start":220,"line_end":220,"column_start":1,"column_end":77}},{"value":"/ consider using `serialize_identifier`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":113996,"byte_end":114038,"line_start":221,"line_end":221,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":635},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115471,"byte_end":115487,"line_start":270,"line_end":270,"column_start":8,"column_end":24},"name":"serialize_string","qualname":"::serializer::serialize_string","value":"fn <W> (value: &str, dest: &mut W) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Write a double-quoted CSS string token, escaping content as necessary.\n","sig":null,"attributes":[{"value":"/ Write a double-quoted CSS string token, escaping content as necessary.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115389,"byte_end":115463,"line_start":269,"line_end":269,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":637},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116150,"byte_end":116165,"line_start":296,"line_end":296,"column_start":12,"column_end":27},"name":"CssStringWriter","qualname":"::serializer::CssStringWriter","value":"CssStringWriter {  }","parent":null,"children":[{"krate":0,"index":640}],"decl_id":null,"docs":" A `fmt::Write` adapter that escapes text for writing as a double-quoted CSS string.\n Quotes are not included.","sig":null,"attributes":[{"value":"/ A `fmt::Write` adapter that escapes text for writing as a double-quoted CSS string.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115678,"byte_end":115765,"line_start":280,"line_end":280,"column_start":1,"column_end":88}},{"value":"/ Quotes are not included.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115766,"byte_end":115794,"line_start":281,"line_end":281,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115795,"byte_end":115798,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Typical usage:","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115799,"byte_end":115817,"line_start":283,"line_end":283,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115818,"byte_end":115821,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ ```{rust,ignore}","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115822,"byte_end":115842,"line_start":285,"line_end":285,"column_start":1,"column_end":21}},{"value":"/ fn write_foo<W>(foo: &Foo, dest: &mut W) -> fmt::Result where W: fmt::Write {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115843,"byte_end":115924,"line_start":286,"line_end":286,"column_start":1,"column_end":82}},{"value":"/     dest.write_str(\"\\\"\")?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115925,"byte_end":115955,"line_start":287,"line_end":287,"column_start":1,"column_end":31}},{"value":"/     {","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115956,"byte_end":115965,"line_start":288,"line_end":288,"column_start":1,"column_end":10}},{"value":"/         let mut string_dest = CssStringWriter::new(dest);","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":115966,"byte_end":116027,"line_start":289,"line_end":289,"column_start":1,"column_end":62}},{"value":"/         // Write into string_dest...","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116028,"byte_end":116068,"line_start":290,"line_end":290,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116069,"byte_end":116078,"line_start":291,"line_end":291,"column_start":1,"column_end":10}},{"value":"/     dest.write_str(\"\\\"\")?;","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116079,"byte_end":116109,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/     Ok(())","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116110,"byte_end":116124,"line_start":293,"line_end":293,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116125,"byte_end":116130,"line_start":294,"line_end":294,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116131,"byte_end":116138,"line_start":295,"line_end":295,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116335,"byte_end":116338,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"name":"new","qualname":"<CssStringWriter>::new","value":"fn (inner: &'a mut W) -> CssStringWriter<'a, W>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a text writer to create a `CssStringWriter`.\n","sig":null,"attributes":[{"value":"/ Wrap a text writer to create a `CssStringWriter`.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116270,"byte_end":116323,"line_start":304,"line_end":304,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1675},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":119253,"byte_end":119275,"line_start":402,"line_end":402,"column_start":12,"column_end":34},"name":"TokenSerializationType","qualname":"::serializer::TokenSerializationType","value":"","parent":null,"children":[],"decl_id":null,"docs":" A category of token. See the `needs_separator_when_before` method.\n","sig":null,"attributes":[{"value":"/ A category of token. See the `needs_separator_when_before` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":119126,"byte_end":119196,"line_start":400,"line_end":400,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":119525,"byte_end":119532,"line_start":409,"line_end":409,"column_start":12,"column_end":19},"name":"nothing","qualname":"<TokenSerializationType>::nothing","value":"fn () -> TokenSerializationType","parent":null,"children":[],"decl_id":null,"docs":" Return a value that represents the absence of a token, e.g. before the start of the input.\n","sig":null,"attributes":[{"value":"/ Return a value that represents the absence of a token, e.g. before the start of the input.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":119419,"byte_end":119513,"line_start":408,"line_end":408,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":119750,"byte_end":119764,"line_start":414,"line_end":414,"column_start":12,"column_end":26},"name":"set_if_nothing","qualname":"<TokenSerializationType>::set_if_nothing","value":"fn (&mut self, new_value: TokenSerializationType) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If this value is `TokenSerializationType::nothing()`, set it to the given value instead.\n","sig":null,"attributes":[{"value":"/ If this value is `TokenSerializationType::nothing()`, set it to the given value instead.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":119646,"byte_end":119738,"line_start":413,"line_end":413,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":120386,"byte_end":120413,"line_start":429,"line_end":429,"column_start":12,"column_end":39},"name":"needs_separator_when_before","qualname":"<TokenSerializationType>::needs_separator_when_before","value":"fn (self, other: TokenSerializationType) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if, when a token of category `self` is serialized just before\n a token of category `other` with no whitespace in between,\n an empty comment `/**/` needs to be inserted between them\n so that they are not re-parsed as a single token.","sig":null,"attributes":[{"value":"/ Return true if, when a token of category `self` is serialized just before","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":119930,"byte_end":120007,"line_start":420,"line_end":420,"column_start":5,"column_end":82}},{"value":"/ a token of category `other` with no whitespace in between,","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":120012,"byte_end":120074,"line_start":421,"line_end":421,"column_start":5,"column_end":67}},{"value":"/ an empty comment `/**/` needs to be inserted between them","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":120079,"byte_end":120140,"line_start":422,"line_end":422,"column_start":5,"column_end":66}},{"value":"/ so that they are not re-parsed as a single token.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":120145,"byte_end":120198,"line_start":423,"line_end":423,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":120203,"byte_end":120206,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ See https://drafts.csswg.org/css-syntax/#serialization","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":120211,"byte_end":120269,"line_start":425,"line_end":425,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":120274,"byte_end":120277,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ See https://github.com/w3c/csswg-drafts/issues/4088 for the","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":120282,"byte_end":120345,"line_start":427,"line_end":427,"column_start":5,"column_end":68}},{"value":"/ `DelimPercent` bits.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":120350,"byte_end":120374,"line_start":428,"line_end":428,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":122990,"byte_end":123008,"line_start":501,"line_end":501,"column_start":12,"column_end":30},"name":"serialization_type","qualname":"<Token>::serialization_type","value":"fn (&self) -> TokenSerializationType","parent":null,"children":[],"decl_id":null,"docs":" Categorize a token into a type that determines when `/**/` needs to be inserted\n between two tokens when serialized next to each other without whitespace in between.","sig":null,"attributes":[{"value":"/ Categorize a token into a type that determines when `/**/` needs to be inserted","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":122716,"byte_end":122799,"line_start":497,"line_end":497,"column_start":5,"column_end":88}},{"value":"/ between two tokens when serialized next to each other without whitespace in between.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":122804,"byte_end":122892,"line_start":498,"line_end":498,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":122897,"byte_end":122900,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ See the `TokenSerializationType::needs_separator_when_before` method.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":122905,"byte_end":122978,"line_start":500,"line_end":500,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1752},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125422,"byte_end":125434,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"UnicodeRange","qualname":"::unicode_range::UnicodeRange","value":"UnicodeRange { start, end }","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":1754}],"decl_id":null,"docs":" One contiguous range of code points.","sig":null,"attributes":[{"value":"/ One contiguous range of code points.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125242,"byte_end":125282,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125283,"byte_end":125286,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Can not be empty. Can represent a single code point when start == end.","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125287,"byte_end":125361,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"repr(C)","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125400,"byte_end":125410,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1753},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125496,"byte_end":125501,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"name":"start","qualname":"::unicode_range::UnicodeRange::start","value":"u32","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Inclusive start of the range. In [0, end].\n","sig":null,"attributes":[{"value":"/ Inclusive start of the range. In [0, end].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125441,"byte_end":125487,"line_start":18,"line_end":18,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1754},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125571,"byte_end":125574,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"end","qualname":"::unicode_range::UnicodeRange::end","value":"u32","parent":{"krate":0,"index":1752},"children":[],"decl_id":null,"docs":" Inclusive end of the range. In [0, 0x10FFFF].\n","sig":null,"attributes":[{"value":"/ Inclusive end of the range. In [0, 0x10FFFF].","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125513,"byte_end":125562,"line_start":21,"line_end":21,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125674,"byte_end":125679,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"parse","qualname":"<UnicodeRange>::parse","value":"fn <'i, 't> (input: &mut Parser<'i, 't>) -> Result<Self, BasicParseError<'i>>","parent":null,"children":[],"decl_id":null,"docs":" https://drafts.csswg.org/css-syntax/#urange-syntax\n","sig":null,"attributes":[{"value":"/ https://drafts.csswg.org/css-syntax/#urange-syntax","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125608,"byte_end":125662,"line_start":26,"line_end":26,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20455,"byte_end":20476,"line_start":232,"line_end":232,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":21728,"byte_end":21749,"line_start":260,"line_end":260,"column_start":52,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24337,"byte_end":24351,"line_start":325,"line_end":325,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":26046,"byte_end":26060,"line_start":366,"line_end":366,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7911024,"byte_end":7911029,"line_start":9,"line_end":9,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7912207,"byte_end":7912216,"line_start":17,"line_end":17,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7927534,"byte_end":7927548,"line_start":177,"line_end":177,"column_start":213,"column_end":227},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33795,"byte_end":33799,"line_start":27,"line_end":27,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":35962,"byte_end":35966,"line_start":107,"line_end":107,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37082,"byte_end":37087,"line_start":147,"line_end":147,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37705,"byte_end":37723,"line_start":174,"line_end":174,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38214,"byte_end":38227,"line_start":197,"line_end":197,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":40949,"byte_end":40971,"line_start":274,"line_end":274,"column_start":39,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":41003,"byte_end":41008,"line_start":278,"line_end":278,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":271},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":58639,"byte_end":58647,"line_start":45,"line_end":45,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":58870,"byte_end":58878,"line_start":55,"line_end":55,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":59188,"byte_end":59196,"line_start":68,"line_end":68,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":59306,"byte_end":59314,"line_start":75,"line_end":75,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":60033,"byte_end":60041,"line_start":101,"line_end":101,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":60473,"byte_end":60481,"line_start":116,"line_end":116,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":60659,"byte_end":60667,"line_start":125,"line_end":125,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":60876,"byte_end":60884,"line_start":136,"line_end":136,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":60983,"byte_end":60991,"line_start":143,"line_end":143,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61086,"byte_end":61094,"line_start":150,"line_end":150,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61198,"byte_end":61206,"line_start":157,"line_end":157,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61363,"byte_end":61371,"line_start":164,"line_end":164,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61519,"byte_end":61527,"line_start":171,"line_end":171,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61684,"byte_end":61692,"line_start":178,"line_end":178,"column_start":17,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61718,"byte_end":61726,"line_start":180,"line_end":180,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61863,"byte_end":61871,"line_start":187,"line_end":187,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":62026,"byte_end":62034,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70120,"byte_end":70131,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71443,"byte_end":71453,"line_start":65,"line_end":65,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71673,"byte_end":71687,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72924,"byte_end":72938,"line_start":113,"line_end":113,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73589,"byte_end":73599,"line_start":135,"line_end":135,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":74488,"byte_end":74499,"line_start":171,"line_end":171,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":75713,"byte_end":75722,"line_start":213,"line_end":213,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":77833,"byte_end":77843,"line_start":271,"line_end":271,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":78032,"byte_end":78042,"line_start":282,"line_end":282,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79119,"byte_end":79125,"line_start":318,"line_end":318,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":514},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":529},{"krate":0,"index":534},{"krate":0,"index":539},{"krate":0,"index":544},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":108339,"byte_end":108344,"line_start":60,"line_end":60,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116216,"byte_end":116231,"line_start":300,"line_end":300,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116462,"byte_end":116477,"line_start":310,"line_end":310,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":119390,"byte_end":119412,"line_start":407,"line_end":407,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":122700,"byte_end":122705,"line_start":496,"line_end":496,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125589,"byte_end":125601,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":130157,"byte_end":130169,"line_start":162,"line_end":162,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":130294,"byte_end":130306,"line_start":168,"line_end":168,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":20455,"byte_end":20476,"line_start":232,"line_end":232,"column_start":39,"column_end":60},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":21728,"byte_end":21749,"line_start":260,"line_end":260,"column_start":52,"column_end":73},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":123},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":24337,"byte_end":24351,"line_start":325,"line_end":325,"column_start":39,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/rules_and_declarations.rs","byte_start":26046,"byte_end":26060,"line_start":366,"line_end":366,"column_start":52,"column_end":66},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":4772}},{"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7911024,"byte_end":7911029,"line_start":9,"line_end":9,"column_start":15,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7912207,"byte_end":7912216,"line_start":17,"line_end":17,"column_start":15,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/Desktop/PL_538_Assignments/hw6/RSS indexer/target/rls/debug/build/cssparser-50b9464aabb95e43/out/tokenizer.rs","byte_start":7927534,"byte_end":7927548,"line_start":177,"line_end":177,"column_start":213,"column_end":227},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":33795,"byte_end":33799,"line_start":27,"line_end":27,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":35962,"byte_end":35966,"line_start":107,"line_end":107,"column_start":16,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1352},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37082,"byte_end":37087,"line_start":147,"line_end":147,"column_start":16,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1366},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":37705,"byte_end":37723,"line_start":174,"line_end":174,"column_start":6,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":38214,"byte_end":38227,"line_start":197,"line_end":197,"column_start":6,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":40949,"byte_end":40971,"line_start":274,"line_end":274,"column_start":39,"column_end":61},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":259},"to":{"krate":0,"index":248}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/color.rs","byte_start":41003,"byte_end":41008,"line_start":278,"line_end":278,"column_start":6,"column_end":11},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":58639,"byte_end":58647,"line_start":45,"line_end":45,"column_start":33,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":58870,"byte_end":58878,"line_start":55,"line_end":55,"column_start":28,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":59188,"byte_end":59196,"line_start":68,"line_end":68,"column_start":27,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":59306,"byte_end":59314,"line_start":75,"line_end":75,"column_start":10,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":60033,"byte_end":60041,"line_start":101,"line_end":101,"column_start":20,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1592}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":60473,"byte_end":60481,"line_start":116,"line_end":116,"column_start":19,"column_end":27},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":60659,"byte_end":60667,"line_start":125,"line_end":125,"column_start":20,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":60876,"byte_end":60884,"line_start":136,"line_end":136,"column_start":25,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":60983,"byte_end":60991,"line_start":143,"line_end":143,"column_start":26,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1570}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61086,"byte_end":61094,"line_start":150,"line_end":150,"column_start":22,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1873}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61198,"byte_end":61206,"line_start":157,"line_end":157,"column_start":25,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":6168}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61363,"byte_end":61371,"line_start":164,"line_end":164,"column_start":42,"column_end":50},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1618}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61519,"byte_end":61527,"line_start":171,"line_end":171,"column_start":43,"column_end":51},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1655}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61684,"byte_end":61692,"line_start":178,"line_end":178,"column_start":17,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61718,"byte_end":61726,"line_start":180,"line_end":180,"column_start":18,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":1644}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":61863,"byte_end":61871,"line_start":187,"line_end":187,"column_start":27,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":5982}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/cow_rc_str.rs","byte_start":62026,"byte_end":62034,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":70120,"byte_end":70131,"line_start":24,"line_end":24,"column_start":6,"column_end":17},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71443,"byte_end":71453,"line_start":65,"line_end":65,"column_start":43,"column_end":53},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1500},"to":{"krate":2,"index":1806}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":71673,"byte_end":71687,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":72924,"byte_end":72938,"line_start":113,"line_end":113,"column_start":13,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":73589,"byte_end":73599,"line_start":135,"line_end":135,"column_start":13,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":74488,"byte_end":74499,"line_start":171,"line_end":171,"column_start":10,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":75713,"byte_end":75722,"line_start":213,"line_end":213,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":77833,"byte_end":77843,"line_start":271,"line_end":271,"column_start":28,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1539},"to":{"krate":2,"index":2008}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":78032,"byte_end":78042,"line_start":282,"line_end":282,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/parser.rs","byte_start":79119,"byte_end":79125,"line_start":318,"line_end":318,"column_start":18,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":108339,"byte_end":108344,"line_start":60,"line_end":60,"column_start":20,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116216,"byte_end":116231,"line_start":300,"line_end":300,"column_start":13,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":116462,"byte_end":116477,"line_start":310,"line_end":310,"column_start":28,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":637},"to":{"krate":2,"index":5938}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":119390,"byte_end":119412,"line_start":407,"line_end":407,"column_start":6,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/serializer.rs","byte_start":122700,"byte_end":122705,"line_start":496,"line_end":496,"column_start":10,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":125589,"byte_end":125601,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":130157,"byte_end":130169,"line_start":162,"line_end":162,"column_start":21,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1752},"to":{"krate":2,"index":5977}},{"span":{"file_name":"/home/vpatil/.cargo/registry/src/github.com-1ecc6299db9ec823/cssparser-0.25.9/src/unicode_range.rs","byte_start":130294,"byte_end":130306,"line_start":168,"line_end":168,"column_start":16,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1752},"to":{"krate":0,"index":613}}]}